{"config":{"lang":["en","ja"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5de6\u5b97\u53f3","text":"<p>Introduction</p> <p>23\u200b\u5c81\u200b\uff0c\u200b\u662f\u200b\u5b66\u751f\u200b\u3002\u200b\u60f3\u200b\u6210\u4e3a\u200b\u9ad8\u624b\u200b\u3002\u200b\u66fe\u200b\u5728\u200b\u4e00\u9053\u200b\u9898\u76ee\u200b\u4e0a\u200b\u8fde\u7eed\u200b WA 196 \u200b\u6b21\u200b\uff0c\u200b\u83b7\u5f97\u200b\u79f0\u53f7\u200b\uff1a\u200b\u4f20\u5947\u200b\u8010\u200bbug\u200b\u738b\u200b\u3002</p> <p>\u200b\u767e\u5e74\u200b\u535a\u5ba2\u200b</p> <p>\u200b\u591a\u5e74\u200b\u4ee5\u540e\u200b\uff0c\u200b\u9762\u5bf9\u200b\u4eba\u8ff9\u7f55\u81f3\u200b\u7684\u200b\u7b14\u8bb0\u200b\u6587\u6863\u200b\uff0c\u200b\u5de6\u5b97\u53f3\u4f1a\u200b\u60f3\u8d77\u200b\u535a\u5ba2\u200b\u6210\u529f\u200b\u90e8\u7f72\u200b\u7684\u200b\u90a3\u4e2a\u200b\u9065\u8fdc\u200b\u7684\u200b\u4e0b\u5348\u200b\u3002</p> <p>\u200b\u90a3\u200b\u65f6\u5019\u200b\u672a\u6765\u200b\u9065\u8fdc\u200b\u7684\u200b\u6ca1\u6709\u200b\u5f62\u72b6\u200b\uff0c\u200b\u4ed6\u200b\u60f3\u200b\u7684\u200b\u53ea\u6709\u200b\u4eca\u665a\u200b\u8981\u200b\u5403\u200b\u4ec0\u4e48\u200b\u3002</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/leetcode-biweekly-contest-148/","title":"Leetcode biweekly Contest 148","text":"<p>\u200b\u4e0d\u662f\u200b\u54e5\u4eec\u513f\u200b\uff01\u200b\u53c8\u200b\u662f\u200b\u4e24\u9898\u200b\uff0c\u200b\u540e\u9762\u200b\u4e24\u9053\u200bhard\u200b\u662f\u200b\u771f\u52a8\u200b\u4e0d\u4e86\u200b\u624b\u200b\u554a\u200b\u3002\u200b\u9274\u5b9a\u200b\u4e3a\u200b\u624b\u901f\u200b\u4e24\u9898\u200b\u573a\u200b\u3002</p> <p>\u200b\u6392\u540d\u200b\uff1a522</p>"},{"location":"blog/leetcode-biweekly-contest-148/#leetcode-biweekly-contest-148","title":"Leetcode biweekly Contest 148","text":""},{"location":"blog/leetcode-biweekly-contest-148/#t1-3423","title":"T1 3423. \u200b\u5faa\u73af\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u76f8\u90bb\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u5927\u200b\u5dee\u503c","text":"<p>\u200b\u7b2c\u4e00\u200b\u9898\u200b\u80a5\u80a0\u200b\u6e29\u67d4\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u6309\u7167\u200b\u9898\u76ee\u200b\u7684\u200b\u610f\u601d\u200b\u6a21\u62df\u200b\u4e00\u904d\u200b\u5c31\u884c\u4e86\u200b\u3002\u200b\u904d\u5386\u200b\u4e00\u904d\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u76f8\u90bb\u200b\u6570\u200b\u7684\u200b\u5dee\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u6700\u5927\u503c\u200b</p> <pre><code>import java.util.*;\nclass Solution {\n    public int maxAdjacentDistance(int[] nums) {\n        int ans = Math.abs(nums[0] - nums[nums.length - 1]);\n        for(int i = 0; i &lt; nums.length - 1; i ++) {\n            ans = Math.max(ans, Math.abs(nums[i] - nums[i + 1]));\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-biweekly-contest-148/#t2-3424","title":"T2 3424. \u200b\u5c06\u200b\u6570\u7ec4\u200b\u53d8\u200b\u76f8\u540c\u200b\u7684\u200b\u6700\u5c0f\u200b\u4ee3\u4ef7","text":"<p>\u200b\u7b2c\u4e8c\u200b\u9898\u200b\u505a\u200b\u7684\u200b\u65f6\u5019\u200b\u8fd8\u662f\u200b\u6bd4\u8f83\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\uff0c\u200b\u6bd4\u8d5b\u200b\u7684\u200b\u65f6\u5019\u200b\u662f\u200b\u6309\u7167\u200b\u8d2a\u5fc3\u200b\u7684\u200b\u60f3\u6cd5\u200b\u6765\u200b\u731c\u200b\u7684\u200b\u3002\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u91cd\u65b0\u6392\u5217\u200b\u53ef\u4ee5\u200b\u5212\u5206\u200b\u6210\u200b\u6bcf\u4e2a\u200b\u5b50\u200b\u6570\u7ec4\u200b\u53ea\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6570\u200b\uff0c\u200b\u5373\u200b\u91cd\u65b0\u6392\u5217\u200b\u6ca1\u6709\u200b\u9650\u5236\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u82b1\u8d39\u200b \\(k\\) \u200b\u7684\u200b\u4ee3\u4ef7\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u4efb\u610f\u200b\u7684\u200b\u6446\u653e\u200b\u3002\u200b\u90a3\u4e48\u200b\u6211\u200b\u60f3\u200b\u7684\u200b\u5c31\u662f\u200b\u628a\u200b\u6bcf\u4e2a\u200b\u6570\u200b\u6446\u653e\u200b\u5230\u200b\u4e0e\u200b\u5b83\u200b\u5dee\u503c\u200b\u6700\u5c0f\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u53bb\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6bcf\u4e2a\u200b\u6570\u200b\u7684\u200b\u5dee\u503c\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u90fd\u200b\u5c0f\u200b\uff0c\u200b\u6700\u540e\u200b\u5f97\u5230\u200b\u7684\u200b\u5dee\u503c\u200b\u7684\u200b\u603b\u548c\u200b\u4e5f\u200b\u6700\u5c0f\u200b\u3002 \u200b\u4ece\u200b0x3f\u200b\u90a3\u200b\u770b\u200b\u7684\u200b\u4ea4\u6362\u200b\u8bba\u8bc1\u200b\u6cd5\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5373\u200b\u5bf9\u4e8e\u200b \\(brr\\) \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6570\u200b\uff0c\u200b\u82e5\u200b \\(arr\\) \u200b\u4e0d\u200b\u628a\u200b\u4e0e\u5176\u200b\u5dee\u503c\u200b\u6700\u5c0f\u200b\u7684\u200b\u6570\u200b\u653e\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f97\u5230\u200b\u7684\u200b\u5dee\u503c\u200b\u4e00\u5b9a\u200b\u6bd4\u200b\u4e4b\u524d\u200b\u7684\u200b\u5927\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6309\u7167\u200b\u539f\u200b\u601d\u8def\u200b\u8d2a\u5fc3\u200b\u662f\u200b\u5bf9\u200b\u7684\u200b\u3002</p> <pre><code>import java.util.*;\nclass Solution {\n    public long minCost(int[] arr, int[] brr, long k) {\n        long ans1 = 0;\n        int n = arr.length;\n\n        for(int i = 0; i &lt; n; i ++) {\n            ans1 += Math.abs(brr[i] - arr[i]);\n        }\n\n        Arrays.sort(arr);\n        Arrays.sort(brr);\n        long ans2 = k;\n\n        for(int i = 0; i &lt; n; i ++) {\n            ans2 += Math.abs(brr[i] - arr[i]);\n        }\n\n        return Math.min(ans1, ans2);\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-contest-430/","title":"LeetCode Contest 430","text":"<p>\u200b\u8bfb\u4e2a\u200b\u4e66\u200b\u600e\u4e48\u200b\u8fd9\u4e48\u200b\u591a\u4e8b\u200b\u554a\u200b\uff0c\u200b\u771f\u200b\u590d\u4e60\u200b\u4e0d\u200b\u8fc7\u6765\u200b\u4e86\u200b\u5367\u69fd\u200b</p> <p>\u200b\u6392\u540d\u200b: 774</p> <p>\u200b\u671f\u672b\u200b\u590d\u4e60\u200b\u8fd8\u200b\u80fd\u200b\u5077\u6478\u200b\u6253\u200b\u4e00\u628a\u200b\u3002\u200b\u7ecf\u5178\u200b\u4e24\u200b\u9898\u200b\u9009\u624b\u200b\uff0c\u200b\u6211\u200b\u5565\u65f6\u5019\u200b\u80fd\u200b\u4e0a\u200b knight \u200b\u554a\u200b\uff01</p>"},{"location":"blog/leetcode-contest-430/#t1-3402","title":"T1  3402.\u200b\u4f7f\u200b\u6bcf\u200b\u4e00\u5217\u200b\u4e25\u683c\u200b\u9012\u589e\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u200b\u6b21\u6570","text":"<p>\u200b\u6bcf\u6b21\u200b\u56fa\u5b9a\u200b\u4e00\u5217\u200b\uff0c\u200b\u6309\u884c\u200b\u4ece\u4e0a\u5230\u4e0b\u200b\u8fdb\u884c\u200b\u904d\u5386\u200b\uff0c\u200b\u5982\u679c\u200b \\(grid[i][j] &gt; grid[i - 1][j]\\) \u200b\u5c31\u8ba9\u200b \\(grid[i][j]\\) \u200b\u81ea\u589e\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4e14\u200b\u8bb0\u5f55\u200b\u7684\u200b\u7b54\u6848\u200b\u81ea\u589e\u200b\u4e00\u6b21\u200b</p> <pre><code>class Solution {\n    public int minimumOperations(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n\n        int ans = 0;\n\n        for(int j = 0; j &lt; m; j ++) {\n            for(int i = 0; i &lt; n; i ++) {\n                while(i &gt; 0 &amp;&amp; grid[i][j] &lt;= grid[i - 1][j]) {\n                    ans ++;\n                    grid[i][j] ++;\n                }\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-contest-430/#t2-3403-i","title":"T2 3403. \u200b\u4ece\u200b\u76d2\u5b50\u200b\u4e2d\u200b\u627e\u51fa\u200b\u5b57\u5178\u200b\u5e8f\u200b\u6700\u5927\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b I","text":"<p>\u200b\u8fd9\u9053\u200b\u9898\u76ee\u200b\u591a\u200b\u4e86\u200b\u5f88\u591a\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u9898\u76ee\u200b\u7684\u200b\u610f\u601d\u200b\u5e76\u200b\u4e0d\u662f\u200b\u5f88\u200b\u597d\u200b\u628a\u63e1\u200b\u3002</p> <p>\u200b\u9898\u76ee\u200b\u7684\u200b\u610f\u601d\u200b\u662f\u200b\uff1a\u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b word \u200b\u4e2d\u200b \u200b\u5206\u51fa\u200b numFriends \u200b\u4e2a\u5b50\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u80fd\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u5224\u65ad\u200b\u53ef\u4ee5\u200b\u5206\u51fa\u200b\u7684\u200b\u5b57\u5178\u200b\u5e8f\u200b\u6700\u5927\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b\u54ea\u4e2a\u200b\uff1f</p> <p>\u200b\u7531\u200b\u5b57\u5178\u200b\u5e8f\u200b\u7684\u200b\u5b9a\u4e49\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\uff0c\u200b\u5728\u200b \\(word\\) \u200b\u4e2d\u200b\u540c\u4e00\u200b\u8d77\u59cb\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u8d8a\u957f\u200b\uff0c\u200b\u5b57\u5178\u200b\u5e8f\u8d8a\u200b\u5927\u200b\u3002\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5f88\u200b\u81ea\u7136\u200b\u5730\u200b\u60f3\u5230\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u4e3a\u200b \\(word\\) \u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5b57\u6bcd\u200b\uff0c\u200b\u627e\u200b\u4e00\u4e2a\u200b\u4ee5\u8be5\u200b\u5b57\u6bcd\u200b\u5f00\u5934\u200b\u7684\u200b\u53ef\u4ee5\u200b\u5212\u5206\u200b\u7684\u200b\u6700\u957f\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u3002 \\(word\\) \u200b\u4e2d\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b\u4ece\u200b \\(word\\) \u200b\u4e2d\u200b\u5212\u5206\u200b\u51fa\u200b \\(numFriends\\) \u200b\u4e2a\u5b50\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4e14\u200b\u6bcf\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u80fd\u200b\u4e3a\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u957f\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u80fd\u200b\u8d85\u8fc7\u200b \\(word.length - numFriends + 1\\) \u3002</p> <p>\u200b\u6ce8\u610f\u200b\u8981\u200b\u7279\u5224\u200b\uff0c\u200b\u5f53\u200b \\(numFriends = 1\\) \u200b\u7684\u200b\u65f6\u5019\u200b\u53ea\u80fd\u200b\u5212\u5206\u200b\u51fa\u539f\u200b\u5b57\u7b26\u4e32\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u3002 </p> <pre><code>class Solution {\n    public String answerString(String word, int numFriends) {\n        if(numFriends == 1) {\n            return word;\n        }\n        int len = word.length() - numFriends + 1;\n        int n = word.length();\n        String ans = \"\";\n\n        for (int i = 0; i &lt; n; i++) {\n            String temp;\n            if(i &lt; n - len + 1) {\n                temp = word.substring(i, i + len);\n            } else {\n                temp = word.substring(i, word.length());\n            }\n\n            if(temp.compareTo(ans) &gt; 0) {\n                ans = temp;\n            }\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-contest-430/#t3-3404","title":"T3 3404. \u200b\u7edf\u8ba1\u200b\u7279\u6b8a\u200b\u5b50\u200b\u5e8f\u5217\u200b\u7684\u200b\u6570\u76ee","text":"<p>\u200b\u9898\u76ee\u200b\u5927\u610f\u200b\uff1a\u200b\u4ece\u200b\u6570\u7ec4\u200b \\(nums\\) \u200b\u4e2d\u200b\u9009\u53d6\u200b \\(4\\) \u200b\u4e0b\u6807\u200b \\(p, q, r, s\\)\uff0c\u200b\u6ee1\u8db3\u200b \\(p&lt;q&lt;r&lt;s\\) \u200b\u4e14\u200b\u8fd9\u200b \\(4\\) \u200b\u4e2a\u6570\u200b\u6bcf\u200b\u4e24\u4e2a\u200b\u4e0b\u6807\u200b\u4e4b\u95f4\u200b\uff0c\u200b\u81f3\u5c11\u200b\u76f8\u9694\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u4e14\u200b\u8fd9\u200b \\(4\\) \u200b\u4e2a\u200b\u4e0b\u6807\u200b\u6ee1\u8db3\u200b \\(nums[p] * nums[r] == nums[q]*nums[s]\\)</p> <p>\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(1000\\) \uff0c\u200b\u9700\u8981\u200b \\(O(n^2)\\) \u200b\u4ee5\u4e0b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u624d\u200b\u80fd\u591f\u200b\u4e0d\u200b\u8d85\u65f6\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002</p>"},{"location":"blog/leetcode-contest-432/","title":"LeetCode Contest 432","text":"<p>\u200b\u7ec8\u4e8e\u200b\u71ac\u8fc7\u200b\u671f\u672b\u200b\u5468\u200b\u3002\u200b\u53ef\u60dc\u200b\u53c8\u200b\u662f\u200b\u4e24\u9898\u200b\u9009\u624b\u200b\uff0c\u200b\u9057\u61be\u200b\u6389\u200b\u5206\u200b\u3002\u200b\u5e93\u200b\u9732\u897f\u200b 555\u3002</p> <p>\u200b\u6392\u540d\u200b:797</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/","title":"\u8bb0\u5f55\u200b\u5237\u200b\u7b97\u6cd5\u200b\u9898\u200b\u7684\u200b\u5fc3\u5f97","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/","title":"\u8bb0\u5f55\u200b\u5237\u200b\u4ee3\u7801\u200b\u968f\u60f3\u5f55\u200b\u5fc3\u5f97","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/","title":"\u54c8\u5e0c\u200b\u8868","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#_2","title":"\u54c8\u5e0c\u200b\u8868\u200b\u7406\u8bba\u200b\u57fa\u7840","text":"<p>\u200b\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u964d\u4f4e\u200b\u67e5\u627e\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u3002\u200b\u4f8b\u5982\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u4efb\u52a1\u200b\u7684\u200b\u9700\u6c42\u200b\uff0c\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5728\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u53cd\u590d\u200b\u67e5\u627e\u200b\u67d0\u4e2a\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u6570\u200b \\(x\\) \u200b\u51fa\u73b0\u200b\u4e86\u200b\u51e0\u6b21\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53ef\u4ee5\u200b\u5f00\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4ee5\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u5bf9\u5e94\u200b\u503c\u200b \\(x\\) \uff0c\u200b\u6570\u7ec4\u200b\u7684\u200b\u503c\u200b\u5bf9\u5e94\u200b\u6570\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u8bb0\u5f55\u200b\u5b8c\u200b\u4e86\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5404\u4e2a\u200b\u6570\u503c\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\u3002</p> <p>\u200b\u200b\u5728\u200b\u8fd9\u200b\u4e0a\u200b\u4e2a\u200b\u4f8b\u5b50\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u6ca1\u6709\u200b\u7528\u5230\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\uff0c\u200b\u6216\u8005\u8bf4\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u7684\u200b\u6620\u5c04\u200b\u5c31\u662f\u200b\u81ea\u5df1\u200b\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u8981\u200b\u8bb0\u5f55\u200b\u7684\u200b\u503c\u200b\u4e0d\u662f\u200b\u6570\u5b57\u200b\uff0c\u200b\u800c\u662f\u200b\u5b57\u7b26\u200b\uff0c\u200b\u6216\u8005\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002\u200b\u6bd4\u5982\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u6240\u6709\u200b\u540c\u5b66\u200b\u540d\u5b57\u200b\uff08\u200b\u5047\u8bbe\u200b\u540d\u5b57\u200b\u5404\u4e0d\u76f8\u540c\u200b\uff09\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u6570\u7ec4\u200b\uff0c\u200b\u73b0\u5728\u200b\u9700\u8981\u200b\u4f60\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u540d\u5b57\u200b\u5168\u90e8\u200b\u8bb0\u5f55\u200b\u5230\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6211\u4eec\u200b\u5c31\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u6620\u5c04\u200b\uff0c\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u200b\u4f46\u200b\u6ce8\u610f\u200b\uff0c\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u67e5\u627e\u200b\u6b21\u6570\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6bcf\u6b21\u200b\u90fd\u200b\u662f\u200b \\(1\\) \u200b\u6b21\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e0d\u540c\u200b\u7684\u200b\u503c\u200b\u53ef\u80fd\u200b\u88ab\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u6620\u5c04\u200b\u5230\u200b\u76f8\u540c\u200b\u7684\u200b\u6570\u503c\u200b\u4e0a\u200b\uff0c\u200b\u5373\u200b\u53d1\u751f\u200b\u54c8\u5e0c\u200b\u78b0\u649e\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u54c8\u5e0c\u200b\u78b0\u649e\u200b\uff08\u200b\u4f8b\u5982\u200b\u4f7f\u7528\u200b\u7ebf\u6027\u200b\u63a2\u6d4b\u200b\u6cd5\u200b\u3001\u200b\u62c9\u94fe\u200b\u6cd5\u200b\uff09\uff0c\u200b\u4f1a\u200b\u4f7f\u5f97\u200b\u67e5\u627e\u200b\u7684\u200b\u6b21\u6570\u200b\u53d8\u591a\u200b\u3002\u200b\u4f46\u662f\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5e76\u200b\u4e0d\u200b\u76f4\u63a5\u200b\u4f9d\u8d56\u4e8e\u200b\u6570\u636e\u200b\u5927\u5c0f\u200b\uff0c\u200b\u4e3a\u200b \\(O(1)\\) </p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#242","title":"242. \u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd","text":"<pre><code>class Solution {\n    public boolean isAnagram(String s, String t) {\n        if(s.length() != t.length()) {\n            return false;\n        }\n\n        char[] cnt = new char[26];\n\n        for(char x : s.toCharArray()) {\n            cnt[x - 'a'] ++;\n        }\n\n        for(char x : t.toCharArray()) {\n            cnt[x - 'a'] --;\n        }\n\n        for(int x : cnt) {\n            if(x != 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#383","title":"383. \u200b\u8d4e\u91d1\u200b\u4fe1","text":"<pre><code>class Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        int[] cnt = new int[26];\n\n        for(var x : magazine.toCharArray()) {\n            cnt[x - 'a'] ++;\n        }\n\n        for(var x : ransomNote.toCharArray()) {\n            cnt[x - 'a'] --;\n            if(cnt[x - 'a'] &lt; 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#49","title":"49. \u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd\u200b\u5206\u7ec4","text":"<pre><code>import java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;String&gt;&gt; groupAnagrams(String[] strs) {\n        Map&lt;String, List&lt;String&gt;&gt; collect = new HashMap&lt;&gt;();\n\n        for(String x : strs) {\n            char[] tempChar = x.toCharArray();\n            Arrays.sort(tempChar);\n            String temp = new String(tempChar);\n\n            if(!collect.containsKey(temp)) {\n                collect.put(temp, new ArrayList&lt;&gt;());  \n            } \n            collect.get(temp).add(x);\n        }\n\n        List&lt;List&lt;String&gt;&gt; ans = new ArrayList&lt;&gt;();\n\n        for(List&lt;String&gt; t : collect.values()) {\n            ans.add(t);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#438","title":"438. \u200b\u627e\u5230\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6240\u6709\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd","text":"<p>\u200b\u5b9a\u200b\u957f\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b+\u200b\u54c8\u5e0c\u200b\u8868\u200b</p> <p>\u200b\u9996\u5148\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\uff0c\u200b\u8981\u200b\u600e\u4e48\u200b\u5224\u65ad\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u662f\u4e0d\u662f\u200b\u5f02\u4f4d\u200b\u8bcd\u200b\u5462\u200b\uff1f\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7684\u200b\u60f3\u5230\u200b\u7528\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\uff0c\u200b\u5206\u522b\u200b\u8bb0\u5f55\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u76f8\u540c\u200b\u952e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u3002</p> <p>\u200b\u7b2c\u4e8c\u4e2a\u200b\u95ee\u9898\u200b\u662f\u200b\u6211\u4eec\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u628a\u200b\uff0c\u200b\u4e32\u200b \\(s\\) \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u4e32\u200b\u90fd\u200b\u53d6\u51fa\u200b\u6765\u200b\uff0c\u200b\u7136\u540e\u200b\u7edf\u8ba1\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u518d\u200b\u4e0e\u200b\u4e32\u200b \\(p\\) \u200b\u7684\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\u7684\u200b\u5462\u200b\uff1f\u200b\u7b54\u6848\u200b\u662f\u200b\u5e76\u4e0d\u9700\u8981\u200b\u3002\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u6765\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u4efb\u52a1\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(p.length()\\) \u200b\u7684\u200b\u7a97\u53e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u7edf\u8ba1\u200b\u843d\u200b\u5728\u200b\u7a97\u53e3\u200b\u5185\u200b\u7684\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u5728\u200b\u6bd4\u8f83\u200b\u5b8c\u200b\u662f\u5426\u200b\u4e3a\u200b\u5f02\u4f4d\u200b\u8bcd\u540e\u200b\uff0c\u200b\u7a97\u53e3\u200b\u5411\u200b\u540e\u200b\u6ed1\u52a8\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8fdb\u5165\u200b\u7a97\u53e3\u200b\u7684\u200b\u5b57\u6bcd\u200b\u6b21\u6570\u200b\u52a0\u200b \\(1\\)\uff0c\u200b\u4ece\u200b\u7a97\u53e3\u200b\u51fa\u53bb\u200b\u7684\u200b\u5b57\u6bcd\u200b\u6b21\u6570\u200b\u51cf\u200b \\(1\\) \u3002</p> <pre><code>import java.util.*;\nclass Solution {\n    public List&lt;Integer&gt; findAnagrams(String s, String p) {\n        int[] cnts = new int[26];\n        int[] cntp = new int[26];\n\n        int m = p.length();\n        for(int i = 0; i &lt; m; i ++) {\n            cntp[p.charAt(i) - 'a'] ++;\n        }\n\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        for(int i = 0, j = 0; i &lt; s.length(); i ++) {\n            cnts[s.charAt(i) - 'a'] ++;\n            if(i - j + 1 == m) {\n                if(check(cnts, cntp)) {\n                    ans.add(j);\n                }\n                cnts[s.charAt(j) - 'a'] --;\n                j ++;\n            }\n        }\n        return ans;\n    }\n\n    public boolean check(int[] cnts, int[] cntp) {\n        for(int i = 0; i &lt; 26; i ++) {\n            if(cnts[i] != cntp[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#349","title":"349. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6","text":"<p>\u200b\u7528\u200b\u4e00\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u8bb0\u5f55\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u518d\u200b\u68c0\u67e5\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u662f\u5426\u200b\u6709\u200b\uff0c\u200b\u6709\u200b\u7684\u8bdd\u200b\u5c31\u200b\u628a\u200b\u76f8\u540c\u200b\u7684\u200b\u52a0\u5165\u200b\u5230\u200b\u4e00\u4e2a\u200b \\(set\\) \u200b\u96c6\u5408\u200b\u4e2d\u200b\uff0c\u200b\u6700\u540e\u200b\u4f7f\u7528\u200b</p> <pre><code>set.stream().mapToInt(Integer::intValue).toArray()\n</code></pre> <p>\u200b\u628a\u200b \\(set\\) \u200b\u8f6c\u5316\u200b\u4e3a\u200b \\(int\\) \u200b\u6570\u7ec4\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        boolean[] cnt1 = new boolean[1001];\n        Set&lt;Integer&gt; set = new HashSet&lt;&gt;();\n\n        for(int x : nums1) {\n            cnt1[x] = true;\n        }        \n        for(int x : nums2) {\n            if(cnt1[x]) {\n                set.add(x);\n            }\n        }\n\n        int[] ans = set.stream().mapToInt(Integer::intValue).toArray();\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#350-ii","title":"350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II","text":"<p>\u200b\u7528\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5206\u522b\u200b\u7edf\u8ba1\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6570\u503c\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u6bcf\u4e2a\u200b\u6570\u503c\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u6570\u503c\u200b \\(x\\) \u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u90fd\u200b\u5927\u4e8e\u200b \\(0\\) \uff0c\u200b\u5219\u200b\u53d6\u200b\u4e24\u8005\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u7684\u200b\u8f83\u200b\u5c0f\u503c\u200b\u4f5c\u4e3a\u200b\u6b21\u6570\u200b\u8bb0\u200b\u4f5c\u200b \\(times\\) \uff0c\u200b\u628a\u200b \\(x\\) \u200b\u52a0\u5165\u200b\u7b54\u6848\u200b \\(times\\) \u200b\u6b21\u200b\u3002</p> <pre><code>import java.util.*;\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        int[] cnt1 = new int[1001];\n        int[] cnt2 = new int[1001];\n\n        for(int x : nums1) {\n            cnt1[x] ++;\n        }\n        for(int x : nums2) {\n            cnt2[x] ++;\n        }\n\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        for(int i = 0; i &lt;= 1000; i ++) {\n            if(cnt1[i] != 0 &amp;&amp; cnt2[i] != 0) {\n                int times = Math.min(cnt1[i], cnt2[i]);\n                for(int k = 0; k &lt; times; k ++) {\n                    ans.add(i);\n                }        \n            }\n        }\n\n        return ans.stream().mapToInt(Integer::intValue).toArray();\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#202","title":"202. \u200b\u5feb\u4e50\u200b\u6570","text":"<p>\u200b\u7528\u200b\u4e00\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5b58\u50a8\u200b\u8fbe\u5230\u200b\u8fc7\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5224\u65ad\u200b\u5728\u200b\u64cd\u4f5c\u8fc7\u7a0b\u200b\u4e2d\u200b\u6709\u6ca1\u6709\u200b\u9677\u5165\u200b\u5230\u200b\u5faa\u73af\u200b\u4e2d\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public boolean isHappy(int n) {\n        Set&lt;Integer&gt; set = new HashSet&lt;&gt;();\n        int m = n;\n\n        while(true) {\n            m = getsum(m);\n            if(m == 1) return true;\n            if(set.contains(m)) return false;\n\n            set.add(m);\n        }\n    }\n\n    int getsum(int m) {\n        int ans = 0;\n        while(m &gt; 0) {\n            ans += (m % 10) * (m % 10);\n            m /= 10;\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#1","title":"1. \u200b\u4e24\u6570\u200b\u4e4b\u200b\u548c","text":"<p>\u200b\u679a\u4e3e\u200b\u53f3\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u5de6\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map&lt;Integer, Integer&gt; cnt = new HashMap&lt;&gt;();\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(cnt.containsKey(target - nums[i])) {\n                return new int[]{cnt.get(target - nums[i]), i};\n            }\n            cnt.put(nums[i], i);\n        }\n\n        return new int[]{-1, -1};\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#454-ii","title":"454. \u200b\u56db\u6570\u200b\u76f8\u52a0\u200b II","text":"<p>\u200b\u5148\u200b\u4e24\u91cd\u200b\u5faa\u73af\u200b\u7edf\u8ba1\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u548c\u200b\u8bb0\u5f55\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u904d\u5386\u200b\u53e6\u5916\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u770b\u80fd\u200b\u4e0d\u80fd\u200b\u5f97\u5230\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u8bb0\u5f55\u200b\u7684\u200b\u76f8\u53cd\u6570\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {\n        Map&lt;Integer,Integer&gt; cnt = new HashMap&lt;&gt;();\n\n        for(int i = 0; i &lt; nums1.length; i ++) {\n            for(int j = 0; j &lt; nums2.length; j ++) {\n                int t = nums1[i] + nums2[j];\n                cnt.merge(t, 1, Integer::sum);\n            }\n        }\n\n        int ans = 0;\n\n        for(int i = 0; i &lt; nums3.length; i ++) {\n            for(int j = 0; j &lt; nums4.length; j ++) {\n                int t = nums3[i] + nums4[j];\n                ans += cnt.getOrDefault(-t, 0);        \n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#383_1","title":"383. \u200b\u8d4e\u91d1\u200b\u4fe1","text":"<p>\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b57\u6bcd\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b</p> <pre><code>class Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        int[] cnt = new int[26];\n\n        for(var x : magazine.toCharArray()) {\n            cnt[x - 'a'] ++;\n        }\n\n        for(var x : ransomNote.toCharArray()) {\n            cnt[x - 'a'] --;\n            if(cnt[x - 'a'] &lt; 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#15","title":"15. \u200b\u4e09\u6570\u200b\u4e4b\u200b\u548c","text":"<p>\u200b\u5148\u200b\u56fa\u5b9a\u200b\u4e00\u4e2a\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u786e\u5b9a\u200b\u53e6\u5916\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums) {\n        int n = nums.length;\n\n        Arrays.sort(nums);\n\n        List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n\n        for(int i = 0; i &lt; n; i ++) {\n            if(i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) {\n                continue;\n            }\n            int l = i + 1, r = n - 1;\n            while(l &lt; r) {\n                int sum = nums[i] + nums[l] + nums[r];\n                if(sum == 0) {\n                    ans.add(new ArrayList&lt;&gt;(Arrays.asList(nums[i], nums[l], nums[r])));\n                    while(l &lt; r &amp;&amp; nums[l] == nums[l + 1]) l ++;\n                    while(l &lt; r &amp;&amp; nums[r] == nums[r - 1]) r --;\n                    l ++;\n                    r --;\n                } else if(sum &gt; 0) {\n                    r --;\n                } else {\n                    l ++;\n                }\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/","title":"\u6570\u7ec4","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#1","title":"1.\u200b\u6570\u7ec4\u200b\u7406\u8bba\u200b\u57fa\u7840","text":"<p>\u200b\u6570\u7ec4\u200b\u5b9a\u4e49\u200b\uff1a\u200b\u6570\u7ec4\u200b\u662f\u200b\u5b58\u653e\u200b\u5728\u200b\u8fde\u7eed\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u4e0a\u200b\u7684\u200b\u76f8\u540c\u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p> <p>\u200b\u5728\u200bJava\u200b\u4e2d\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u62c6\u200b\u5206\u6210\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b\uff08\u200b\u6570\u7ec4\u540d\u200b\uff09\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u6570\u7ec4\u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u636e\u200b\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#_1","title":"\u4e00\u7ef4\u200b\u6570\u7ec4","text":"<p>\u200b\u5728\u200bJava\u200b\u4e2d\u200b\u901a\u8fc7\u200b\u4e0b\u9762\u200b\u7684\u200b\u8bed\u53e5\u200b\u521d\u59cb\u5316\u200b\u6570\u7ec4\u200b</p> <pre><code>int[] arr = new int[n];\n</code></pre> <p>\u200b\u5728\u200b\u4e0a\u9762\u200b\u8fd9\u200b\u6bb5\u200b\u8bed\u53e5\u200b\u4e2d\u200b\uff0cnew \u200b\u64cd\u4f5c\u200b\u4ece\u5806\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7533\u8bf7\u200b\u4e86\u200b n \u200b\u4e2a\u200b int \u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u8fde\u7eed\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8ba9\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b arr \u200b\u6307\u5411\u200b\u8fd9\u6bb5\u200b\u5806\u200b\u7a7a\u95f4\u200b\uff08arr\u200b\u5b58\u50a8\u200b\u4e86\u200b\u8fd9\u6bb5\u200b\u5806\u200b\u7a7a\u95f4\u200b\u7684\u200b\u9996\u200b\u5730\u5740\u200b\uff09\u3002arr \u200b\u5f15\u7528\u200b\u672c\u8eab\u200b\u5219\u200b\u5b58\u50a8\u200b\u5728\u200b\u6808\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u5f53\u200b\u4f60\u200b\u5c06\u200b arr \u200b\u6570\u7ec4\u200b\u76f4\u63a5\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u65f6\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>int[] otherArr = arr\n</code></pre> <p>\u200b\u4ec5\u4ec5\u200b\u662f\u200b\u8ba9\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b otherArr \u200b\u6307\u5411\u200b arr \u200b\u6240\u200b\u6307\u5411\u200b\u7684\u200b\u5806\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5e76\u200b\u6ca1\u6709\u200b\u4ea7\u751f\u200b\u65b0\u200b\u7684\u200b\u6570\u7ec4\u200b\u3002\u200b\u6240\u4ee5\u200b\u5728\u200b\u540e\u9762\u200b\u5982\u679c\u200b\u4fee\u6539\u200b\u4e86\u200botherArr \u200b\u7684\u200b\u503c\u200b\uff0carr \u200b\u4e5f\u200b\u4f1a\u200b\u8ddf\u7740\u200b\u4e00\u8d77\u200b\u53d8\u52a8\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#_2","title":"\u4e8c\u7ef4\u200b\u6570\u7ec4","text":"<p>\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u89c6\u4f5c\u200b \"\u200b\u6570\u7ec4\u200b\u7684\u200b\u6570\u7ec4\u200b\"\uff0c\u200b\u5373\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u8bed\u53e5\u200b\u4e3a\u200b</p> <pre><code>int[][] arr2 = new int[n][m];\n</code></pre> <p>\u200b\u6b64\u65f6\u200barr2\u200b\u4f5c\u4e3a\u200b\u6570\u7ec4\u200b\u7684\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b\u5b58\u50a8\u200b\u5728\u200b\u6808\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u800c\u200b\u5176\u4e2d\u200b\u7684\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u5143\u7d20\u200b arr2[i] \u200b\u5219\u200b\u5b58\u50a8\u200b\u5728\u200b\u6808\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u540c\u65f6\u200b arr2[i] \u200b\u4e5f\u200b\u4f5c\u4e3a\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b\u5b58\u50a8\u200b\u7740\u200b\u7b2c\u200b i \u200b\u884c\u200b\u6570\u7ec4\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u8fd9\u200b\u4e00\u90e8\u5206\u200b\u5b9e\u9645\u200b\u7684\u200b\u6570\u636e\u200b\u4e5f\u200b\u5b58\u50a8\u200b\u5728\u200b\u5806\u200b\u5185\u5b58\u200b\u4e2d\u200b\u3002\u200b\u5b58\u50a8\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\u56fe\u200b\uff1a</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#2","title":"2.\u200b\u4e8c\u5206\u200b\u67e5\u627e","text":"<p>\u200b\u5728\u200b\u4e00\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e0a\u200b\u7684\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b4\u200b\u4e2d\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>\u200b\u5bfb\u627e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u200b</li> <li>\u200b\u5bfb\u627e\u200b\u5927\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u200b        \uff08\u200b\u7528\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b9e\u73b0\u200b: \\(\\ge (x + 1)\\) )</li> <li>\u200b\u5bfb\u627e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b  \uff08\u200b\u7528\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b9e\u73b0\u200b: \\((\\ge (x + 1)) - 1\\) )</li> <li>\u200b\u5bfb\u627e\u200b\u5c0f\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b    \uff08\u200b\u7528\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b9e\u73b0\u200b: \\((\\ge x) - 1\\) )</li> </ul> <p>\u200b\u5728\u6211\u770b\u6765\u200b\uff0c\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u67e5\u627e\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u548c\u200b\u67e5\u627e\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u6700\u200b\u53f3\u8fb9\u200b\u7684\u200b\u6570\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#_3","title":"\u9898\u76ee","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#704","title":"704. \u200b\u4e8c\u5206\u200b\u67e5\u627e","text":"<pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        int left = 0, right = nums.length;\n\n        while(left &lt; right) {\n            int mid = left + (right - left) / 2;\n            if(nums[mid] &gt;= target) right = mid;\n            else left = mid + 1;\n        }\n\n        if(left == nums.length) return -1;\n\n        return nums[left] == target ? left : -1;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#35","title":"35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e","text":"<p>\u200b\u5de6\u95ed\u200b\u53f3\u200b\u5f00\u533a\u95f4\u200b\uff0c\u200b\u67e5\u627e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(target\\) \u200b\u7684\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u4f4d\u7f6e\u200b</p> <pre><code>class Solution {\n    public int searchInsert(int[] nums, int target) {\n        int l = 0, r = nums.length;\n        while(l &lt; r) {\n            int mid = l + (r - l) / 2;\n            if(nums[mid] &gt;= target) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#34","title":"34. \u200b\u5728\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u67e5\u627e\u200b\u5143\u7d20\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u548c\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e","text":"<p>\u200b\u67e5\u627e\u200b \\(target\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u7528\u200b \u200b\u5de6\u95ed\u200b\u53f3\u5f00\u200b \u200b\u533a\u95f4\u200b\uff0c\u200b\u800c\u200b\u67e5\u627e\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u67e5\u627e\u200b \\(target + 1\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u518d\u200b\u51cf\u53bb\u200b \\(1\\) \u3002</p> <pre><code>class Solution {\n\n    int lower_bound(int[] nums, int target) {\n        int l = 0, r = nums.length;\n        while(l &lt; r) {\n            int mid = l + (r - l) / 2;\n            if(nums[mid] &gt;= target) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n\n    public int[] searchRange(int[] nums, int target) {\n        int leftIndex = lower_bound(nums, target);\n        if(leftIndex == nums.length || nums[leftIndex] != target) {\n            return new int[]{-1, -1};\n        }\n        int rightIndex = lower_bound(nums, target + 1) - 1;\n        return new int[]{leftIndex, rightIndex};\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#69-x","title":"69. x \u200b\u7684\u200b\u5e73\u65b9\u6839","text":"<p>\u200b\u56e0\u4e3a\u200b\u8981\u6c42\u200b\u67e5\u627e\u200b\u51fa\u6765\u200b\u7684\u200b\u5e73\u65b9\u6839\u200b\u662f\u200b\u7b97\u6570\u200b\u5e73\u65b9\u6839\u200b\u5411\u4e0b\u200b\u53d6\u6574\u200b\uff0c\u200b\u6240\u4ee5\u200b\u60c5\u51b5\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u4e24\u79cd\u200b</p> <ul> <li>\u200b\u5982\u679c\u200b \\(x\\) \u200b\u662f\u200b\u5b8c\u5168\u200b\u5e73\u65b9\u200b\u6570\u200b\u7684\u8bdd\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5230\u200b\u7684\u200b\u4e2d\u70b9\u200b \\(mid\\) \u200b\u6ee1\u8db3\u200b\\(mid * mid = x\\)</li> <li>\u200b\u5982\u679c\u200b \\(x\\) \u200b\u4e0d\u662f\u200b\u5b8c\u5168\u200b\u5e73\u65b9\u200b\u6570\u200b\u7684\u8bdd\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6709\u200b \\(mid * mid &lt; x\\)</li> </ul> <p>\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u5bf9\u4e8e\u200b\u771f\u6b63\u200b\u7684\u200b\u5b9e\u6570\u200b\u5e73\u65b9\u6839\u200b \\(\\sqrt{x}\\)\uff0c\u200b\u6211\u4eec\u200b\u8981\u200b\u67e5\u627e\u200b\u7684\u200b\u662f\u200b\u7684\u200b \\(\\le \\sqrt{x}\\) \u200b\u6700\u5927\u200b\u7684\u200b\u6574\u6570\u200b</p> <pre><code>class Solution {\n    public int mySqrt(int x) {\n        long l = 0, r = x;\n        while(l &lt; r) {\n            long mid = (l + r + 1) / 2;\n            if(mid * mid &lt;= x) l = mid;\n            else r = mid - 1; \n        }\n        return (int)l;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#367","title":"367. \u200b\u6709\u6548\u200b\u7684\u200b\u5b8c\u5168\u200b\u5e73\u65b9\u200b\u6570","text":"<p>\u200b\u548c\u200b\u4e0a\u200b\u4e00\u9898\u200b\u4e00\u6837\u200b\uff0c\u200b\u67e5\u627e\u200b \\(x\\) \u200b\u7684\u200b\u6574\u6570\u200b\u5e73\u65b9\u6839\u200b \\(l\\) \uff0c\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6ee1\u8db3\u200b \\(l * l = x\\)</p> <pre><code>class Solution {\n    public boolean isPerfectSquare(int num) {\n        long l = 0, r = num;\n        while(l &lt; r) {\n            long mid = (l + r + 1) / 2;\n            if(mid * mid &lt;= num) l = mid;\n            else r = mid - 1;\n        }\n        return l * l == num;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#3","title":"3.\u200b\u79fb\u9664\u200b\u5143\u7d20","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#27","title":"27. \u200b\u79fb\u9664\u200b\u5143\u7d20","text":"<p>\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b \\(k\\) \u200b\u6307\u5411\u200b\u6570\u7ec4\u200b\u503c\u4e0d\u4e3a\u200b \\(val\\) \u200b\u7684\u200b\u5e8f\u5217\u200b\u7684\u200b\u5c3e\u90e8\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6307\u5411\u200b\u539f\u200b\u6570\u7ec4\u200b\u5e76\u200b\u4e00\u76f4\u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\u3002\u200b\u5f53\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6307\u5411\u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u503c\u200b\u4e0d\u200b\u4e3a\u200b \\(val\\) \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5c06\u200b\u6307\u9488\u200b \\(k\\) \u200b\u6307\u5411\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u503c\u7f6e\u200b\u4e3a\u200b \\(nums[i]\\)\uff0c\u200b\u7136\u540e\u200b\u6307\u9488\u200b \\(k\\) \u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\u3002</p> <pre><code>class Solution {\n    public int removeElement(int[] nums, int val) {\n        int k = 0;\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(nums[i] != val) {\n                nums[k ++] = nums[i];\n            }\n        }\n        return k;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#26","title":"26. \u200b\u5220\u9664\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879","text":"<p>\u200b\u53cc\u200b\u6307\u9488\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6307\u5411\u200b\u539f\u200b\u6570\u7ec4\u200b\uff0c\u200b\u6307\u9488\u200b \\(j\\) \u200b\u6bcf\u6b21\u200b\u90fd\u200b\u6307\u5411\u200b \\(i\\) \uff0c\u200b\u7136\u540e\u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u503c\u200b\u4e0d\u200b\u76f8\u540c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6307\u9488\u200b \\(j\\) \u200b\u505c\u6b62\u200b\u79fb\u52a8\u200b\uff0c\u200b\u7136\u540e\u200b\u8bb0\u5f55\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6240\u200b\u6307\u5411\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u6700\u540e\u200b \\(i = j - 1\\) \u200b\u8df3\u8fc7\u200b\u91cd\u590d\u200b\u7684\u200b\u5143\u7d20\u200b</p> <pre><code>class Solution {\n    public int removeDuplicates(int[] nums) {\n        int curLength = 0;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            int j = i;\n            while(j &lt; nums.length &amp;&amp; nums[j] == nums[i]) j ++;\n\n            nums[curLength ++] = nums[i];\n\n            i = j - 1;\n        }\n\n        return curLength;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#283","title":"283. \u200b\u79fb\u52a8\u200b\u96f6","text":"<p>\u200b\u53cc\u200b\u6307\u9488\u200b\uff0c\u200b\u628a\u200b\u4e0d\u662f\u200b0\u200b\u7684\u200b\u6570\u200b\u63d2\u200b\u5230\u200b\u524d\u9762\u200b\u53bb\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u628a\u200b\u540e\u9762\u200b\u7684\u200b\u6570\u7f6e\u200b\u6210\u200b0</p> <pre><code>class Solution {\n    public void moveZeroes(int[] nums) {\n        int notZeroCnt = 0;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(nums[i] != 0) {\n                nums[notZeroCnt ++] = nums[i];\n            }\n        }\n\n        for(int i = notZeroCnt; i &lt; nums.length; i ++) {\n            nums[i] = 0;\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#844","title":"844. \u200b\u6bd4\u8f83\u200b\u542b\u200b\u9000\u683c\u200b\u7684\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u628a\u200b\u5b57\u7b26\u4e32\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b\u52a0\u5165\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u7ed3\u679c\u200b\u5b57\u7b26\u4e32\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u3002</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b: \\(O(n)\\) </p> <p>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b: \\(O(n)\\) </p> <pre><code>class Solution {\n    public boolean backspaceCompare(String s, String t) {\n        int indexS = -1, indexT = -1;\n\n        char[] charS = new char[s.length()];\n        char[] charT = new char[t.length()];\n\n        for(char c : s.toCharArray()) {\n            if(c == '#' &amp;&amp; indexS != -1) {\n                indexS --;\n            } else if(c != '#'){\n                charS[++ indexS] = c;\n            }\n        }\n\n        for(char c : t.toCharArray()) {\n            if(c == '#' &amp;&amp; indexT != -1) {\n                indexT --;\n            } else if(c != '#'){\n                charT[++ indexT] = c;\n            }\n        }\n\n        if(indexS != indexT) return false;\n\n        for(int i = 0; i &lt;= indexS; i ++) {\n            if(charS[i] != charT[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n</code></pre> <p>\u200b\u8981\u200b\u5b9e\u73b0\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b\u7684\u200b \\(O(n)\\) \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u548c\u200b \\(O(1)\\) \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u540e\u9762\u200b\u5411\u200b\u524d\u9762\u200b\u627e\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u627e\u5230\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u5b57\u7b26\u200b</p> <pre><code>class Solution {\n    public boolean backspaceCompare(String s, String t) {\n        int i = s.length() - 1, j = t.length() - 1;\n\n        while(i &gt;= 0 || j &gt;= 0) {\n            i = getIndex(s, i);\n            j = getIndex(t, j);\n\n            char charS = i &gt;= 0 ? s.charAt(i) : '0';\n            char charT = j &gt;= 0 ? t.charAt(j) : '0';\n\n            if(charS != charT) {\n                return false;\n            }\n\n            i --;\n            j --;\n        }\n\n        return true;\n    }\n\n    public int getIndex(String str, int idx) {\n        int cnt = 0;\n        while((idx &gt;= 0 &amp;&amp; str.charAt(idx) == '#') || cnt &gt; 0) {\n            if(idx &gt;= 0 &amp;&amp; str.charAt(idx) == '#') {\n                cnt ++;\n            } else {\n                cnt --;\n            }\n            idx --;\n        } \n        return idx;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#977","title":"977. \u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u7684\u200b\u5e73\u65b9","text":"<p>\u200b\u7528\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5b58\u200b\u5347\u5e8f\u200b\u7684\u200b\u6b63\u6570\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5b58\u200b\u964d\u5e8f\u200b\u7684\u200b\u8d1f\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u5e73\u65b9\u200b\u540e\u200b\uff0c\u200b\u5c31\u200b\u90fd\u200b\u53d8\u6210\u200b\u4e86\u200b\u5347\u5e8f\u200b\uff0c\u200b\u6700\u540e\u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u5347\u5e8f\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>class Solution {\n    public int[] sortedSquares(int[] nums) {\n        int[] posNum = new int[nums.length];\n        int[] negNum = new int[nums.length];\n\n        int cntPos = 0, cntNeg = 0;\n\n        int idx = 0;\n        while(idx &lt; nums.length &amp;&amp; nums[idx] &lt; 0) {\n            idx ++;\n        }\n\n\n        for(int i = idx; i &lt; nums.length; i ++) {\n            posNum[cntPos ++] = nums[i];\n        }\n        for(int i = idx - 1; i &gt;= 0; i --) {\n            negNum[cntNeg ++] = nums[i];\n        }\n\n        int[] ans = new int[nums.length];\n\n        int i = 0, j = 0, cnt = 0;\n        while(i &lt; cntPos &amp;&amp; j &lt; cntNeg) {\n            int a = posNum[i] * posNum[i];\n            int b = negNum[j] * negNum[j];\n            if(a &lt;= b) {\n                ans[cnt ++] = a;\n                i ++;\n            } else {\n                ans[cnt ++] = b;\n                j ++;\n            }\n        }\n\n        while(i &lt; cntPos) {\n            ans[cnt ++] = posNum[i] * posNum[i];\n            i ++;\n        }\n\n        while(j &lt; cntNeg) {\n            ans[cnt ++] = negNum[j] * negNum[j];\n            j ++;\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#4","title":"4.\u200b\u957f\u5ea6\u200b\u6700\u5c0f\u200b\u7684\u200b\u5b50\u200b\u6570\u7ec4","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#209","title":"209. \u200b\u957f\u5ea6\u200b\u6700\u5c0f\u200b\u7684\u200b\u5b50\u200b\u6570\u7ec4","text":"<p>\u200b\u53d8\u200b\u957f\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u5f53\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u5185\u200b\u7684\u200b\u548c\u200b\u5c0f\u4e8e\u200b \\(target\\) \u200b\u7684\u8bdd\u200b\uff0c\u200b\u5c31\u200b\u628a\u200b\u7a97\u53e3\u200b\u5411\u200b\u540e\u200b\u7ee7\u7eed\u200b\u6269\u5f20\u200b\uff0c\u200b\u5982\u679c\u200b\u7a97\u53e3\u200b\u5185\u200b\u7684\u200b\u503c\u200b\u4ee5\u53ca\u200b\u6ee1\u8db3\u8981\u6c42\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5219\u200b\u7a97\u53e3\u200b\u5de6\u200b\u8fb9\u754c\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b</p> <pre><code>class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int sum = 0;\n\n        int ans = Integer.MAX_VALUE;\n        for(int i = 0, j = 0; i &lt; nums.length; i ++) {\n            sum += nums[i];\n\n            if(sum &lt; target) {\n                continue;\n            }\n\n            while(sum &gt;= target) {\n                ans = Math.min(ans, i - j + 1);\n                sum -= nums[j ++];\n            }\n        }\n\n        return ans == Integer.MAX_VALUE ? 0 : ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#904","title":"904. \u200b\u6c34\u679c\u200b\u6210\u7bee","text":"<p>\u200b\u53d8\u200b\u957f\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u7a97\u53e3\u200b\u4e2d\u200b\u53ea\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u79cd\u7c7b\u200b\u7684\u200b\u6c34\u679c\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int totalFruit(int[] fruits) {\n        int kind = 0;        \n\n        int mx = 0;\n        for(int x : fruits) mx = Math.max(mx, x);\n\n        int[] cnt = new int[mx + 1];\n        int ans = 0;\n\n        for(int i = 0, j = 0; i &lt; fruits.length; i ++) {\n\n            if(cnt[fruits[i]] == 0) {\n                kind ++;\n            }\n\n            cnt[fruits[i]] ++;\n\n            while(kind &gt; 2) {\n                cnt[fruits[j]] --;\n                if(cnt[fruits[j]] &lt;= 0) {\n                    kind --;\n                }\n                j ++;\n            }\n\n            ans = Math.max(ans, i - j + 1);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#59-ii","title":"59. \u200b\u87ba\u65cb\u200b\u77e9\u9635\u200b II","text":"<pre><code>class Solution {\n    public int[][] generateMatrix(int n) {\n        int[][] ans = new int[n][n];\n\n        int k = 1;\n\n        int i = 0, j = -1;\n        while(k &lt;= n * n) {\n            while(j + 1 &lt; n &amp;&amp; ans[i][j + 1] == 0) ans[i][++ j] = k ++;\n            while(i + 1 &lt; n &amp;&amp; ans[i + 1][j] == 0) ans[++ i][j] = k ++;\n            while(j - 1 &gt;= 0 &amp;&amp; ans[i][j - 1] == 0) ans[i][-- j] = k ++;\n            while(i - 1 &gt;= 0 &amp;&amp; ans[i - 1][j] == 0) ans[-- i][j] = k ++;\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#54","title":"54. \u200b\u87ba\u65cb\u200b\u77e9\u9635","text":"<pre><code>class Solution {\n    public List&lt;Integer&gt; spiralOrder(int[][] matrix) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        int n = matrix.length, m = matrix[0].length;\n\n        boolean[][] vis = new boolean[n][m];\n\n        int cnt = 1;\n        int i = 0, j = -1;\n        while(cnt &lt;= n * m) {\n            while(j + 1 &lt; m &amp;&amp; !vis[i][j + 1]) {\n                vis[i][j + 1] = true;\n                ans.add(matrix[i][++ j]);\n                cnt ++;\n            }\n\n            while(i + 1 &lt; n &amp;&amp; !vis[i + 1][j]) {\n                vis[i + 1][j] = true;\n                ans.add(matrix[++ i][j]);\n                cnt ++;\n            }\n\n            while(j - 1 &gt;= 0 &amp;&amp; !vis[i][j - 1]) {\n                vis[i][j - 1] = true;\n                ans.add(matrix[i][-- j]);\n                cnt ++;\n            }\n\n            while(i - 1 &gt;= 0 &amp;&amp; !vis[i - 1][j]) {\n                vis[i - 1][j] = true;\n                ans.add(matrix[-- i][j]);\n                cnt ++;\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#lcr-146","title":"LCR 146. \u200b\u87ba\u65cb\u200b\u904d\u5386\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4","text":"<pre><code>class Solution {\n    public int[] spiralArray(int[][] array) {\n        if(array.length == 0) return new int[]{};\n\n        int n = array.length, m = array[0].length;\n        boolean[][] vis = new boolean[n][m];    \n        int[] ans = new int[n * m];\n\n        int cnt = 0;\n        int i = 0, j = -1;\n        while(cnt &lt; n * m) {\n            while(j + 1 &lt; m &amp;&amp; !vis[i][j + 1]) {\n                vis[i][j + 1] = true;\n                ans[cnt ++] = array[i][++ j];\n            }\n\n            while(i + 1 &lt; n &amp;&amp; !vis[i + 1][j]) {\n                vis[i + 1][j] = true;\n                ans[cnt ++] = array[++ i][j];\n            }\n\n            while(j - 1 &gt;= 0 &amp;&amp; !vis[i][j - 1]) {\n                vis[i][j - 1] = true;\n                ans[cnt ++] = array[i][-- j];\n            }\n\n            while(i - 1 &gt;= 0 &amp;&amp; !vis[i - 1][j]) {\n                vis[i - 1][j] = true;\n                ans[cnt ++] = array[-- i][j];\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#5","title":"5.\u200b\u533a\u95f4\u200b\u548c","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#58","title":"58.\u200b\u533a\u95f4\u200b\u548c","text":"<pre><code>import java.util.*;\nimport java.io.*;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        int n = Integer.parseInt(br.readLine());\n        int[] arr = new int[n];\n\n        for(int i = 0; i &lt; n; i ++) {\n            arr[i] = Integer.parseInt(br.readLine());\n        }\n\n        int[] sum = new int[n + 1];\n\n        for(int i = 0; i &lt; n; i ++) {\n            sum[i + 1] = sum[i] + arr[i];\n        }\n\n        String line;\n        while((line = br.readLine()) != null) {\n            int l = Integer.parseInt(line.split(\" \")[0]);\n            int r = Integer.parseInt(line.split(\" \")[1]);\n            System.out.println(sum[r + 1] - sum[l]);\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#44","title":"44.\u200b\u5f00\u53d1\u5546\u200b\u8d2d\u4e70\u200b\u571f\u5730","text":"<pre><code>import java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        String nm  = br.readLine();\n\n        int n = Integer.parseInt(nm.split(\" \")[0]);\n        int m = Integer.parseInt(nm.split(\" \")[1]);\n\n        int[][] nums = new int[n][m];\n\n        for(int i = 0; i &lt; n; i ++) {\n            String line = br.readLine();\n            String[] splitLine = line.split(\" \");\n            for(int j = 0; j &lt; m; j ++) {\n                nums[i][j] = Integer.parseInt(splitLine[j]);\n            }\n        }\n\n        int[][] sum = new int[n + 1][m + 1];\n\n        for(int i = 0; i &lt; n; i ++) {\n            for(int j = 0; j &lt; m; j ++) {\n                sum[i + 1][j + 1] = sum[i][j + 1] + sum[i + 1][j] - sum[i][j] + nums[i][j];\n            }\n        }\n\n        int ans = Integer.MAX_VALUE;\n\n        for(int i = 1; i &lt;= n; i ++) {\n            int a = sum[i][m];\n            ans = Math.min(ans, Math.abs(sum[n][m] - 2 * a));\n        }\n\n        for(int j = 1; j &lt;= m; j ++) {\n            int a = sum[n][j];\n            ans = Math.min(ans, Math.abs(sum[n][m] - 2 * a));\n        }\n\n        bw.write(ans+\"\");\n        bw.flush();\n\n        br.close();\n        bw.close();\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#203","title":"203. \u200b\u79fb\u9664\u200b\u94fe\u8868\u200b\u5143\u7d20","text":"<p>\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u7684\u200b\u5934\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u89c4\u907f\u200b\u5220\u9664\u200b\u7684\u200b\u6570\u662f\u200b\u94fe\u8868\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u5224\u65ad\u200b\u3002</p> <p>\u200b\u4e14\u200b\u5728\u200b\u94fe\u8868\u200b\u4e2d\u8981\u200b\u5220\u9664\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b \\(p\\) \uff0c\u200b\u9700\u8981\u200b\u627e\u5230\u200b \\(p\\) \u200b\u524d\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u6240\u4ee5\u200b\u94fe\u8868\u200b\u904d\u5386\u200b\u7684\u200b\u6761\u4ef6\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeElements(ListNode head, int val) {\n        ListNode dummyHead = new ListNode(-1, head);\n\n        ListNode curNode = dummyHead;\n        while(curNode != null &amp;&amp; curNode.next != null) {\n            if(curNode.next.val == val) {\n                curNode.next = curNode.next.next;\n            } else {\n                curNode = curNode.next;\n            }\n        }\n\n        return dummyHead.next;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#707","title":"707. \u200b\u8bbe\u8ba1\u200b\u94fe\u8868","text":"<p>\u200b\u4e3a\u4e86\u200b\u5c3e\u200b\u63d2\u200b\u6cd5\u80fd\u200b\u5b9e\u73b0\u200b \\(O(1)\\) \u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff0c\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u5c3e\u200b\u6307\u9488\u200b \\(tail\\) \uff0c\u200b\u5c3e\u200b\u6307\u9488\u200b\u9700\u8981\u200b\u53d8\u52a8\u200b\u7684\u200b\u65f6\u5019\u200b\u6709\u200b\u4ee5\u4e0b\u200b \\(4\\) \u200b\u79cd\u200b\u60c5\u51b5\u200b</p> <ol> <li>\u200b\u5f53\u200b\u94fe\u8868\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5934\u200b\u63d2\u6cd5\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5c3e\u200b\u6307\u9488\u200b\u9700\u8981\u200b\u6307\u5411\u200b\u63d2\u5165\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5c3e\u200b\u63d2\u6cd5\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\u540e\u200b\uff0c\u200b\u8981\u200b\u6307\u5411\u200b\u521a\u200b\u63d2\u5165\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u5f53\u200b\u6309\u7167\u200b\u7d22\u5f15\u200b\u5220\u9664\u200b\u7684\u200b\u6570\u662f\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u9700\u8981\u200b\u628a\u200b \\(tail\\) \u200b\u6307\u5411\u200b\u5012\u6570\u200b\u5012\u6570\u200b\u7b2c\u4e8c\u4e2a\u200b\u6570\u200b</li> <li>\u200b\u5f53\u200b\u6309\u7167\u200b\u6240\u4ee5\u200b\u52a0\u5165\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u662f\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u628a\u200b \\(tail\\) \u200b\u6307\u5411\u200b\u8fd9\u4e2a\u200b\u52a0\u5165\u200b\u7684\u200b\u6570\u200b</li> </ol> <p>\u200b\u5355\u94fe\u200b\u8868\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>class MyLinkedList {\n    class ListNode {\n        int val;\n        ListNode next;\n        public ListNode(){}\n        public ListNode(int val, ListNode next) {\n            this.val = val;\n            this.next = next;\n        }\n    }\n\n    ListNode head, tail;\n    int length;\n\n    public MyLinkedList() {\n        head = tail = new ListNode(-1, null);    \n        length = 0;\n    }\n\n    public int get(int index) {\n        int cnt = -1;\n        for(ListNode p = head; p != null; p = p.next, cnt ++) {\n            if(cnt == index) {\n                return p.val;\n            }\n        }\n        return -1;\n    }\n\n    public void addAtHead(int val) {\n        ListNode t = new ListNode(val, null);\n        t.next = head.next;\n        head.next = t;\n        if(length == 0) tail = t;\n        length ++;\n    }\n\n    public void addAtTail(int val) {\n        ListNode t = new ListNode(val, null);\n        tail.next = t;\n        tail = t;\n        length ++;\n    }\n\n    public void addAtIndex(int index, int val) {\n        if(index &gt; length) {\n            return;\n        }\n\n        int cnt = -1;\n        ListNode t = new ListNode(val, null);\n        if(index == length) tail = t;\n        for(ListNode p = head; p != null; p = p.next, cnt ++) {\n            if(cnt + 1 == index) {\n                t.next = p.next;\n                p.next = t;\n                length ++;\n                break;\n            }\n        }\n    }\n\n    public void deleteAtIndex(int index) {\n        if(index &gt;= length) {\n            return;\n        }\n        int cnt = -1;\n        for(ListNode p = head; p != null &amp;&amp; p.next != null; p = p.next, cnt ++) {\n            if(cnt + 1 == index) {\n                if(index == length - 1) {\n                    tail = p;\n                }\n                p.next = p.next.next;\n                length --;\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList obj = new MyLinkedList();\n * int param_1 = obj.get(index);\n * obj.addAtHead(val);\n * obj.addAtTail(val);\n * obj.addAtIndex(index,val);\n * obj.deleteAtIndex(index);\n */\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#206","title":"206. \u200b\u53cd\u8f6c\u200b\u94fe\u8868","text":"<p>\u200b\u5934\u200b\u63d2\u6cd5\u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode dummyHead = new ListNode(-1, null);\n\n        for(ListNode p = head, nxt; p != null; p = nxt) {\n            nxt = p.next;\n            p.next = dummyHead.next;\n            dummyHead.next = p;\n        }\n\n        return dummyHead.next;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#24","title":"24. \u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u7528\u200b\u4e09\u4e2a\u200b\u6307\u9488\u200b\u5b9e\u73b0\u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b\u524d\u540e\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u548c\u200b\u4e00\u4e2a\u200b\u7528\u6765\u200b\u8fde\u63a5\u200b\u4ea4\u6362\u200b\u540e\u200b\u7684\u200b\u6307\u9488\u200b</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        if(head == null || head.next == null) {\n            return head;\n        }\n\n        ListNode dummyHead = new ListNode(-1, null);\n\n        ListNode link = dummyHead;\n        ListNode preNode = head, curNode = head.next;\n\n        while(curNode != null) {\n            ListNode nxt = curNode.next;\n            curNode.next = preNode;\n            preNode.next = nxt;\n            link.next = curNode;\n\n            if(nxt != null) {\n                link = preNode;\n                preNode = nxt;\n                curNode = preNode.next;\n            } else {\n                break;\n            }           \n        }\n\n        return dummyHead.next;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#19-n","title":"19. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200b N \u200b\u4e2a\u200b\u7ed3\u70b9","text":"<p>\u200b\u5148\u6c42\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5efa\u7acb\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u7684\u200b\u5934\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u4e8e\u200b\u5220\u9664\u200b\u7684\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n        int length = 0;\n        for(ListNode p = head; p != null; p = p.next) {\n            length ++;\n        }\n\n        ListNode dummyHead = new ListNode(-1, head);\n\n        int index = 0;  \n        for(ListNode p = dummyHead; p != null; p = p.next, index ++) {\n            if(index + 1 == length - n + 1) {\n                p.next = p.next.next;\n            }\n        }\n\n        return dummyHead.next; \n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#0207","title":"\u9762\u8bd5\u9898\u200b 02.07. \u200b\u94fe\u8868\u200b\u76f8\u4ea4","text":"<p>\u200b\u8bbe\u200b\u7b2c\u4e00\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\u662f\u200b \\(length1\\)\uff0c\u200b\u7b2c\u4e8c\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\u662f\u200b \\(length2\\)\u3002\u200b\u5047\u8bbe\u200b\u8fd9\u200b\u4e24\u6761\u200b\u94fe\u8868\u200b\u76f8\u4ea4\u200b\u4e0e\u200b\u4e00\u70b9\u200b\uff0c\u200b\u8bbe\u200b\u5b83\u4eec\u200b\u76f8\u4ea4\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(len\\) ,\u200b\u90a3\u4e48\u200b\u76f8\u4ea4\u200b\u524d\u200b\u4e24\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u5404\u81ea\u200b\u7684\u200b\u4e24\u6bb5\u200b\u957f\u5ea6\u200b\u662f\u200b \\(a = length1 - len\\) \u200b\u548c\u200b \\(b = length2 - len\\)\u3002\u200b\u90a3\u4e48\u200b\u5982\u4f55\u200b\u4f7f\u5f97\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u5728\u200b\u904d\u5386\u200b\u4e24\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u65f6\u5019\u200b\u5728\u200b\u76f8\u4ea4\u200b\u70b9\u200b\u76f8\u9047\u200b\u5462\u200b\uff1f</p> <ol> <li>\u200b\u5982\u679c\u200b \\(a==b\\) \u200b\u90a3\u4e48\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u4f1a\u200b\u540c\u65f6\u200b\u8d70\u200b\u5230\u200b\u76f8\u4ea4\u200b\u70b9\u4e0a\u200b</li> <li>\u200b\u5982\u679c\u200b \\(a \\neq b\\) \u200b\u90a3\u4e48\u200b\u4e00\u5b9a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\u5148\u200b\u8d70\u200b\u5230\u200b\u76f8\u4ea4\u200b\u70b9\u4e0a\u200b\uff0c\u200b\u4e14\u200b\u5148\u200b \\(\\max(a,b)-\\max(a,b)\\) \u200b\u6b65\u200b\u3002\u200b\u4e00\u4e2a\u200b\u5f88\u5999\u200b\u7684\u200b\u60f3\u6cd5\u200b\u662f\u200b\u8ba9\u200b\u7b2c\u4e00\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u6307\u9488\u200b\u8d70\u5230\u200b\u5c3e\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4ece\u200b\u7b2c\u4e8c\u6761\u200b\u94fe\u8868\u200b\u5f00\u59cb\u200b\u8d70\u200b\uff1b\u200b\u7b2c\u4e8c\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u6307\u9488\u200b\u8d70\u5230\u200b\u5c3e\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4ece\u200b\u7b2c\u4e00\u6761\u200b\u94fe\u8868\u200b\u5f00\u59cb\u200b\u8d70\u200b\u3002\u200b\u8fd9\u6837\u200b\u8d70\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5728\u200b\u76f8\u4ea4\u200b\u70b9\u200b\u76f8\u9047\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u8d70\u200b\u7684\u200b\u6b65\u6570\u200b\u5206\u522b\u200b\u4e3a\u200b \\(a + len + b\\) \u200b\u548c\u200b \\(b + len + a\\) </li> </ol> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        ListNode da = headA, db = headB;\n\n        boolean f1 = false, f2 = false;\n\n        while(da != null &amp;&amp; db != null) {\n            if(da == db) {\n                return da;\n            }\n            da = da.next;\n            db = db.next;\n            if(da == null &amp;&amp; !f1) {\n                f1 = true;\n                da = headB;\n            }\n            if(db == null &amp;&amp; !f2) {\n                f2 = true;\n                db = headA;\n            }\n        }\n        return null;\n    }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/","title":"\u8ba1\u7b97\u673a\u200b\u7406\u8bba","text":"<p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u5b66\u4e60\u200b\u8ba1\u7b97\u673a\u200b\u8f6f\u786c\u4ef6\u200b\u7406\u8bba\u200b\u7684\u200b\u7b14\u8bb0\u200b\u548c\u200b\u5fc3\u5f97\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"\u8bb0\u5f55\u200b\u5b66\u4e60\u200b\u6570\u636e\u5e93\u200b\u7684\u200b\u8981\u70b9","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/0.%E6%A6%82%E8%BF%B0/","title":"\u6570\u636e\u5e93\u7cfb\u7edf\u200b\u6982\u5ff5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/0.%E6%A6%82%E8%BF%B0/#_2","title":"\u5173\u7cfb\u200b\u578b\u200b\u6570\u636e\u5e93","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/0.%E6%A6%82%E8%BF%B0/#sql","title":"SQL","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","title":"\u8bb0\u5f55\u200b\u5b66\u4e60\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b-\u200b\u81ea\u9876\u5411\u4e0b\u200b\u65b9\u6cd5","text":"<p>Abstract</p> <p>\u200b\u4e3b\u8981\u200b\u8bb0\u5f55\u200b\u6bcf\u200b\u4e00\u7ae0\u200b\u7684\u200b\u5b66\u4e60\u5fc3\u5f97\u200b\uff0c\u200b\u548c\u200b\u89e3\u51b3\u200b\u6bcf\u200b\u4e00\u7ae0\u200b\u7684\u200b\u590d\u4e60\u9898\u200b\u3001\u200b\u4e60\u9898\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u548c\u200b\u56e0\u7279\u7f51","text":"<p>Abstract</p> <p>\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u6982\u8ff0\u200b\u3002\u200b\u4ece\u200b\u4e24\u4e2a\u200b\u65b9\u9762\u200b\u89e3\u91ca\u200b\u4e86\u200b\u4ec0\u4e48\u200b\u662f\u200b\u56e0\u7279\u7f51\u200b\uff0c\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u7f51\u7edc\u200b\u8fb9\u7f18\u200b\u3001\u200b\u7f51\u7edc\u200b\u6838\u5fc3\u200b\u3001\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u7f51\u200b\u4e2d\u200b\u7684\u200b\u65f6\u5ef6\u200b\u3001\u200b\u4e22\u5305\u200b\u548c\u200b\u541e\u5410\u91cf\u200b\u3001\u200b\u534f\u8bae\u200b\u5c42\u6b21\u200b\u53ca\u5176\u200b\u670d\u52a1\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#1","title":"1.\u200b\u4ec0\u4e48\u200b\u662f\u200b\u56e0\u7279\u7f51","text":"<p>\u200b\u5173\u4e8e\u200b\u4ec0\u4e48\u200b\u662f\u200b\u56e0\u7279\u7f51\u200b\uff08Internet\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4e24\u4e2a\u200b\u65b9\u9762\u200b\u6765\u200b\u56de\u7b54\u200b\uff1a</p> <ol> <li>\u200b\u4ece\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u5177\u4f53\u200b\u6784\u6210\u200b\u6765\u200b\u56de\u7b54\u200b\uff0c\u200b\u5373\u200b\u6784\u6210\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u57fa\u672c\u200b\u786c\u4ef6\u200b\u548c\u200b\u8f6f\u4ef6\u200b\u7ec4\u4ef6\u200b</li> <li>\u200b\u4ece\u200b\u4e3a\u200b\u5206\u5e03\u5f0f\u5e94\u7528\u200b\u63d0\u4f9b\u200b\u670d\u52a1\u200b\u7684\u200b\u8054\u7f51\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u6765\u200b\u56de\u7b54\u200b</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#11","title":"1.1 \u200b\u4ece\u200b\u5177\u4f53\u200b\u7684\u200b\u6784\u6210\u200b\u6765\u200b\u56de\u7b54","text":"<p>\u200b\u5177\u4f53\u200b\u6784\u6210\u200b\u4e0a\u200b\uff0c\u200b\u9996\u5148\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u7684\u200b\u8fde\u5165\u200b\u4e92\u8054\u7f51\u200b\u7684\u200b\u8bbe\u5907\u200b\u5c31\u662f\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u6784\u6210\u200b\u4e4b\u4e00\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6211\u4eec\u200b\u7684\u200b\u7535\u8111\u200b\u3001\u200b\u624b\u673a\u200b\u3001\u200b\u7535\u89c6\u200b\u3001\u200b\u6e38\u620f\u673a\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8054\u7f51\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5728\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u7684\u200b\u672f\u8bed\u200b\u4e2d\u7edf\u200b\u79f0\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\uff08end system\uff09/\u200b\u4e3b\u673a\u200b\uff08host\uff09\u3002\u200b\u5728\u751f\u6d3b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u8ba9\u200b\u4e00\u53f0\u200b\u7535\u8111\u200b\u8054\u7f51\u200b\uff0c\u200b\u5219\u200b\u8981\u200b\u63a5\u5165\u200b\u4e00\u6839\u200b\u201c\u200b\u7f51\u7ebf\u200b\u201d\u200b\u6765\u200b\u4e0e\u200b\u56e0\u7279\u7f51\u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\uff0c\u200b\u8fd9\u6839\u200b\u201c\u200b\u7f51\u7ebf\u200b\u201d\u200b\u5c31\u662f\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\uff08communication link\uff09 \u200b\u7684\u200b\u7269\u7406\u200b\u5a92\u4ecb\u200b\uff0c\u200b\u5b8c\u6574\u200b\u7684\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\u8fd8\u8981\u200b\u5305\u542b\u200b\u5b9e\u73b0\u200b\u8be5\u200b\u94fe\u8def\u200b\u4e0a\u200b\u534f\u8bae\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u548c\u200b\u786c\u4ef6\u200b\u3002\u200b\u7269\u7406\u200b\u5a92\u4ecb\u200b\u65b9\u9762\u200b\u6709\u200b\u5f88\u200b\u591a\u79cd\u200b\u9009\u62e9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5212\u5206\u200b\u4e3a\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\u548c\u200b\u975e\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\uff0c\u200b\u5e38\u89c1\u200b\u7684\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\u6709\u200b\uff1a\u200b\u540c\u8f74\u7535\u7f06\u200b\u3001\u200b\u94dc\u7ebf\u200b\u3001\u200b\u5149\u7ea4\u200b\uff0c\u200b\u5e38\u89c1\u200b\u7684\u200b\u975e\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\u6709\u200b\uff1a\u200b\u65e0\u7ebf\u7535\u200b\u9891\u8c31\u200b\u3002\u200b\u5f53\u200b\u4e00\u53f0\u200b\u7aef\u7cfb\u7edf\u200b\u8981\u200b\u5411\u200b\u53e6\u4e00\u53f0\u200b\u7aef\u7cfb\u7edf\u200b\u53d1\u9001\u6570\u636e\u200b\u65f6\u200b\uff0c\u200b\u53d1\u9001\u200b\u7aef\u7cfb\u7edf\u200b\u5c06\u200b\u6570\u636e\u200b\u5206\u6bb5\u200b\uff0c\u200b\u5e76\u200b\u4e3a\u200b\u6bcf\u200b\u4e00\u6bb5\u200b\u52a0\u4e0a\u200b\u9996\u90e8\u200b\u5b57\u8282\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u4e00\u6bb5\u200b\u5728\u200b\u5c31\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5206\u7ec4\u200b\uff08packet\uff09\u3002\u200b\u8981\u200b\u5728\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u4f20\u8f93\u200b\u8fd9\u6837\u200b\u7684\u200b\u5206\u7ec4\u200b\uff0c\u200b\u4e0d\u4ec5\u4ec5\u200b\u8981\u200b\u4f9d\u9760\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\uff08packet switch\uff09\uff0c\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u4ece\u200b\u5b83\u200b\u7684\u200b\u4e00\u6761\u200b\u5165\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\u63a5\u53d7\u200b\u5206\u7ec4\u200b\uff0c\u200b\u4ece\u200b\u5b83\u200b\u7684\u200b\u4e00\u6761\u200b\u51fa\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\u8f6c\u53d1\u200b\u5206\u7ec4\u200b\u3002\u200b\u4e24\u79cd\u200b\u5e38\u89c1\u200b\u7684\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u662f\u200b\uff1a\u200b\u8def\u7531\u5668\u200b\uff08route\uff09\u200b\u548c\u200b\u94fe\u8def\u5c42\u200b\u4ea4\u6362\u673a\u200b\uff08link-layer switch\uff09\u3002\u200b\u7aef\u7cfb\u7edf\u200b\u8981\u200b\u63a5\u5165\u200b\u4e92\u8054\u7f51\u200b\uff0c\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u56e0\u7279\u7f51\u200b\u670d\u52a1\u63d0\u4f9b\u5546\u200b\uff08Internet Service Provider\uff0cISP\uff09\u200b\u63a5\u5165\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6211\u4eec\u200b\u56fd\u5185\u200b\u7684\u200b\u4e09\u5927\u200b\u8fd0\u8425\u5546\u200b\uff1a\u200b\u7535\u4fe1\u200b\u3001\u200b\u8054\u901a\u200b\u3001\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5c31\u662f\u200bISP\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#12","title":"1.2 \u200b\u4ece\u200b\u670d\u52a1\u200b\u65b9\u9762\u200b\u56de\u7b54","text":"<p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u5206\u5e03\u5f0f\u5e94\u7528\u200b\u8fdb\u7a0b\u200b\u548c\u200b\u4e3a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u63d0\u4f9b\u200b\u670d\u52a1\u200b\u7684\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u65b9\u9762\u200b\u63cf\u8ff0\u200b\u56e0\u7279\u7f51\u200b\u3002\u200b\u56e0\u4e3a\u200b\u8fd9\u4e9b\u200b\u5e94\u7528\u200b\u6d89\u53ca\u200b\u591a\u4e2a\u200b\u76f8\u4e92\u4ea4\u6362\u200b\u6570\u636e\u200b\u7684\u200b\u7aef\u7cfb\u7edf\u200b\uff0c\u200b\u6545\u200b\u5b83\u4eec\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5206\u5e03\u5f0f\u5e94\u7528\u200b\u3002\u200b\u91cd\u8981\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5e94\u7528\u200b\u8fd0\u884c\u200b\u5728\u200b\u7aef\u7cfb\u7edf\u200b\u4e0a\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u8fd0\u884c\u200b\u5728\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u4e0a\u200b\uff0c\u200b\u5373\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u53ea\u7ba1\u200b\u8f6c\u53d1\u200b\u6536\u5230\u200b\u7684\u200b\u5206\u7ec4\u200b\uff0c\u200b\u5e76\u4e0d\u77e5\u9053\u200b\u6e90\u200b\u4e3b\u673a\u200b\u548c\u200b\u76ee\u7684\u200b\u4e3b\u673a\u200b\u8fd0\u884c\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002\u200b\u90a3\u4e48\u200b\u4e00\u4e2a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u5982\u4f55\u200b\u201c\u200b\u6307\u6325\u200b\u201d\u200b\u56e0\u7279\u7f51\u200b\uff0c\u200b\u628a\u200b\u6570\u636e\u200b\u4f20\u9001\u200b\u5230\u200b\u53e6\u4e00\u53f0\u200b\u4e3b\u673a\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u4e0a\u200b\u5462\u200b\uff1f\u200b\u7b54\u6848\u200b\u662f\u200b\u5957\u200b\u63a5\u5b57\u200b\u63a5\u53e3\u200b\uff08socket interface\uff09\uff0c\u200b\u8be5\u200b\u63a5\u53e3\u200b\u89c4\u5b9a\u200b\u4e86\u200b\u8fd0\u884c\u200b\u5728\u200b\u7aef\u7cfb\u7edf\u200b\u4e0a\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u5411\u200b\u53e6\u4e00\u53f0\u200b\u7aef\u7cfb\u7edf\u200b\u7684\u200b\u7279\u5b9a\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u4f20\u9001\u6570\u636e\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#13","title":"1.3 \u200b\u4ec0\u4e48\u200b\u662f\u200b\u534f\u8bae","text":"<p>\u200b\u638c\u63e1\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u77e5\u8bc6\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5c31\u662f\u200b\u7406\u89e3\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u534f\u8bae\u200b\u7684\u200b\u6784\u6210\u200b\u3001\u200b\u539f\u7406\u200b\u548c\u200b\u5de5\u4f5c\u200b\u65b9\u5f0f\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u4e2d\u200b\u5b58\u5728\u200b\u5f88\u591a\u200b\u7684\u200b\u534f\u8bae\u200b\uff0c\u200b\u4f8b\u5982\u200b\u8457\u540d\u200b\u7684\u200bTCP\uff08Transmission Control Protocol\uff09\u200b\u548c\u200bIP\uff08Internet Protocol\uff09\u200b\u534f\u8bae\u200b\uff0c\u200b\u56e0\u7279\u7f51\u200b\u4e2d\u200b\u7684\u200b\u4e3b\u8981\u200b\u534f\u8bae\u200b\u7edf\u79f0\u200b\u4e3a\u200b TCP/IP\u3002\u200b\u4e25\u683c\u6765\u8bf4\u200b\uff0c\u200b\u534f\u8bae\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b</p> <p>\u200b\u534f\u8bae\u200b\uff08Protocol\uff09: \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5728\u200b\u4e24\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u901a\u4fe1\u200b\u5b9e\u4f53\u200b\u4e4b\u95f4\u200b\u4ea4\u6362\u200b\u7684\u200b\u62a5\u6587\u200b\u7684\u200b\u683c\u5f0f\u200b\u548c\u200b\u987a\u5e8f\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u62a5\u6587\u200b\u7684\u200b\u53d1\u9001\u200b/\u200b\u63a5\u53d7\u200b\u6216\u200b\u5176\u4ed6\u200b\u4e8b\u4ef6\u200b\u6240\u200b\u91c7\u53d6\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#2","title":"2.\u200b\u7f51\u7edc\u200b\u8fb9\u7f18","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#21","title":"2.1 \u200b\u7aef\u7cfb\u7edf","text":"<p>\u200b\u4e0e\u200b\u56e0\u7279\u7f51\u200b\u76f8\u8fde\u200b\u7684\u200b\u8ba1\u7b97\u673a\u200b\u548c\u200b\u5176\u4ed6\u200b\u8bbe\u5907\u200b\u79f0\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4f4d\u4e8e\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u8fb9\u7f18\u200b\uff0c\u200b\u6240\u4ee5\u200b\u79f0\u4e4b\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\u7aef\u7cfb\u7edf\u200b\u3002\u200b\u7aef\u7cfb\u7edf\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u4e3b\u673a\u200b\uff08host\uff09\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u4eec\u200b\u53ef\u4ee5\u200b\u5bb9\u7eb3\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002\u200b\u4e3b\u673a\u200b\u53c8\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5212\u5206\u200b\u4e3a\u200b\u5ba2\u6237\u673a\u200b\uff08Client\uff09\u200b\u548c\u200b\u670d\u52a1\u5668\u200b\uff08server\uff09\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#22","title":"2.2 \u200b\u63a5\u5165\u7f51","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#23","title":"2.3 \u200b\u7269\u7406\u200b\u5a92\u4ecb","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#3","title":"3.\u200b\u7f51\u7edc\u200b\u6838\u5fc3","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#31","title":"3.1 \u200b\u5206\u7ec4\u200b\u4ea4\u6362","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#32","title":"3.2 \u200b\u7535\u8def\u200b\u4ea4\u6362","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#33","title":"3.3 \u200b\u7f51\u7edc\u200b\u7684\u200b\u7f51\u7edc","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#4","title":"4.\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u7f51\u200b\u4e2d\u200b\u7684\u200b\u65f6\u5ef6\u200b\u3001\u200b\u4e22\u5305\u200b\u548c\u200b\u541e\u5410\u91cf","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#41","title":"4.1 \u200b\u5206\u7ec4\u200b\u4ea4\u6362\u200b\u4e2d\u200b\u7684\u200b\u65f6\u5ef6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#42","title":"4.2 \u200b\u4e22\u5305","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#43","title":"4.3 \u200b\u541e\u5410\u91cf","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#5","title":"5.\u200b\u534f\u8bae\u200b\u5c42\u6b21\u200b\u53ca\u5176\u200b\u670d\u52a1\u200b\u6a21\u578b","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#51","title":"5.1 \u200b\u5206\u5c42\u200b\u7684\u200b\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#52","title":"5.2 \u200b\u5c01\u88c5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#53","title":"5.3 \u200b\u9762\u5bf9\u200b\u653b\u51fb\u200b\u7684\u200b\u7f51\u7edc","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#54","title":"5.4 \u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u548c\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u5386\u53f2","text":""},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/leetcode%E5%91%A8%E8%B5%9B/","title":"LeetCode\u200b\u5468\u8d5b","text":""}]}