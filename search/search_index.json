{"config":{"lang":["en","ja"],"separator":"[\\s\\-\\.]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"o(\u3003'\u25bd'\u3003)o Hi!","text":"<p>\u200b\u8fd9\u91cc\u200b\u662f\u200b\u5de6\u5b97\u53f3\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff01</p> <p>\u200b\u5e0c\u671b\u200b\u8fd9\u91cc\u200b\u7684\u200b\u5185\u5bb9\u200b\u8d8a\u6765\u8d8a\u200b\u591a\u200b\uff0c\u200b\u6709\u200b\u4ec0\u4e48\u200b\u597d\u200b\u7684\u200b\u63d0\u8bae\u200b\u8bf7\u200b\u544a\u8bc9\u200b\u6211\u200b\u3002</p> <p>\u200b\u6bd5\u7adf\u200b...\u200b\u6211\u592a\u60f3\u200b\u8fdb\u6b65\u200b\u4e86\u200b\uff01</p> <ul> <li> <p>\u200b\u8ba1\u7b97\u673a\u200b\u7406\u8bba\u200b</p> <ul> <li>\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b</li> </ul> </li> </ul> <ul> <li> <p>\u200b\u7b97\u6cd5\u200b\u9898\u5355\u200b</p> <ul> <li>\u200b\u4ee3\u7801\u200b\u968f\u60f3\u5f55\u200b</li> </ul> </li> </ul> <p>\u200b\u4eca\u665a\u200b\u98df\u200b\u4e5c\u5622\u200b </p> <p>\u200b\u591a\u5e74\u200b\u4ee5\u540e\u200b\uff0c\u200b\u9762\u5bf9\u200b\u4eba\u8ff9\u7f55\u81f3\u200b\u7684\u200b\u7b14\u8bb0\u200b\u535a\u5ba2\u200b\uff0c\u200b\u5de6\u5b97\u53f3\u4f1a\u200b\u60f3\u8d77\u200b\u7f51\u7ad9\u200b\u6210\u529f\u200b\u90e8\u7f72\u200b\u7684\u200b\u90a3\u4e2a\u200b\u9065\u8fdc\u200b\u7684\u200b\u4e0b\u5348\u200b\u3002</p> <p>\u200b\u90a3\u200b\u65f6\u5019\u200b\u672a\u6765\u200b\u9065\u8fdc\u200b\u7684\u200b\u6ca1\u6709\u200b\u5f62\u72b6\u200b\uff0c\u200b\u4ed6\u200b\u60f3\u200b\u7684\u200b\u53ea\u6709\u200b\u665a\u4e0a\u200b\u8981\u200b\u5403\u200b\u4ec0\u4e48\u200b\u3002</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/leetcode-biweekly-contest-148/","title":"Leetcode biweekly Contest 148","text":"<p>\u200b\u4e0d\u662f\u200b\u54e5\u4eec\u513f\u200b\uff01\u200b\u53c8\u200b\u662f\u200b\u4e24\u9898\u200b\uff0c\u200b\u540e\u9762\u200b\u4e24\u9053\u200bhard\u200b\u662f\u200b\u771f\u52a8\u200b\u4e0d\u4e86\u200b\u624b\u200b\u554a\u200b\u3002\u200b\u9274\u5b9a\u200b\u4e3a\u200b\u624b\u901f\u200b\u4e24\u9898\u200b\u573a\u200b\u3002</p> <p>\u200b\u6392\u540d\u200b\uff1a522</p>"},{"location":"blog/leetcode-biweekly-contest-148/#leetcode-biweekly-contest-148","title":"Leetcode biweekly Contest 148","text":""},{"location":"blog/leetcode-biweekly-contest-148/#t1-3423","title":"T1 3423. \u200b\u5faa\u73af\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u76f8\u90bb\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u5927\u200b\u5dee\u503c","text":"<p>\u200b\u7b2c\u4e00\u200b\u9898\u200b\u80a5\u80a0\u200b\u6e29\u67d4\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u6309\u7167\u200b\u9898\u76ee\u200b\u7684\u200b\u610f\u601d\u200b\u6a21\u62df\u200b\u4e00\u904d\u200b\u5c31\u884c\u4e86\u200b\u3002\u200b\u904d\u5386\u200b\u4e00\u904d\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u76f8\u90bb\u200b\u6570\u200b\u7684\u200b\u5dee\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u6700\u5927\u503c\u200b</p> <pre><code>import java.util.*;\nclass Solution {\n    public int maxAdjacentDistance(int[] nums) {\n        int ans = Math.abs(nums[0] - nums[nums.length - 1]);\n        for(int i = 0; i &lt; nums.length - 1; i ++) {\n            ans = Math.max(ans, Math.abs(nums[i] - nums[i + 1]));\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-biweekly-contest-148/#t2-3424","title":"T2 3424. \u200b\u5c06\u200b\u6570\u7ec4\u200b\u53d8\u200b\u76f8\u540c\u200b\u7684\u200b\u6700\u5c0f\u200b\u4ee3\u4ef7","text":"<p>\u200b\u7b2c\u4e8c\u200b\u9898\u200b\u505a\u200b\u7684\u200b\u65f6\u5019\u200b\u8fd8\u662f\u200b\u6bd4\u8f83\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\uff0c\u200b\u6bd4\u8d5b\u200b\u7684\u200b\u65f6\u5019\u200b\u662f\u200b\u6309\u7167\u200b\u8d2a\u5fc3\u200b\u7684\u200b\u60f3\u6cd5\u200b\u6765\u200b\u731c\u200b\u7684\u200b\u3002\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u91cd\u65b0\u6392\u5217\u200b\u53ef\u4ee5\u200b\u5212\u5206\u200b\u6210\u200b\u6bcf\u4e2a\u200b\u5b50\u200b\u6570\u7ec4\u200b\u53ea\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6570\u200b\uff0c\u200b\u5373\u200b\u91cd\u65b0\u6392\u5217\u200b\u6ca1\u6709\u200b\u9650\u5236\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u82b1\u8d39\u200b \\(k\\) \u200b\u7684\u200b\u4ee3\u4ef7\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u4efb\u610f\u200b\u7684\u200b\u6446\u653e\u200b\u3002\u200b\u90a3\u4e48\u200b\u6211\u200b\u60f3\u200b\u7684\u200b\u5c31\u662f\u200b\u628a\u200b\u6bcf\u4e2a\u200b\u6570\u200b\u6446\u653e\u200b\u5230\u200b\u4e0e\u200b\u5b83\u200b\u5dee\u503c\u200b\u6700\u5c0f\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u53bb\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6bcf\u4e2a\u200b\u6570\u200b\u7684\u200b\u5dee\u503c\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u90fd\u200b\u5c0f\u200b\uff0c\u200b\u6700\u540e\u200b\u5f97\u5230\u200b\u7684\u200b\u5dee\u503c\u200b\u7684\u200b\u603b\u548c\u200b\u4e5f\u200b\u6700\u5c0f\u200b\u3002</p> <p>\u200b\u4ece\u200b0x3f\u200b\u90a3\u200b\u770b\u200b\u7684\u200b\u4ea4\u6362\u200b\u8bba\u8bc1\u200b\u6cd5\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5373\u200b\u5bf9\u4e8e\u200b \\(brr\\) \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6570\u200b\uff0c\u200b\u82e5\u200b \\(arr\\) \u200b\u4e0d\u200b\u628a\u200b\u4e0e\u5176\u200b\u5dee\u503c\u200b\u6700\u5c0f\u200b\u7684\u200b\u6570\u200b\u653e\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f97\u5230\u200b\u7684\u200b\u5dee\u503c\u200b\u4e00\u5b9a\u200b\u6bd4\u200b\u4e4b\u524d\u200b\u7684\u200b\u5927\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6309\u7167\u200b\u539f\u200b\u601d\u8def\u200b\u8d2a\u5fc3\u200b\u662f\u200b\u5bf9\u200b\u7684\u200b\u3002</p> <pre><code>import java.util.*;\nclass Solution {\n    public long minCost(int[] arr, int[] brr, long k) {\n        long ans1 = 0;\n        int n = arr.length;\n\n        for(int i = 0; i &lt; n; i ++) {\n            ans1 += Math.abs(brr[i] - arr[i]);\n        }\n\n        Arrays.sort(arr);\n        Arrays.sort(brr);\n        long ans2 = k;\n\n        for(int i = 0; i &lt; n; i ++) {\n            ans2 += Math.abs(brr[i] - arr[i]);\n        }\n\n        return Math.min(ans1, ans2);\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-contest-430/","title":"LeetCode Contest 430","text":"<p>\u200b\u8bfb\u4e2a\u200b\u4e66\u200b\u600e\u4e48\u200b\u8fd9\u4e48\u200b\u591a\u4e8b\u200b\u554a\u200b\uff0c\u200b\u771f\u200b\u590d\u4e60\u200b\u4e0d\u200b\u8fc7\u6765\u200b\u4e86\u200b\u5367\u69fd\u200b</p> <p>\u200b\u6392\u540d\u200b: 774</p> <p>\u200b\u671f\u672b\u200b\u590d\u4e60\u200b\u8fd8\u200b\u80fd\u200b\u5077\u6478\u200b\u6253\u200b\u4e00\u628a\u200b\u3002\u200b\u7ecf\u5178\u200b\u4e24\u200b\u9898\u200b\u9009\u624b\u200b\uff0c\u200b\u6211\u200b\u5565\u65f6\u5019\u200b\u80fd\u200b\u4e0a\u200b knight \u200b\u554a\u200b\uff01</p>"},{"location":"blog/leetcode-contest-430/#t1-3402","title":"T1  3402.\u200b\u4f7f\u200b\u6bcf\u200b\u4e00\u5217\u200b\u4e25\u683c\u200b\u9012\u589e\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u200b\u6b21\u6570","text":"<p>\u200b\u6bcf\u6b21\u200b\u56fa\u5b9a\u200b\u4e00\u5217\u200b\uff0c\u200b\u6309\u884c\u200b\u4ece\u4e0a\u5230\u4e0b\u200b\u8fdb\u884c\u200b\u904d\u5386\u200b\uff0c\u200b\u5982\u679c\u200b \\(grid[i][j] &gt; grid[i - 1][j]\\) \u200b\u5c31\u8ba9\u200b \\(grid[i][j]\\) \u200b\u81ea\u589e\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4e14\u200b\u8bb0\u5f55\u200b\u7684\u200b\u7b54\u6848\u200b\u81ea\u589e\u200b\u4e00\u6b21\u200b</p> <pre><code>class Solution {\n    public int minimumOperations(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n\n        int ans = 0;\n\n        for(int j = 0; j &lt; m; j ++) {\n            for(int i = 0; i &lt; n; i ++) {\n                while(i &gt; 0 &amp;&amp; grid[i][j] &lt;= grid[i - 1][j]) {\n                    ans ++;\n                    grid[i][j] ++;\n                }\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-contest-430/#t2-3403-i","title":"T2 3403. \u200b\u4ece\u200b\u76d2\u5b50\u200b\u4e2d\u200b\u627e\u51fa\u200b\u5b57\u5178\u200b\u5e8f\u200b\u6700\u5927\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b I","text":"<p>\u200b\u8fd9\u9053\u200b\u9898\u76ee\u200b\u591a\u200b\u4e86\u200b\u5f88\u591a\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u9898\u76ee\u200b\u7684\u200b\u610f\u601d\u200b\u5e76\u200b\u4e0d\u662f\u200b\u5f88\u200b\u597d\u200b\u628a\u63e1\u200b\u3002</p> <p>\u200b\u9898\u76ee\u200b\u7684\u200b\u610f\u601d\u200b\u662f\u200b\uff1a\u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b word \u200b\u4e2d\u200b \u200b\u5206\u51fa\u200b numFriends \u200b\u4e2a\u5b50\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u80fd\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u5224\u65ad\u200b\u53ef\u4ee5\u200b\u5206\u51fa\u200b\u7684\u200b\u5b57\u5178\u200b\u5e8f\u200b\u6700\u5927\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b\u54ea\u4e2a\u200b\uff1f</p> <p>\u200b\u7531\u200b\u5b57\u5178\u200b\u5e8f\u200b\u7684\u200b\u5b9a\u4e49\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\uff0c\u200b\u5728\u200b \\(word\\) \u200b\u4e2d\u200b\u540c\u4e00\u200b\u8d77\u59cb\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u8d8a\u957f\u200b\uff0c\u200b\u5b57\u5178\u200b\u5e8f\u8d8a\u200b\u5927\u200b\u3002\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5f88\u200b\u81ea\u7136\u200b\u5730\u200b\u60f3\u5230\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u4e3a\u200b \\(word\\) \u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5b57\u6bcd\u200b\uff0c\u200b\u627e\u200b\u4e00\u4e2a\u200b\u4ee5\u8be5\u200b\u5b57\u6bcd\u200b\u5f00\u5934\u200b\u7684\u200b\u53ef\u4ee5\u200b\u5212\u5206\u200b\u7684\u200b\u6700\u957f\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u3002 \\(word\\) \u200b\u4e2d\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b\u4ece\u200b \\(word\\) \u200b\u4e2d\u200b\u5212\u5206\u200b\u51fa\u200b \\(numFriends\\) \u200b\u4e2a\u5b50\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4e14\u200b\u6bcf\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u80fd\u200b\u4e3a\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u957f\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u80fd\u200b\u8d85\u8fc7\u200b \\(word.length - numFriends + 1\\) \u3002</p> <p>\u200b\u6ce8\u610f\u200b\u8981\u200b\u7279\u5224\u200b\uff0c\u200b\u5f53\u200b \\(numFriends = 1\\) \u200b\u7684\u200b\u65f6\u5019\u200b\u53ea\u80fd\u200b\u5212\u5206\u200b\u51fa\u539f\u200b\u5b57\u7b26\u4e32\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u3002 </p> <pre><code>class Solution {\n    public String answerString(String word, int numFriends) {\n        if(numFriends == 1) {\n            return word;\n        }\n        int len = word.length() - numFriends + 1;\n        int n = word.length();\n        String ans = \"\";\n\n        for (int i = 0; i &lt; n; i++) {\n            String temp;\n            if(i &lt; n - len + 1) {\n                temp = word.substring(i, i + len);\n            } else {\n                temp = word.substring(i, word.length());\n            }\n\n            if(temp.compareTo(ans) &gt; 0) {\n                ans = temp;\n            }\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"blog/leetcode-contest-430/#t3-3404","title":"T3 3404. \u200b\u7edf\u8ba1\u200b\u7279\u6b8a\u200b\u5b50\u200b\u5e8f\u5217\u200b\u7684\u200b\u6570\u76ee","text":"<p>\u200b\u9898\u76ee\u200b\u5927\u610f\u200b\uff1a\u200b\u4ece\u200b\u6570\u7ec4\u200b \\(nums\\) \u200b\u4e2d\u200b\u9009\u53d6\u200b \\(4\\) \u200b\u4e0b\u6807\u200b \\(p, q, r, s\\)\uff0c\u200b\u6ee1\u8db3\u200b \\(p&lt;q&lt;r&lt;s\\) \u200b\u4e14\u200b\u8fd9\u200b \\(4\\) \u200b\u4e2a\u6570\u200b\u6bcf\u200b\u4e24\u4e2a\u200b\u4e0b\u6807\u200b\u4e4b\u95f4\u200b\uff0c\u200b\u81f3\u5c11\u200b\u76f8\u9694\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u4e14\u200b\u8fd9\u200b \\(4\\) \u200b\u4e2a\u200b\u4e0b\u6807\u200b\u6ee1\u8db3\u200b \\(nums[p] * nums[r] == nums[q]*nums[s]\\)</p> <p>\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(1000\\) \uff0c\u200b\u9700\u8981\u200b \\(O(n^2)\\) \u200b\u4ee5\u4e0b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u624d\u200b\u80fd\u591f\u200b\u4e0d\u200b\u8d85\u65f6\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002</p>"},{"location":"blog/leetcode-contest-432/","title":"LeetCode Contest 432","text":"<p>\u200b\u7ec8\u4e8e\u200b\u71ac\u8fc7\u200b\u671f\u672b\u200b\u5468\u200b\u3002\u200b\u53ef\u60dc\u200b\u53c8\u200b\u662f\u200b\u4e24\u9898\u200b\u9009\u624b\u200b\uff0c\u200b\u9057\u61be\u200b\u6389\u200b\u5206\u200b\u3002\u200b\u5e93\u200b\u9732\u897f\u200b 555\u3002</p> <p>\u200b\u6392\u540d\u200b:797</p>"},{"location":"blog/leetcode-contest-434/","title":"LeetCode Contest 434","text":"<p>\u200b\u6625\u8282\u200b\u524d\u200b\u6700\u540e\u200b\u4e00\u573a\u200b\u5468\u8d5b\u200b\u3002\u200b\u6b7b\u200b\u78d5\u200bT3\uff0c\u200b\u8d2a\u200b\u5fc3\u60f3\u200b\u7834\u5934\u200b\uff0c\u200b\u62fc\u200b\u5c3d\u5168\u529b\u200b\u65e0\u6cd5\u200b\u6218\u80dc\u200b\u3002\u200b\u4e24\u200b\u9898\u200b\u9009\u624b\u200bQAQ</p> <p>\u200b\u6392\u540d\u200b:517</p>"},{"location":"blog/leetcode-contest-436/","title":"LeetCode Contest 436","text":"<p>\u200b\u6625\u8282\u200b\u540e\u200b\u7684\u200b\u7b2c\u4e00\u573a\u200b\u5468\u8d5b\u200b\uff0c\u200b\u4e24\u9898\u200b\u6389\u200b\u5206\u200b\u9009\u624b\u200b\uff0c1800\u200b\u5206\u200b\u597d\u50cf\u200b\u8fd1\u5728\u54ab\u5c3a\u200b\u4f46\u662f\u200b\u5374\u200b\u89e6\u6478\u200b\u4e0d\u5230\u200b\u3002</p> <p>\u200b\u6392\u540d\u200b:661</p>"},{"location":"blog/leetcode-contest-437/","title":"LeetCode Contest 437","text":"<p>T2\u200b\u8fde\u200bWA\u200b\u4e94\u6b21\u200b\u7ec8\u4e8e\u200b\u901a\u8fc7\u200b\uff0cT3\u200b\u592a\u8fc7\u200b\u6df1\u5965\u200b\u62fc\u200b\u5c3d\u5168\u529b\u200b\u65e0\u6cd5\u200b\u6218\u80dc\u200b</p> <p>\u200b\u6392\u540d\u200b:676</p>"},{"location":"blog/leetcode-contest-437/#t1-k","title":"T1.\u200b\u627e\u51fa\u200b\u957f\u5ea6\u200b\u4e3a\u200b K \u200b\u7684\u200b\u7279\u6b8a\u200b\u5b50\u200b\u5b57\u7b26\u4e32","text":""},{"location":"blog/leetcode-contest-437/#t2","title":"T2.\u200b\u5403\u200b\u62ab\u8428","text":""},{"location":"blog/leetcode-contest-437/#t3-k","title":"T3.\u200b\u9009\u62e9\u200b K \u200b\u4e2a\u200b\u4e92\u4e0d\u200b\u91cd\u53e0\u200b\u7684\u200b\u7279\u6b8a\u200b\u5b50\u200b\u5b57\u7b26\u4e32","text":""},{"location":"blog/leetcode-contest-437/#t4v","title":"T4.\u200b\u6700\u957f\u200bV\u200b\u5f62\u200b\u5bf9\u89d2\u7ebf\u200b\u6bb5\u200b\u7684\u200b\u957f\u5ea6","text":""},{"location":"blog/leetcode-contest-439/","title":"LeetCode Contest 439","text":"<p>T2\u200b\u8fd9\u4e48\u200b\u96be\u200b\uff1f\u200b\u4f60\u200b\u8981\u200b\u628a\u200b\u5468\u8d5b\u200b\u6bc1\u200b\u4e86\u200b\u5417\u200b\u7262\u6263\u200b\uff01</p> <p>\u200b\u6392\u540d\u200b:488</p>"},{"location":"blog/oppo%E6%8F%90%E5%89%8D%E6%89%B9%E7%AC%94%E8%AF%95%E7%9C%9F%E9%A2%9820230715/","title":"oppo\u200b\u63d0\u524d\u200b\u6279\u200b\u7b14\u8bd5\u200b\u771f\u9898\u200b20230715","text":"<p>\u200b\u7b14\u8bd5\u200b\u771f\u9898\u200b</p>"},{"location":"blog/oppo%E6%8F%90%E5%89%8D%E6%89%B9%E7%AC%94%E8%AF%95%E7%9C%9F%E9%A2%9820230715/#111","title":"111. \u200b\u6784\u9020\u200b\u4e8c\u9636\u200b\u884c\u5217\u5f0f","text":"<p>\u200b\u9898\u76ee\u200b\u63cf\u8ff0\u200b</p> <p>\u200b\u5c0f\u6b27\u200b\u5e0c\u671b\u200b\u4f60\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u4e8c\u9636\u200b\u884c\u5217\u5f0f\u200b\uff0c\u200b\u6ee1\u8db3\u200b\u884c\u5217\u5f0f\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u6570\u5747\u200b\u4e3a\u200b\u4e0d\u200b\u8d85\u8fc7\u200b 20 \u200b\u7684\u200b\u6b63\u6574\u6570\u200b\uff0c\u200b\u4e14\u200b\u884c\u5217\u5f0f\u200b\u7684\u200b\u503c\u200b\u6070\u597d\u200b\u7b49\u4e8e\u200bx\u3002\u200b\u4f60\u200b\u80fd\u200b\u5e2e\u5e2e\u200b\u5979\u200b\u5417\u200b?</p> <p>\u200b\u8f93\u5165\u200b\u63cf\u8ff0\u200b:</p> <p>\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200bx\u3002-1000 &lt;= x &lt;= 1000</p> <p>\u200b\u8f93\u51fa\u200b\u63cf\u8ff0\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u65e0\u200b\u89e3\u200b\uff0c\u200b\u8bf7\u200b\u8f93\u51fa\u200b-1\u3002\u200b\u5426\u5219\u200b\u8f93\u51fa\u200b\u4efb\u610f\u200b\u5408\u6cd5\u200b\u884c\u5217\u5f0f\u200b\u5373\u53ef\u200b(\u200b\u8f93\u51fa\u200b\u4e24\u884c\u200b,\u200b\u6bcf\u884c\u200b\u8f93\u51fa\u200b\u4e24\u4e2a\u200b\u4e0d\u200b\u8d85\u8fc7\u200b20\u200b\u7684\u200b\u6b63\u6574\u6570\u200b)\u3002</p> <p>\u200b\u66b4\u529b\u200b\u679a\u4e3e\u200b\uff0c\u200b\u679a\u4e3e\u200b\u7684\u200b\u6b21\u6570\u200b\u6700\u591a\u200b\u662f\u200b \\(20 ^ 4 = 160000\\) \u200b\u4e0d\u4f1a\u200b\u8d85\u65f6\u200b</p> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        int a, b, c,  d;\n        a = b = c = d = -1;\n\n        for(int i = 1; i &lt;= 20; i ++) {\n            for(int j = 1; j &lt;= 20; j ++) {\n                for(int l = 1; l &lt;= 20; l ++) {\n                    for(int r = 1; r &lt;= 20; r ++) {\n                        if(i * j - l * r == x) {\n                            System.out.println(i + \" \" + l + '\\n' + r + \" \" + j);\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n\n        System.out.println(-1);\n    }\n}\n</code></pre>"},{"location":"blog/oppo%E6%8F%90%E5%89%8D%E6%89%B9%E7%AC%94%E8%AF%95%E7%9C%9F%E9%A2%9820230715/#112-boss","title":"112. \u200b\u6311\u6218\u200bboss","text":"<p>\u200b\u9898\u76ee\u200b\u63cf\u8ff0\u200b</p> <p>\u200b\u5c0f\u6b27\u200b\u6b63\u5728\u200b\u4e00\u4e2a\u200b\u56de\u5408\u5236\u200b\u683c\u6597\u6e38\u620f\u200b\u4e2d\u200b\u6311\u6218\u200b\u4e00\u4e2a\u200bboss\u3002\u200b\u5df2\u77e5\u200b\u6e38\u620f\u200b\u7684\u200b\u673a\u5236\u200b\u5982\u4e0b\u200b: </p> <p>\u200b\u6bcf\u200b\u56de\u5408\u200b\u5c0f\u6b27\u200b\u5148\u624b\u200b\u653b\u51fb\u200bboss\uff0c\u200b\u7136\u540e\u200bboss\u200b\u653b\u51fb\u200b\u5c0f\u6b27\u200b\uff0c\u200b\u6b64\u65f6\u200b1\u200b\u56de\u5408\u200b\u7ed3\u675f\u200b\u3002</p> <p>\u200b\u5c0f\u6b27\u200b\u6709\u65f6\u200b\u53ef\u4ee5\u200b\u95ea\u907f\u200bboss\u200b\u7684\u200b\u653b\u51fb\u200b\uff0c\u200b\u5f53\u200b\u95ea\u907f\u200b\u6210\u529f\u200b\u65f6\u200b\u8fd9\u200b\u56de\u5408\u200b\u5c06\u200b\u4e0d\u53d7\u200bboss\u200b\u7684\u200b\u4f24\u5bb3\u200b\u3002 \u200b\u5c0f\u6b27\u200b\u653b\u51fb\u200bboss\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u6512\u200b\u201c\u200b\u8fde\u51fb\u200b\u70b9\u200b\u201d\uff0c\u200b\u5979\u200b\u653b\u51fb\u200b\u9020\u6210\u200b\u7684\u200b\u4f24\u5bb3\u200b\u4e3a\u200b \\(a+kb\\)\uff0c\u200b\u5176\u4e2d\u200b \\(a\\) \u200b\u4e3a\u200b\u57fa\u7840\u200b\u653b\u51fb\u529b\u200b\uff0c\\(b\\) \u200b\u4e3a\u200b\u57fa\u7840\u200b\u8fde\u51fb\u200b\u4f24\u5bb3\u200b\uff0c\\(k\\) \u200b\u4e3a\u200b\u8fde\u51fb\u200b\u6b21\u6570\u200b\u3002\u200b\u5c0f\u6b27\u200b\u6bcf\u6b21\u200b\u653b\u51fb\u200b\u540e\u4f1a\u200b\u8ba9\u200b\u8fde\u51fb\u200b\u6b21\u6570\u200b\u52a0\u200b \\(1\\)\uff0c\u200b\u4f46\u200b\u5f53\u5c0f\u6b27\u200b\u53d7\u5230\u200b\u4f24\u5bb3\u200b\u540e\u200b\u4f1a\u200b\u91cd\u7f6e\u200b\u8fde\u51fb\u200b\u6b21\u6570\u200b\u4e3a\u200b \\(0\\) \u3002 </p> <p>\u200b\u5c0f\u6b27\u200b\u60f3\u200b\u77e5\u9053\u200b\uff0c\u200b\u5979\u200b\u6700\u7ec8\u200b\u5171\u200b\u5bf9\u200bboss\u200b\u9020\u6210\u200b\u4e86\u200b\u591a\u5c11\u200b\u4f24\u5bb3\u200b?</p> <p>\u200b\u8f93\u5165\u200b\u63cf\u8ff0\u200b:</p> <p>\u200b\u7b2c\u4e00\u884c\u200b\u8f93\u5165\u200b\u4e09\u4e2a\u200b\u6b63\u6574\u6570\u200b \\(n,a,b\\) \uff0c\u200b\u4ee3\u8868\u200b\u56de\u5408\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u5c0f\u6b27\u200b\u57fa\u7840\u200b\u653b\u51fb\u529b\u200b\uff0c\u200b\u5c0f\u6b27\u200b\u7684\u200b\u57fa\u7840\u200b\u8fde\u51fb\u200b\u4f24\u5bb3\u200b\u3002 </p> <p>\u200b\u7b2c\u4e8c\u884c\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5b57\u7b26\u4e32\u200b\u4ec5\u200b\u7531\u200b \\(o\\) \u200b\u548c\u200b \\(x\\) \u200b\u7ec4\u6210\u200b\uff0c\u200b\u5176\u4e2d\u200b \\(o\\) \u200b\u4ee3\u8868\u200b\u672c\u200b\u56de\u5408\u200b\u95ea\u907f\u200b\u6210\u529f\u200b\uff0c\\(x\\) \u200b\u4ee3\u8868\u200b\u672c\u200b\u56de\u5408\u200b\u95ea\u907f\u200b\u5931\u8d25\u200b\u3002 </p> <p>1 &lt;= n,a,b &lt;= 10^5</p> <p>\u200b\u8f93\u51fa\u200b\u63cf\u8ff0\u200b:</p> <p>\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\uff0c\u200b\u4ee3\u8868\u200b\u5c0f\u6b27\u200b\u9020\u6210\u200b\u7684\u200b\u4f24\u5bb3\u200b\u603b\u548c\u200b\u3002</p> <p>\u200b\u66b4\u529b\u200b\u6a21\u62df\u200b\u8fc7\u7a0b\u200b</p> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int n = sc.nextInt();\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n\n        sc.nextLine();\n        String str = sc.nextLine();\n\n        int ans = 0;\n\n        int k = 0;\n\n        for(int i = 0; i &lt; n; i ++) {\n            ans += a + k * b;\n            k ++;\n            if(str.charAt(i) == 'x') {\n                k = 0;\n            }\n        }\n\n        System.out.println(ans);\n    }\n}\n</code></pre>"},{"location":"blog/oppo%E6%8F%90%E5%89%8D%E6%89%B9%E7%AC%94%E8%AF%95%E7%9C%9F%E9%A2%9820230715/#113","title":"113. \u200b\u56fd\u9645\u8c61\u68cb","text":"<p>\u200b\u9898\u76ee\u200b\u63cf\u8ff0\u200b</p> <p>\u200b\u5c0f\u6b27\u200b\u83b7\u5f97\u200b\u4e86\u200b\u56fd\u9645\u8c61\u68cb\u200b\u4e2d\u200b\u201c\u200b\u8c61\u200b\"\u200b\u548c\u200b\u201d\u200b\u9a6c\u200b\u201d\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u5979\u200b\u5728\u200b\u4e00\u4e2a\u200b\u65e0\u7a77\u5927\u200b\u7684\u200b\u5e73\u9762\u200b\u76f4\u89d2\u5750\u6807\u200b\u7cfb\u4e2d\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u53ef\u4ee5\u200b\u6548\u4eff\u200b\u56fd\u9645\u8c61\u68cb\u200b\u4e2d\u200b \u200b\u7684\u200b\u201d\u200b\u8c61\u200b\"\u200b\u548c\u200b\"\u200b\u9a6c\u200b\"\u200b\u8df3\u200b\u4e00\u6b65\u200b\u3002 </p> <p>\u200b\u5982\u4e0b\u200b\u56fe\u200b\uff0c\u200b\u5c0f\u7ea2\u200b\u521d\u59cb\u200b\u5750\u6807\u200b\u4e3a\u200b \\((x, y)\\) \u200b\u65f6\u200b\uff0c\u200b\u53ea\u200b\u8df3\u200b\u4e00\u6b65\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u8df3\u200b\u5230\u200b\u4ee5\u4e0b\u200b </p> <p>1.\\((x+k,y+k)\\)\uff0c\\(k\\) \u200b\u662f\u200b\u4efb\u610f\u200b\u6574\u6570\u200b\u3002 </p> <p>2.\\((x+k,y-k)\\)\uff0c\\(k\\) \u200b\u662f\u200b\u4efb\u610f\u200b\u6574\u6570\u200b\u3002 </p> <p>3.\\((x+a,y+b)\\).\u200b\u5176\u4e2d\u200b \\(|a|+|b|=3\\) \u200b\u4e14\u200b \\(1&lt;=a,b&lt;=2\\). \u200b\u5c0f\u6b27\u200b\u60f3\u200b\u77e5\u9053\u200b\uff0c\u200b\u81ea\u5df1\u200b\u521d\u59cb\u200b\u5750\u6807\u200b\u4e3a\u200b\\(x1,y1\\)\uff0c\u200b\u4ed6\u200b\u8df3\u200b\u5230\u200b\\(x2,y2\\)\u200b\u6700\u5c11\u200b\u9700\u8981\u200b\u8df3\u200b\u591a\u5c11\u200b\u6b65\u200b\uff1f\u200b\u5171\u6709\u200b\\(t\\)\u200b\u6b21\u200b\u8be2\u95ee\u200b</p> <p>\u200b\u8f93\u5165\u200b\u63cf\u8ff0\u200b:</p> <p>\u200b\u7b2c\u4e00\u884c\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200bt(1 &lt;= t &lt;= 100)\u200b\u8868\u793a\u200b\u8be2\u95ee\u200b\u7ec4\u6570\u200b \u200b\u63a5\u4e0b\u6765\u200bt\u200b\u884c\u200b\uff0c</p> <p>\u200b\u6bcf\u884c\u200b\u56db\u4e2a\u200b\u6574\u6570\u200bx1,y1,x2,y2 </p> <p>-10^9 &lt;= x1,y1,x2,y2 &lt;= 10^9</p> <p>\u200b\u8f93\u51fa\u200b\u63cf\u8ff0\u200b:</p> <p>\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\uff0c\u200b\u4ee3\u8868\u200b\u6700\u5c0f\u200b\u7684\u200b\u6b65\u6570\u200b\u3002</p> <p>\u200b\u8fd9\u9898\u200b\u770b\u8d77\u6765\u200b\u50cf\u662f\u200b\u56fe\u8bba\u200b\uff0c\u200b\u4f46\u662f\u200b\u5176\u5b9e\u200b\u4ed6\u200b\u662f\u200b\u4e00\u9053\u200b\u6570\u5b66\u200b\u8bc1\u660e\u9898\u200b - -\uff0c\u200b\u9996\u5148\u200b\u8981\u200b\u6ce8\u610f\u200b\u5230\u200b\u9898\u76ee\u200b\u524d\u63d0\u200b\u662f\u200b\u5728\u200b\u4e00\u4e2a\u200b\u65e0\u7a77\u5927\u200b\u7684\u200b\u5e73\u9762\u200b\u76f4\u89d2\u5750\u6807\u200b\u7cfb\u4e2d\u200b\uff0c\u200b\u8c61\u662f\u200b\u53ef\u4ee5\u200b\u8d70\u200b\u5230\u200b\u5bf9\u89d2\u7ebf\u200b\u548c\u200b\u53cd\u200b\u5bf9\u89d2\u7ebf\u200b\u7684\u200b\u4efb\u4f55\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u9a6c\u200b\u5c31\u200b\u548c\u200b\u4e2d\u56fd\u8c61\u68cb\u200b\u4e2d\u200b\u7684\u200b\u9a6c\u200b\u662f\u200b\u4e00\u6837\u200b\u7684\u200b\u8d70\u200b\u7684\u200b\u65e5\u5b57\u683c\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\u7528\u8c61\u200b\u7684\u200b\u65b9\u5f0f\u200b\u79fb\u52a8\u200b\u662f\u200b\u4e0d\u4f1a\u200b\u6539\u53d8\u200b \\((x, y)\\) \u200b\u7684\u200b\u5750\u6807\u200b\u548c\u200b (\\(x + y\\)) \u200b\u7684\u200b\u5947\u5076\u6027\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u5750\u6807\u200b\u548c\u200b\u7684\u200b\u5947\u5076\u6027\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8bf4\u660e\u200b\u4e24\u4e2a\u200b\u5750\u6807\u200b\u70b9\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8c61\u200b\u7684\u200b\u79fb\u52a8\u200b\u8fbe\u5230\u200b\uff0c\u200b\u6211\u4eec\u200b\u5206\u522b\u200b\u6765\u770b\u200b\u5947\u5076\u6027\u200b\u76f8\u540c\u200b\u65f6\u200b\u7684\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b:</p> <ul> <li> <p>\u200b\u5982\u679c\u200b \\((x1, y1)\\) \u200b\u548c\u200b \\((x2, y2)\\) \u200b\u6240\u5904\u200b\u5730\u200b\u7684\u200b\u5bf9\u89d2\u7ebf\u200b\u91cd\u5408\u200b\uff0c\u200b\u5373\u200b\u5728\u200b\u4e00\u6761\u200b\u5bf9\u89d2\u7ebf\u200b\u4e0a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7528\u8c61\u200b\u79fb\u52a8\u200b\u4e00\u6b21\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b \\((x1, y1)\\) \u200b\u548c\u200b \\((x2, y2)\\) \u200b\u6240\u5904\u200b\u5730\u200b\u7684\u200b\u5bf9\u89d2\u7ebf\u200b\u4e0d\u200b\u91cd\u5408\u200b\uff0c\u200b\u90a3\u4e48\u200b\u79fb\u52a8\u200b\u4e00\u6b21\u200b\u4f7f\u5f97\u200b\u4e24\u200b\u5750\u6807\u200b\u70b9\u200b\u5904\u4e8e\u200b\u4e00\u6761\u200b\u5bf9\u89d2\u7ebf\u200b\u6216\u200b\u53cd\u200b\u5bf9\u89d2\u7ebf\u200b\u4e0a\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u79fb\u52a8\u200b\u4e00\u6b21\u200b\u5230\u8fbe\u200b</p> </li> </ul> <p>\u200b\u90a3\u4e48\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u5750\u6807\u200b\u70b9\u200b\u7684\u200b\u548c\u200b\u5947\u5076\u6027\u200b\u4e0d\u540c\u200b\u5462\u200b\uff1f</p> <p>\u200b\u4f7f\u7528\u200b\u9a6c\u8d70\u200b\u65e5\u200b\u6539\u53d8\u200b\u5947\u5076\u6027\u200b\u3002\u200b\u8d70\u200b\u65e5\u5b57\u4f1a\u200b\u4f7f\u5f97\u200b\u5750\u6807\u200b\u548c\u200b\u52a0\u4e0a\u200b\u4e00\u4e2a\u200b\u5947\u6570\u200b\u6216\u8005\u200b\u51cf\u53bb\u200b\u4e00\u4e2a\u200b\u5947\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b\u548c\u200b\u7684\u200b\u5947\u5076\u6027\u200b\u5c31\u200b\u4f1a\u200b\u6539\u53d8\u200b\uff0c\u200b\u4e00\u65e6\u200b\u5947\u5076\u6027\u200b\u76f8\u540c\u200b\u53c8\u200b\u53ef\u4ee5\u200b\u5957\u7528\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u5176\u5b9e\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5217\u65b9\u7a0b\u200b\u7684\u200b\u601d\u60f3\u200b\u6765\u200b\u8bc1\u660e\u200b\u201c\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u5750\u6807\u200b\u548c\u200b\u5947\u5076\u6027\u200b\u76f8\u540c\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e24\u6b65\u200b\u4e4b\u5185\u200b\u8d70\u200b\u5230\u200b\u201d</p> <p>\u200b\u5047\u8bbe\u200b \\((x1, y1)\\), \\((x2, y2)\\) \u200b\u6ee1\u8db3\u200b \\((x1 + y1) \\mod 2 == (x2 + y2) \\mod 2\\)</p> <p>\u200b\u90a3\u4e48\u200b\u4e0d\u59a8\u200b\u5047\u8bbe\u200b\u9700\u8981\u200b\u8d70\u200b\u4e24\u6b65\u200b\uff0c\u200b\u7b2c\u4e00\u6b65\u200b\u6b65\u957f\u200b \\((k1, k1)\\) \u200b\u7b2c\u4e8c\u6b65\u200b\u6b65\u957f\u200b \\((k2, -k2)\\)\uff0c\u200b\u90a3\u4e48\u200b\u6709\u200b</p> \\[ \\begin{equation}   \\begin{aligned}     k1 + k2 = x1 + y1 \\\\     k1 - k2 = x2 + y2 \\\\     =&gt;2k1 = x1 + y1 + x2 + y2 \\\\     =&gt;k1 = \\frac{x1 + y1 + x2 + y2}{2}   \\end{aligned} \\end{equation} \\] <p>\u200b\u5982\u679c\u200b \\(x1 + y1 + x2 + y2\\) \u200b\u4e3a\u200b\u5076\u6570\u200b\u90a3\u4e48\u200b \\(k1\\) \u200b\u5c31\u200b\u80fd\u200b\u5f97\u5230\u200b\u6574\u6570\u200b\u89e3\u200b\uff0c\u200b\u5426\u5219\u200b\u5f97\u4e0d\u5230\u200b</p> <pre><code>import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    private static int dx[] = {1, 1, 2, 2, -1, -1, -2, -2};\n    private static int dy[] = {2, -2, -1, 1, 2, -2, 1, -1};\n\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        int n = Integer.parseInt(br.readLine());\n\n\n        for(int i = 0; i &lt; n; i ++) {\n            String num = br.readLine();\n            String[] nums = num.split(\" \");\n            int x1 = Integer.parseInt(nums[0]);\n            int y1 = Integer.parseInt(nums[1]);\n            int x2 = Integer.parseInt(nums[2]);\n            int y2 = Integer.parseInt(nums[3]);\n            int ans = 3;\n\n\n            if(issame(x1 + y1, x2 + y2)) {\n                if(isonestep(x1, y1, x2, y2)) {\n                    ans = Math.min(ans, 1);\n                } else {\n                    ans = Math.min(ans, 2);\n                }\n            } else {\n                for(int j = 0; j &lt; 8; j ++) {\n                    if(isonestep(x1, y1, x2, y2)) {\n                        ans = Math.min(ans, 1);\n                    } else if(isonestep(x1 + dx[j], y1 + dy[j], x2, y2)) {\n                        ans = Math.min(ans, 2);\n                    }\n                }\n            }\n\n            System.out.println(ans);\n        }\n\n\n    }\n\n    public static boolean isonestep(int x1, int y1, int x2, int y2) {\n        // \u200b\u662f\u5426\u200b\u5728\u200b\u5bf9\u89d2\u7ebf\u200b \u200b\u6216\u8005\u200b \u200b\u53cd\u200b\u5bf9\u89d2\u7ebf\u200b\n        if((x1 + y1 == x2 + y2) || (x1 - y1 == x2 - y2)) {\n            return true;\n        } \n\n        for(int i = 0; i &lt; 8; i ++) {\n            if((x1 + dx[i] == x2) &amp;&amp; (y1 + dy[i] == y2)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public static boolean issame(int a, int b) {\n        return Math.abs(a) % 2 == Math.abs(b) % 2;\n    }\n}\n</code></pre>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/","title":"\u6b66\u5fe0\u7965\u200b\u6bcf\u65e5\u200b\u4e00\u200b\u9898\u200b11\u200b\u6708","text":"<p>\u200b\u8003\u7814\u200b\u6570\u5b66\u200b\u4e4b\u95f2\u200b\u7684\u200b\u86cb\u200b\u75bc\u200b\u60f3\u200b\u88c5\u200b\u903c\u200b\u4e4b\u200b\u6b66\u5fe0\u7965\u200b\u6bcf\u65e5\u200b\u4e00\u200b\u9898\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#111","title":"11.1","text":"<p>\u200b\u5df2\u77e5\u200b\\(f(x + 1)\\)\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4e3a\u200b \\([0, a],(a &gt; 0),\\) \u200b\u5219\u200b\\(f(x)\\)\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4e3a\u200b\\((\\qquad)\\)</p> <p>\u200b\u7b54\u200b\uff1a\\([1,a+1]\\)</p> <p>\u200b\u89e3\u200b\uff1a\u200b\u53ef\u77e5\u200b \\(1 \\le x + 1\\le a + 1\\) \u200b\u5219\u200b\u53ef\u77e5\u200b\u8f93\u5165\u200b\\(f()\\)\u200b\u7684\u200b\u81ea\u53d8\u91cf\u200b\u7684\u200b\u8303\u56f4\u200b\u4e3a\u200b\\([1,a + 1]\\), \u200b\u6240\u4ee5\u200b\\(f(x)\\)\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4e3a\u200b\\([1,a+1]\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#112","title":"11.2","text":"<p>\u200b\u5df2\u77e5\u200b\\(f(x) = e^{x^2}, f(\\phi(x))=1-x\\)\u200b\u4e14\u200b\\(\\phi(x)\\ge 0\\),\u200b\u6c42\u200b \\(\\phi(x)\\)\u200b\u5e76\u200b\u5199\u51fa\u200b\u5b83\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b</p> <p>\u200b\u7b54\u200b\uff1a\\(\\phi(x) =\\sqrt{ln(1-x)},x\\in(-\\infty,0]\\)</p> <p>\u200b\u89e3\u200b\uff1a\u200b\u7531\u200b\u9898\u610f\u200b\u5f97\u200b\uff1a\\(f(\\phi(x)) = e^{\\phi(x)^2} = 1 - x\\)</p> <p>=&gt; \\(\\phi(x) =\\sqrt{ln(1 - x)}\\)\u200b\u5e76\u4e14\u200b\\(x\\)\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4e3a\u200b\\(x\\in(-\\infty, 0]\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#113","title":"11.3","text":"<p>\u200b\u8bbe\u200b  \\(g(x)=\\left\\{      \\begin{aligned}     2-x, \\quad x\\le0\\\\     x+2, \\quad x&gt;0\\\\     \\end{aligned}     \\right.\\) \\(,\\quad f(x)=\\left\\{     \\begin{aligned}     x^2, \\quad x&lt;0\\\\     -x, \\quad x\\ge0\\\\      \\end{aligned}     \\right.\\) \u200b\u5219\u200b\\(\\quad g[f(x)] = ()\\)</p> <p>\u200b\u89e3\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\\(f(x)\\),\u200b\u5f53\u200b\\(x&lt;0\\)\u200b\u65f6\u200b,\\(f(x) = x^2 &gt;0\\),\u200b\u800c\u200b\u5f53\u200b\\(x\\ge0\\)\u200b\u65f6\u200b, \\(f(x) = -x\\le0\\)</p> <p>\u200b\u4ee4\u200b\\(f(x) = t\\),\u200b\u5219\u200b\u5f53\u200b\\(t&gt;0\\)\u200b\u65f6\u200b,\\(g(t) = t + 2 = x^2 + 2\\), \u200b\u5f53\u200b\\(t\\le0\\)\u200b\u65f6\u200b, \\(g(t) = 2 - t = 2 + x\\)</p> <p>\u200b\u6240\u4ee5\u200b \\(g[f(x)]=\\left\\{     \\begin{aligned}     x^2+2,\\quad x&lt;0\\\\     2+x,\\quad x\\le 0\\\\      \\end{aligned}     \\right.\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#114","title":"11.4","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b  \\(\\quad f(x)=\\left\\{     \\begin{aligned}     1-2x^2, \\quad x&lt;-1\\\\     x^3, \\quad -1\\le x \\le 2\\\\     12x-16, \\quad x&gt;2\\\\     \\end{aligned}     \\right.  \\quad f(x)\\)\u200b\u7684\u200b\u53cd\u51fd\u6570\u200b\\(g(x)\\)\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b</p> <p>\u200b\u89e3\u200b\uff1a\\(x&lt;-1\\)\u200b\u65f6\u200b,\\(f(x) &lt; -1, \\\\ \\quad -1\\le x \\le 2\\)\u200b\u65f6\u200b,\\(-1 \\le f(x) \\le 8 \\\\ \\quad x &gt; 2\\), \\(f(x) &gt; 8\\)</p> <p>\\(\\quad g(x) = \\left\\{     \\begin{aligned}     -\\sqrt{\\frac{1-x}{2}},\\quad x &lt; -1\\\\     \\sqrt[3]{x},\\quad -1\\le x \\le8 \\\\     \\frac{x+16}{12}, \\qquad x&gt;8     \\end{aligned}     \\right.\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#115","title":"11.5","text":"<p>\u200b\u8bc1\u660e\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u5728\u200b\u533a\u95f4\u200b\\([-a, a]\\) \u200b\u4e0a\u200b\u7684\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\\(f(x)\\),\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u6210\u200b\u4e00\u4e2a\u200b\u5947\u51fd\u6570\u200b\u548c\u200b\u4e00\u4e2a\u200b\u5076\u51fd\u6570\u200b\u4e4b\u200b\u548c\u200b</p> <p>\u200b\u8bc1\u200b\uff1a\u200b\u53ef\u77e5\u200b\\(f(x) = \\cfrac{f(x) + f(-x)}{2}+\\cfrac{f(x)-f(-x)}{2}\\) \u200b\u524d\u8005\u200b\u4e3a\u200b\u5076\u51fd\u6570\u200b\uff0c\u200b\u540e\u8005\u200b\u4e3a\u200b\u5947\u51fd\u6570\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#116","title":"11.6","text":"<p>\u200b\u8bbe\u200b\\(f(x) = xe^{\\sin x}\\tan (x)\\),\u200b\u5219\u200b\\(f(x)\\)\u200b\u662f\u200b\\((\\quad)\\)</p> <p>A.\u200b\u5076\u51fd\u6570\u200b    B.\u200b\u65e0\u200b\u754c\u200b\u51fd\u6570\u200b  C.\u200b\u5468\u671f\u51fd\u6570\u200b  D.\u200b\u5355\u8c03\u200b\u51fd\u6570\u200b   </p> <p>\u200b\u7b54\u6848\u200b\uff1aB</p> <p>A.\\(f(-x) = -xe^{-\\sin x}\\tan (-x), -f(x) = -xe^{\\sin x}\\tan (x)\\)\u3002\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\\(f(x)\\)\u200b\u4e3a\u200b\u975e\u5947\u200b\u975e\u200b\u5076\u51fd\u6570\u200b</p> <p>B.\u200b\u5f53\u200b\\(x\\)\u200b\u8d8b\u4e8e\u200b\u65e0\u7a77\u7684\u200b\u65f6\u5019\u200b,\u200b\u4e14\u200b\\(\\tan (x)\\)\u200b\u4e0d\u200b\u4e3a\u200b\\(0\\)\u200b\u7684\u200b\u65f6\u5019\u200b,\u200b\u5219\u200b\\(f(x)\\)\u200b\u4e5f\u200b\u4f1a\u200b\u8d8b\u4e8e\u200b\u65e0\u7a77\u200b</p> <p>C.\\(f(x)\\)\u200b\u65e0\u200b\u5468\u671f\u6027\u200b,\\(x\\)\u200b\u8d8a\u5927\u200b,\\(f(x)\\)\u200b\u8d8a\u5927\u200b</p> <p>D.\u200b\u56e0\u4e3a\u200b\\(\\tan (x)\\)\u200b\u4e3a\u200b\u5468\u671f\u51fd\u6570\u200b\uff0c\u200b\u6240\u4ee5\u200b\\(f(x)\\)\u200b\u4e0d\u200b\u5355\u8c03\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#117","title":"11.7","text":"<p>\u200b\u51fd\u6570\u200b</p> \\[f(x) = \\frac{|x|\\sin (x-2)}{x(x-1)(x-2)^2}\\] <p>\u200b\u5728\u200b\u4e0b\u5217\u200b\u54ea\u4e2a\u200b\u533a\u95f4\u200b\u6709\u200b\u754c\u200b(\\(\\quad\\))</p> <p>\u200b\u7b54\u6848\u200b\uff1aA</p> <p>\\(A.(-1,0)\\quad B(0,1)\\quad C(1,2)\\quad  D(2,3)\\)</p> <p>A. \\(\\lim\\limits_{x\\to-1^+}f(x)=\\cfrac{\\sin (-3)}{18}\\quad\\lim\\limits_{x\\to0^-}{f(x)}=\\cfrac{\\sin (-2)}{4}\\)</p> <p>B. \\(\\lim\\limits_{x\\to0^+}{f(x)}=\\cfrac{\\sin (-2)}{-4}\\quad \\lim\\limits_{x\\to1^-}{f(x)}=\\infty\\)</p> <p>C. \\(\\lim\\limits_{x\\to1^+}{f(x)}=\\infty\\quad \\lim\\limits_{x\\to2^-}{f(x)}=\\infty\\)</p> <p>D. \\(\\lim\\limits_{x\\to2^+}{f(x)}=\\infty\\quad \\lim\\limits_{x\\to3^-}{f(x)}=\\cfrac{\\sin (1)}{2}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#118","title":"11.8","text":"\\[\\lim\\limits_{n\\to\\infty}[\\sqrt{1+2+...+n}-\\sqrt{1+2+...+(n-1)}]\\] <p>\u200b\u89e3\u200b\uff1a\u200b\u539f\u200b\u5f0f\u200b = </p> \\[\\lim\\limits_{n\\to\\infty}[\\frac{n}{\\sqrt{1+2+...+n}+{\\sqrt{1+2+...+(n-1)}}}]\\] \\[=\\lim\\limits_{n\\to\\infty}[\\frac{1}{\\sqrt{\\frac{1}{n^2}+\\frac{2}{n^2}+...+\\frac{n}{n^2}} +\\sqrt{\\frac{1}{n^2}+\\frac{2}{n^2}+...+\\frac{n-1}{n^2}}}]\\] \\[=\\lim\\limits_{n\\to\\infty}[\\frac{1}{\\sqrt{\\frac{n^2+n}{2n^2}}+\\sqrt{\\frac{n^2-n}{2n^2}}}]\\] \\[=\\lim\\limits_{n\\to\\infty}[\\frac{1}{\\frac{1}{\\sqrt{2}}+\\frac{1}{\\sqrt{2}}}]\\] \\[=\\frac{\\sqrt{2}}{2}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#119","title":"11.9","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to-\\infty}\\frac{\\sqrt{4x^2+x-1}+x+1}{\\sqrt{x^2+sinx}}\\] <p>\u200b\u89e3\u200b:</p> <p>\u200b\u539f\u200b\u5f0f\u200b= </p> \\[\\lim\\limits_{x\\to-\\infty}\\frac{-\\sqrt{4-\\frac{1}{x}-\\frac{1}{x^2}}+1+\\frac{1}{x}}{-\\sqrt{1+\\frac{sinx}{x^2}}}\\] \\[=\\lim\\limits_{x\\to-\\infty}\\frac{-2+1}{-1}=1\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1110","title":"11.10","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to0}(\\frac{2+e^{\\frac{1}{x}}}{1+e^{\\frac{4}{x}}}+\\frac{sinx}{|x|})\\] \\[\\lim\\limits_{x\\to0^-}(\\frac{2+e^{\\frac{1}{x}}}{1+e^{\\frac{4}{x}}} - 1) = \\lim\\limits_{x\\to0^-}(2 - 1) = 1\\] \\[\\lim\\limits_{x\\to0^+}(\\frac{2+e^{\\frac{1}{x}}}{1+e^{\\frac{4}{x}}} + 1) = \\lim\\limits_{x\\to0^+}(\\frac{\\frac{2}{e^{\\frac{1}{x}}}+1}{\\frac{1}{e^{\\frac{1}{x}}}+e^{\\frac{3}{x}}}+1)=1\\] \\[\\lim\\limits_{x\\to0}(\\frac{2+e^{\\frac{1}{x}}}{1+e^{\\frac{4}{x}}}+\\frac{sinx}{|x|})=\\lim\\limits_{x\\to0^-}(\\frac{2+e^{\\frac{1}{x}}}{1+e^{\\frac{4}{x}}} + \\frac{sinx}{|x|})=\\lim\\limits_{x\\to0^+}(\\frac{2+e^{\\frac{1}{x}}}{1+e^{\\frac{4}{x}}} + \\frac{sinx}{|x|})=1\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1111","title":"11.11","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to+\\infty}(\\sqrt{x^2+x}-\\sqrt{x^2-x})\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to+\\infty}(\\frac{2x}{\\sqrt{x^2+x}+\\sqrt{x^2-x}})=\\lim\\limits_{x\\to\\infty}(\\frac{2}{\\sqrt{1+\\frac{1}{x}}+\\sqrt{1-\\frac{1}{x}}}) = 1\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1112","title":"11.12","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[ \\lim\\limits_{x\\to0}\\frac{\\sqrt{1+\\tan x}-\\sqrt{1+\\sin x}}{x(1-\\cos x)}\\] \\[\\lim\\limits_{x\\to0}\\frac{\\tan x-\\sin x}{\\frac{1}{2}x^3(\\sqrt{1+\\tan x}+\\sqrt{1+\\sin x})}=\\lim\\limits_{x\\to0}\\frac{\\sin x-\\sin x\\cos x}{\\frac{1}{2}x^3(\\sqrt{1+\\tan x}+\\sqrt{1+\\sin x})\\cos x} \\] \\[ =\\lim\\limits_{x\\to0}\\frac{1-\\cos x}{\\frac{1}{2}x^2(\\sqrt{1+\\tan x}+\\sqrt{1+\\sin x})\\cos x}=\\lim\\limits_{x\\to0}\\frac{1}{(\\sqrt{1+\\tan x}+\\sqrt{1+\\sin x})\\cos x} = \\frac{1}{2}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1113","title":"11.13","text":"<p>\u200b\u5df2\u77e5\u200b \\(\\lim\\limits_{x\\to0}\\cfrac{e^{x^2}-cos2x}{ax^b}=1\\),\u200b\u6c42\u200b\\(a,b\\)\u200b\u7684\u200b\u503c\u200b</p> <p>\u200b\u89e3\u200b\uff1a</p> \\[\\lim\\limits_{x\\to0}\\frac{e^{x^2}-cos2x}{ax^b}=\\lim\\limits_{x\\to0}\\frac{e^{x^2}-1+1-cos2x}{ax^b}=\\lim\\limits_{x\\to0}\\frac{x^2+2sin^2x}{ax^b}\\] \\[=\\lim\\limits_{x\\to0}\\frac{1+\\frac{2sin^2x}{x^2}}{ax^{b-2}}=\\lim\\limits_{x\\to0}\\frac{3}{ax^{b-2}}=1\\] \\[a = 3,b=2\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1114","title":"11.14","text":"<p>\u200b\u5df2\u77e5\u200b\\(\\lim\\limits_{x\\to x_0}\\phi(x)=0\\),\u200b\u5219\u200b\u4e0b\u5217\u200b\u7ed3\u8bba\u200b\u6b63\u786e\u200b\u7684\u200b\u4e2a\u6570\u200b\u4e3a\u200b()</p> <p>(A)\\(\\lim\\limits_{x\\to x_0}\\cfrac{\\sin \\phi(x)}{\\phi(x)}=1\\)</p> <p>(B)\\(\\lim\\limits_{x\\to x_0}(1+\\phi(x))^{\\cfrac{1}{\\phi(x)}}=e\\)</p> <p>(C)\u200b\u5f53\u200b\\(x\\to x_0\\)\u200b\u65f6\u200b,\\(\\sin \\phi(x)\\sim\\phi(x)\\)</p> <p>(D)\u200b\u82e5\u200b\\(\\lim\\limits_{u\\to 0}f(u)=A\\), \u200b\u5219\u200b\\(\\lim\\limits_{x\\to x_0}f(\\phi(x))=A\\)</p> <p>\u200b\u56e0\u4e3a\u200b\u5f53\u200b\\(\\lim\\limits_{x\\to x_0}\\phi(x) = 0\\),\u200b\u800c\u200b\u5f53\u200b\\(\\phi(x)\\)\u200b\u4e3a\u5e38\u200b\u51fd\u6570\u200b\u65f6\u200b,\u200b\u5373\u200b\\(\\phi(x)\\)\u200b\u6052\u4e3a\u200b0 \u200b\u5219\u200b\u4e0b\u9762\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u9009\u9879\u200b\u90fd\u200b\u4e0d\u200b\u7b26\u5408\u200b\u3002\u200b\u56e0\u4e3a\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\u7684\u200b\u5e94\u7528\u200b\u8981\u6c42\u200b\\(x\\to 0\\),\u200b\u800c\u200b\u4e0d\u200b\u7b49\u4e8e\u200b0</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1115","title":"11.15","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim_{x\\to 0}\\frac{\\arcsin x-\\arctan x}{\\sin x-\\tan x}\\] <p>\u200b\u539f\u200b\u5f0f\u200b = </p> \\[\\lim_{x\\to 0}\\frac{\\arcsin x-x+x-\\arctan x}{sinx-x+x-tanx}=\\lim_{x\\to 0}\\frac{\\frac{1}{6}x^3+\\frac{1}{3}x^3}{-\\frac{1}{6}x^3-\\frac{1}{3}x^3} = -1\\] <p>\u200b\u53cd\u601d\u200b\uff1a\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\u7684\u200b\u8bb0\u5fc6\u200b</p> \\[x-\\sin x\\sim\\frac{1}{6}x^3,x-\\arcsin x \\sim -\\frac{1}{6}x^3\\] \\[x- \\tan x\\sim -\\frac{1}{3}x^3, x- \\arctan x\\sim\\frac{1}{3}x^3\\] \\[x -\\ln (1+x)\\sim \\frac{1}{2}x^2\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1116","title":"11.16","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}\\frac{ln\\frac{x}{ln(1+x)}}{x}\\] <p>\u200b\u89e3\u6cd5\u200b\u4e00\u200b(\u200b\u65e0\u8111\u200b\u6d1b\u200b)\uff1a\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}\\frac{ln(1+x)}{x}\\frac{ln(1+x)-\\frac{x}{1+x}}{ln^2(1+x)}=\\lim_{x\\to 0}=\\frac{ln(1+x)-\\frac{x}{1+x}}{xln(1+x)}\\] \\[=\\lim_{x\\to 0}\\frac{\\frac{1}{1+x}-\\frac{1}{(1+x)^2}}{ln(1+x)+\\frac{x}{1+x}}=\\lim_{x\\to 0}\\frac{x}{(1+x^2)ln(1+x)+x(1+x)}\\] \\[=\\lim_{x\\to 0}\\frac{1}{\\frac{1}{1+x}+2xln(1+x)+\\frac{x^2}{1+x}+1+2x}=\\frac{1}{2}\\] <p>\u200b\u89e3\u6cd5\u200b\u4e8c\u200b(\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b)\uff1a\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim_{x\\to 0}\\frac{ln(\\frac{x}{ln(1+x)}-1+1)}{x}=\\lim_{x\\to 0}\\frac{x-ln(1+x)}{x^2}\\] \\[\\lim_{x\\to 0}\\frac{\\frac{1}{2}x^2}{x^2} = \\frac{1}{2}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1117","title":"11.17","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b </p> \\[\\lim_{x\\to +\\infty}\\frac{e^x}{(1+\\frac{1}{x})^{x^2}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim_{x\\to +\\infty}\\frac{e^x}{e^{x^2ln(1+\\frac{1}{x})}}=\\lim_{x\\to +\\infty}e^{x-x^2ln(1+\\frac{1}{x})}\\] <p>\u200b\u4ee4\u200b\\(x=\\cfrac{1}{t}\\),\u200b\u5219\u200b\u539f\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to +\\infty}e^{\\frac{1}{t}-\\frac{1}{t^2}ln(1+t)}=\\lim_{x\\to +\\infty}e^{\\frac{t-ln(1+t)}{t^2}}=\\lim_{x\\to +\\infty}e^{\\frac{\\frac{1}{2}t^2}{t^2}}=e^{\\frac{1}{2}}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1118","title":"11.18","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim_{x\\to 0}\\frac{\\cos x - \\cos (\\sin x)}{x^4}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim_{x\\to 0}\\frac{-\\sin (\\xi)(x-\\sin x)}{x^4}=\\lim_{x\\to 0}\\frac{\\sin x-x}{x^3}\\] \\[=\\lim_{x\\to 0}\\frac{-\\frac{1}{6}x^3}{x^3}=-\\frac{1}{6}\\] <p>\u200b\u53cd\u601d\u200b: \u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\uff1a\\(f(x_1)-f(x_2)=f'(\\xi)(x_1-x_2),\\xi\\) \u200b\u5728\u200b\\(x_1\\)\u200b\u548c\u200b\\(x_2\\)\u200b\u4e4b\u95f4\u200b \u200b\u5bf9\u4e8e\u200b\u672c\u9898\u200b\\(\\xi\\)\u200b\u5728\u200b\\(x\\)\u200b\u548c\u200b\\(sinx\\)\u200b\u4e4b\u95f4\u200b\uff0c\u200b\u800c\u200b\u5728\u200b\\(x\\to 0\\)\u200b\u65f6\u200b\uff0c\\(\\lim\\limits_{x\\to 0}\\cfrac{x}{x}=\\lim\\limits_{x\\to 0}\\cfrac{sinx}{x}=1\\)\uff0c\u200b\u6240\u4ee5\u200b\\(\\lim\\limits_{x\\to 0}\\cfrac{\\xi}{x} =1\\)\uff0c\u200b\u8bf4\u660e\u200b\\(\\xi\\)\u200b\u548c\u200b\\(x\\)\u200b\u5728\u200b\\(x\\to 0\\)\u200b\u65f6\u4e3a\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u65e0\u7a77\u5c0f\u200b\u66ff\u6362\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1119","title":"11.19","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b </p> \\[\\lim\\limits_{x\\to +\\infty}x^2[\\arctan (x+1)-\\arctan (x)]\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to +\\infty}\\frac{\\frac{1}{(1+x)^2+1}-\\frac{1}{x^2+1}}{-2\\frac{1}{x^3}}=\\lim\\limits_{x\\to +\\infty}\\frac{\\frac{-2x-1}{(x^2+2x+2)(x^2+1)}}{-2\\frac{1}{x^3}}\\] \\[\\lim\\limits_{x\\to +\\infty}\\frac{-2x^4-x^3}{-2(x^2+2x+2)(x^2+1)}=1\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1120","title":"11.20","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{n\\to \\infty}n^2[\\arctan\\frac{a}{n}-\\arctan\\frac{a}{n+1}]\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{n\\to \\infty}n^2\\frac{1}{\\xi^2+1}(\\frac{a}{n}-\\frac{a}{n+1})=\\lim\\limits_{n\\to \\infty}n^2\\frac{1}{(\\frac{a}{n})^2+1}\\frac{a}{n^2+n}\\] \\[=\\lim\\limits_{n\\to \\infty}\\frac{an^4}{(a^2+n^2)(n^2+n)}=a\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1121","title":"11.21","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to +\\infty}[\\sin\\sqrt{x+1}-\\sin\\sqrt{x}]\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to +\\infty}\\cos(\\xi)(\\sqrt{x+1}-\\sqrt{x})=\\lim\\limits_{x\\to +\\infty}\\frac{\\cos(x)}{\\sqrt{x+1}+\\sqrt{x}}\\] <p>\u200b\u6709\u200b\u754c\u200b\u51fd\u6570\u200b\u4e58\u4ee5\u200b\u65e0\u7a77\u5c0f\u200b\uff0c\u200b\u539f\u200b\u5f0f\u200b\\(=0\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1122","title":"11.22","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}[\\frac{1}{ln(1+x^2)}-\\frac{1}{ln(1+\\tan ^2x)}]\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}[-\\frac{2\\xi(x-\\tan x)}{(1+\\xi^2)\\ln ^2(1+\\xi^2)}]=\\lim\\limits_{x\\to 0}-\\frac{2x(x-\\tan x)}{(1+x^2)\\ln ^2(1+x^2)}\\] \\[=\\lim\\limits_{x\\to 0}-\\frac{2x(-\\frac{1}{3}x^3)}{x^4}=\\frac{2}{3}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1123","title":"11.23","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}[\\frac{1}{\\ln(1+x^2)}-\\frac{1}{\\sin ^2x}]\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}[\\frac{\\sin ^2x-\\ln(1+x^2)}{\\ln(1+x^2)\\sin ^2x}]=\\lim\\limits_{x\\to 0}[\\frac{\\sin ^2x-x^2+x^2-\\ln(1+x^2)}{x^4}]\\] \\[=\\lim\\limits_{x\\to 0}(\\frac{\\sin ^2-x^2}{x^4})+\\lim\\limits_{x\\to 0}(\\frac{x^2-\\ln(1+x^2)}{x^4})=\\lim\\limits_{x\\to 0}\\frac{\\sin ^2x-x^2}{x^4}+\\frac{1}{2}\\] \\[=\\lim\\limits_{x\\to 0}\\frac{(\\sin x-x)(\\sin x + x)}{x^4}+\\frac{1}{2}=\\lim\\limits_{x\\to 0}\\frac{-\\frac{1}{6}x^3(\\sin x+x)}{x^4}+\\frac{1}{2}\\] \\[=\\lim\\limits_{x\\to 0}-\\frac{1}{6}\\frac{\\sin x+x}{x}+\\frac{1}{2}=\\lim\\limits_{x\\to 0}-\\frac{1}{6}\\times2+\\frac{1}{2}=\\frac{1}{6}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1124","title":"11.24","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}(x+2^x)^{\\frac{2}{x}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}(x+2^x-1+1)^{\\frac{2}{x}}=\\lim\\limits_{x\\to 0}e^{\\frac{2(x+2^x-1)}{x}}=\\lim\\limits_{x\\to 0}e^{\\frac{2(1+2^x\\ln2)}{1}}=e^{2+2ln2}=4e^2\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1125","title":"11.25","text":"\\[\\lim\\limits_{x\\to 0}(\\frac{1-\\tan x}{1+\\tan x})^{\\frac{1}{\\sin kx}}=e,\u200b\u5219\u200b k = ()\\] \\[\\lim\\limits_{x\\to 0}(1-\\frac{2\\tan x}{1+\\tan x})^{\\frac{1}{\\sin kx}}=\\lim\\limits_{x\\to 0}e^{-\\frac{2\\tan x}{1+\\tan x}\\frac{1}{\\sin kx}}\\] \\[\\lim\\limits_{x\\to 0}-\\frac{2\\tan x}{1+\\tan x}\\frac{1}{\\sin kx} = 1=\\lim\\limits_{x\\to 0}-\\frac{2x}{kx} =&gt; k=-2\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1126","title":"11.26","text":"\\[\\lim\\limits_{x\\to 0}(e^x+ax^2+bx)^{\\frac{1}{x^2}}=1,a=(),b=()\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}e^{\\frac{\\ln(e^x+ax^2+bx)}{x^2}}=\\lim\\limits_{x\\to 0}e^{\\frac{e^x+ax^2+bx-1}{x^2}}\\] \\[\\lim\\limits_{x\\to 0}\\frac{e^x+ax^2+bx-1}{x^2}=\\lim\\limits_{x\\to 0}=\\frac{e^x+2ax+b}{2x}=0\\] \\[=\\lim\\limits_{x\\to 0}\\frac{e^x+2a}{2}=\\frac{1}{2}+a=0=&gt;a=-\\frac{1}{2}\\] \\[\\lim\\limits_{x\\to 0}\\frac{e^x-x+b}{2x}=\\lim\\limits_{x\\to 0}\\frac{1+x-x+b}{2x}=\\lim\\limits_{x\\to 0}\\frac{1+b}{2x}=&gt;b=-1\\] \\[a=-\\frac{1}{2},b=-1\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1127","title":"11.27","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}(\\frac{\\arctan x}{x})^{\\frac{1}{1-\\cos x}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}e^{(\\frac{\\arctan x}{x}-1)\\frac{1}{1-\\cos x}}=&gt;\\lim\\limits_{x\\to 0}(\\frac{\\arctan x}{x}-1)\\frac{1}{1-\\cos x}\\] \\[=\\lim\\limits_{x\\to 0}\\frac{\\arctan x - x}{\\frac{1}{2}x^3}=\\lim\\limits_{x\\to 0}\\frac{-\\frac{1}{3}x^3}{\\frac{1}{2}x^3}=-\\frac{2}{3}\\] <p>\u200b\u6240\u4ee5\u200b\u539f\u200b\u5f0f\u200b=</p> \\[e^{-\\frac{2}{3}}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1128","title":"11.28","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{n\\to \\infty}(n \\tan\\frac{1}{n})^{n^2}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{n\\to \\infty}(n \\tan\\frac{1}{n}-1+1)^{n^2}=\\lim\\limits_{n\\to \\infty}e^{(n\\tan\\frac{1}{n}-1)n^2}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{n\\to \\infty}(n\\tan\\frac{1}{n}-1)n^2\\] <p>\u200b\u4ee4\u200b\\(m=\\frac{1}{n}\\),\u200b\u5219\u200b\u539f\u5f0f\u200b=</p> \\[\\lim\\limits_{m\\to 0}\\frac{\\frac{\\tan m-m}{m}}{m^2}\\] \\[=\\lim\\limits_{m\\to 0}\\frac{\\tan m -m}{m^3}=\\lim\\limits_{m\\to 0}\\frac{\\frac{1}{3}m^3}{m^3}=\\frac{1}{3}\\] <p>\u200b\u5219\u200b\u539f\u5f0f\u200b=\\(e^{\\cfrac{1}{3}}\\)</p> <p>\u200b\u53cd\u601d\u200b: \u200b\u6570\u5217\u200b\u6781\u9650\u200b\u8fd0\u7528\u200b\u6d1b\u5fc5\u8fbe\u200b\u6216\u8005\u200b\u6cf0\u52d2\u200b\u516c\u5f0f\u200b\u7684\u200b\u65f6\u5019\u200b\u9700\u8981\u200b\u5148\u200b\u7528\u200b\u6d77\u6d85\u200b\u5b9a\u7406\u200b\uff0c\u200b\u5c06\u200b\u6570\u5217\u200b\u6781\u9650\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u51fd\u6570\u200b\u6781\u9650\u200b\u3002\u200b\u8fd8\u6709\u200b\u8fd9\u9898\u200b\u6211\u200b\u53c8\u200b\u5fd8\u8bb0\u200b\u4e86\u200b\u5c06\u200b\u6c42\u200b\u51fa\u6765\u200b\u7684\u200b\u6307\u6570\u200b\u6781\u9650\u200b\u5e26\u56de\u200b\u4e86\u200b\uff0c\u200b\u6211\u200b\u4ed6\u200b\u5988\u200b\u771f\u50bb\u200b\u903c\u200b\uff0c\u200b\u60e9\u7f5a\u200b\u81ea\u5df1\u200b\u8dd1\u200b5km</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1129","title":"11.29","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{n\\to \\infty}\\tan ^n(\\frac{\\pi}{4}+\\frac{1}{n})\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{n\\to \\infty}e^{nln(\\tan (\\frac{\\pi}{4}+\\frac{1}{n}))}=\\lim\\limits_{n\\to\\infty}e^{n(\\tan (\\frac{\\pi}{4}+\\frac{1}{n})-1)}\\] <p>\u200b\u4ee4\u200b\\(t=\\frac{1}{n}\\),\u200b\u5219\u200b\u6709\u200b</p> \\[\\lim\\limits_{t\\to 0}e^{\\frac{\\tan (\\frac{\\pi}{4}+t)-1}{t}}=\\lim\\limits_{t\\to 0}e^{\\frac{\\sec^2 (\\frac{\\pi}{4}+t)}{1}}=\\lim\\limits_{t\\to 0}e^{\\sec^2{(\\frac{\\pi}{4})}}=e^2\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9811%E6%9C%88/#1130","title":"11.30","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}(\\frac{\\ln(1+x)}{x})^{(\\frac{1}{e^x-1})}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}e^{\\frac{\\ln(1+x)-x}{x(e^x-1)}}=\\lim\\limits_{x\\to 0}e^{\\frac{\\ln(1+x)-x}{x^2}}=\\lim\\limits_{x\\to 0}e^{\\frac{\\frac{1}{1+x}-1}{2x}}\\] \\[=\\lim\\limits_{x\\to 0}e^{\\frac{-x}{2x+2x^2}}=e^{-\\frac{1}{2}}\\] <p>\u200b\u53cd\u601d\u200b: \\(ln(1+x)-x~=-\\frac{1}{2}x^2\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/","title":"\u6b66\u5fe0\u7965\u200b\u6bcf\u65e5\u200b\u4e00\u200b\u9898\u200b12\u200b\u6708","text":"<p>\u200b\u8003\u7814\u200b\u6570\u5b66\u200b\u4e4b\u95f2\u200b\u7684\u200b\u86cb\u200b\u75bc\u200b\u60f3\u200b\u88c5\u200b\u903c\u200b\u4e4b\u200b\u6b66\u5fe0\u7965\u200b\u6bcf\u65e5\u200b\u4e00\u200b\u9898\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#121","title":"12.1","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}(\\frac{(1+x)^{\\frac{1}{x}}}{e})^{\\frac{1}{x}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}(\\frac{(1+x)^{\\frac{1}{x}}}{e}-1+1)^{\\frac{1}{x}}=\\lim\\limits_{x\\to 0}e^{\\frac{(1+x)^{\\frac{1}{x}}-e}{e}\\frac{1}{x}}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{x\\to 0}\\frac{(1+x)^{\\frac{1}{x}}-e}{ex}=\\lim\\limits_{x\\to 0}\\frac{e^{\\frac{ln(1+x)}{x}}-e}{ex}=\\lim\\limits_{x\\to 0}\\frac{e^{\\xi}(\\frac{ln(1+x)}{x}-1)}{ex}\\] \\[=\\lim\\limits_{x\\to 0}\\frac{ln(1+x)-x}{x^2}=\\lim\\limits_{x\\to 0}\\frac{-\\frac{1}{2}x^2}{x^2}=-\\frac{1}{2}\\] <p>\u200b\u6240\u4ee5\u200b\u539f\u200b\u5f0f\u200b=\\(e^{-\\cfrac{1}{2}}\\)</p> <p>\u200b\u53cd\u601d\u200b\uff1a\u200b\u7ecf\u5178\u200b\u7684\u200b\u9519\u8bef\u200b\uff0c\u200b\u6807\u51c6\u200b\u7684\u200b\u96f6\u5206\u200b\uff0c\u200b\u4e3a\u5565\u200b\u4e0d\u200b\u5e26\u56de\u200b\u554a\u200b\uff0c\u200b\u54ce\u200b\u5466\u200b\u6211\u200b\u662f\u200b\u771f\u7684\u200b\u50bb\u200b\u903c\u200b\uff0c\u200b\u60e9\u7f5a\u200b\u4eca\u5929\u200b\u8dd1\u6b65\u200b\uff0c3km\u200b\u8d77\u6b65\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#122","title":"12.2","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}(\\cos 2x+2x\\sin x)^{\\frac{1}{x^4}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}(\\cos 2x+2x\\sin x - 1 + 1)^{\\frac{1}{x^4}}=\\lim\\limits_{x\\to 0}e^{\\frac{\\cos 2x+2x\\sin x-1}{x^4}}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{x\\to 0}\\frac{\\cos 2x+2x\\sin x-1}{x^4}=\\lim\\limits_{x\\to 0}\\frac{-\\sin 2x+2\\sin x+2x\\cos x}{4x^3}\\] \\[\\lim\\limits_{x\\to 0}\\frac{-4\\cos 2x+2\\cos x+2\\cos x-2x\\sin x}{12x^2}=\\lim\\limits_{x\\to 0}\\frac{8\\sin2x - 4\\sin x-2\\sin x-2x\\cos x}{24x}\\] \\[=\\lim\\limits_{x\\to 0}\\frac{8\\times2-4-2-2}{24}=\\frac{1}{3}\\] <p>\u200b\u6240\u4ee5\u200b\u539f\u200b\u5f0f\u200b=\\(e^{\\cfrac{1}{3}}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#123","title":"12.3","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to \\frac{\\pi}{4}}(\\tan x)^{\\frac{1}{\\cos x-\\sin x}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to \\frac{\\pi}{4}}e^{\\frac{\\tan x-1}{\\cos x-\\sin x}}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{x\\to \\frac{\\pi}{4}}\\frac{\\tan x - 1}{\\cos x-\\sin x}=\\lim\\limits_{x\\to \\frac{\\pi}{4}}\\frac{\\sec^2 x}{-\\sin x-\\cos x}=\\lim\\limits_{x\\to \\frac{\\pi}{4}}-\\frac{1}{\\sin x\\cos^2 x+\\cos^3 x}=-\\sqrt{2}\\] <p>\u200b\u6240\u4ee5\u200b\u539f\u200b\u5f0f\u200b=\\(e^{-\\sqrt{2}}\\)</p> <p>\u200b\u53cd\u601d\u200b:\u200b\u592a\u200b\u6d6e\u8e81\u200b\uff0c\u200b\u7b26\u53f7\u200b\u90fd\u200b\u7ed9\u200b\u5fd8\u200b\u4e86\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#124","title":"12.4","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}(\\frac{e^x+e^{2x}+...+e^{nx}}{n})^{\\frac{1}{x}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}e^{(\\frac{e^x+e^{2x}+...+e^{nx}-n}{nx})}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{x\\to 0}{\\frac{e^x+e^{2x}+...+e^{nx}-n}{nx}}=\\lim\\limits_{x\\to 0}\\frac{e^x-1}{nx}+\\frac{e^{2x}-1}{nx}+...+\\frac{e^{nx}-1}{nx}\\] \\[=\\lim\\limits_{x\\to 0}\\frac{1}{n}+\\frac{2}{n}+..+\\frac{n}{n}=\\frac{\\frac{(1+n)n}{2}}{n}=\\frac{1+n}{2}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=\\(e^{\\cfrac{1+n}{2}}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#125","title":"12.5","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to \\infty}(\\cfrac{x^n}{(x+1)(x+2)...(x+n)})^x\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to \\infty}e^{\\cfrac{x(x^n-(x+1)(x+2)...(x+n))}{(x+1)(x+2)...(x+n)}}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{x\\to \\infty}{\\cfrac{-\\cfrac{(1+n)n}{2}x^n+...}{x^n+...}}=-\\cfrac{n^2+n}{2}\\] <p>\u200b\u5219\u200b\u539f\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to \\infty}e^{-\\cfrac{n^2+n}{2}}=e^{-\\cfrac{n^2+n}{2}}\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#126","title":"12.6","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to +\\infty}(\\sin \\frac{1}{x}+\\cos \\frac{1}{x})^x\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to +\\infty}e^{(\\sin \\frac{1}{x}+\\cos \\frac{1}{x}-1)x}\\] <p>\u200b\u5373\u6c42\u200b</p> \\[\\lim\\limits_{x\\to +\\infty}(\\sin \\frac{1}{x}+\\cos \\frac{1}{x}-1)x=\\lim\\limits_{x\\to +\\infty}(\\frac{\\sin \\frac{1}{x}}{\\frac{1}{x}}+\\frac{\\cos \\frac{1}{x}-1}{\\frac{1}{x}})\\] \\[=\\lim\\limits_{x\\to +\\infty}(1+\\frac{-\\frac{1}{2x^2}}{\\frac{1}{x}})=1\\] <p>\u200b\u6240\u4ee5\u200b\u539f\u200b\u5f0f\u200b\\(=e\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#127","title":"12.7","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{n\\to \\infty}n[e(1+\\frac{1}{n})^{-n}-1]\\] <p>\u200b\u4ee4\u200b\\(t = \\frac{1}{n}\\)\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{t\\to 0}\\frac{e(1+t)^{-\\frac{1}{t}}-1}{t}=\\lim\\limits_{t\\to 0}\\frac{e^{(1-\\frac{\\ln(1+t)}{t})}-1}{t}\\] \\[=\\lim\\limits_{t\\to 0}\\frac{1-\\frac{\\ln(1+t)}{t}}{t}=\\lim\\limits_{t\\to 0}\\frac{t-\\ln(1+t)}{t^2}=\\frac{1}{2}\\] <p>\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b:\\(x-\\ln(1+x) \\sim\\frac{1}{2}x^2\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#128","title":"12.8","text":"<p>\u200b\u8bbe\u200b\\(a&gt;0,a\\neq1\\),\u200b\u4e14\u200b\\(\\lim\\limits_{x\\to +\\infty}x^p(a^{\\frac{1}{x}}-a^{\\frac{1}{1+x}})=\\ln a\\), \u200b\u5219\u200b \\(p = ()\\)</p> \\[\\lim\\limits_{x\\to +\\infty}x^pa^{\\xi}\\ln a(\\frac{1}{x}-\\frac{1}{1+x})=\\lim\\limits_{x\\to +\\infty}x^p\\ln a\\frac{1+x-x}{x(1+x)}\\] \\[\\lim\\limits_{x\\to +\\infty}\\ln a\\frac{x^p}{x+x^2}\\] <p>\\(p=2\\)\u200b\u65f6\u8be5\u200b\u6781\u9650\u200b\u624d\u200b\u4e3a\u200b\\(\\ln a\\),\u200b\u53ef\u200b\u5f97\u200b\u7b54\u6848\u200b\\(p = 2\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#129","title":"12.9","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}\\frac{(1-\\sqrt{\\cos x})(1-\\sqrt[3]{\\cos x})...(1-\\sqrt[n]{\\cos x})}{(1-\\cos x)^{n-1}}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}\\frac{\\frac{\\frac{1}{2}}{2}x^2\\cdot\\frac{\\frac{1}{3}}{2}x^2\\cdot...\\frac{\\frac{1}{n}}{2}x^2}{(\\frac{1}{2}x^2)^{n-1}}=\\lim\\limits_{x\\to 0}\\frac{(\\frac{1}{2})^{n-1}\\frac{1}{n!}x^{2(n-1)}}{(\\frac{1}{2})^{n-1}x^{2(n-1)}}=\\frac{1}{n!}\\] <p>\u200b\u53cd\u601d\u200b:\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\\(1-\\sqrt[\\alpha]{\\cos x}\\sim\\frac{\\alpha}{2}x^2\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1210","title":"12.10","text":"<p>\u200b\u6c42\u200b\u6781\u9650\u200b</p> \\[\\lim\\limits_{x\\to 0}\\cfrac{\\ln (\\sin ^2x+e^x)-x}{\\ln (x^2+e^{2x})-2x}\\] <p>\u200b\u539f\u200b\u5f0f\u200b=</p> \\[\\lim\\limits_{x\\to 0}\\frac{\\ln(\\sin ^2x+e^x)-\\ln e^x}{\\ln (x^2+e^{2x})-\\ln e^{2x}}=\\lim\\limits_{x\\to 0}\\frac{\\frac{1}{\\xi_1}\\sin ^2x}{\\frac{1}{\\xi_2}x^2}=1\\] <p>\u200b\u53cd\u601d\u200b\uff1a\u200b\u52a0\u51cf\u200b\u8fd0\u7b97\u200b\u614e\u7528\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\u4ee3\u6362\u200b\u3002\u200b\u6b64\u9898\u200b\u9664\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\u4ee3\u6362\u200b\u4e4b\u5916\u200b\u7b2c\u4e00\u200b\u53cd\u5e94\u200b\u662f\u200b\u60f3\u5230\u200b\u51d1\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5b9a\u7406\u200b\uff0c\u200b\u786e\u5b9e\u200b\u53ef\u4ee5\u200b\u7b97\u200b\u51fa\u200b\u3002\u200b\u800c\u200b\u6b66\u5fe0\u7965\u200b\u51d1\u200b\u5b8c\u200b\u5bf9\u6570\u200b\u4e4b\u540e\u200b\u8fd0\u7528\u200b\u5bf9\u6570\u200b\u8fd0\u7b97\u200b\u6cd5\u5219\u200b\u5c06\u200b\u4e24\u9879\u200b\u53d8\u4e3a\u200b\u4e00\u9879\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u7528\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u66f4\u200b\u6734\u7d20\u200b\u7684\u200b\u601d\u8def\u200b\u3002</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1211","title":"12.11","text":"<p>\u200b\u5df2\u77e5\u200b\u6781\u9650\u200b\\(\\lim\\limits_{x\\to 0}\\cfrac{x-\\arctan x}{x^k}=c\\) ,\u200b\u5176\u4e2d\u200b\\(k,c\\)\u200b\u4e3a\u200b\u5e38\u6570\u200b\uff0c\u200b\u4e14\u200b\\(c\\not ={0}, k=(3),c=(1/3)\\)</p> <p>\u200b\u53cd\u601d\u200b\uff1a\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b \\(x-\\arctan x \\sim \\frac{1}{3}x^3\\\\\\quad \\tan x - x \\sim \\frac{1}{3}x^3\\) </p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1212","title":"12.12","text":"<p>\u200b\u82e5\u200b\\(\\lim\\limits_{x\\to 0}(\\cfrac{\\sin x^3}{x^4}-\\cfrac{f(x)}{x^3})=2\\)\uff0c\u200b\u5219\u200b\u5f53\u200b\\(x\\to0\\)\u200b\u65f6\u200b\uff0c\\(f(x)\\)\u200b\u662f\u200b\\(x\\)\u200b\u7684\u200b \\((C)\\)</p> <p>A.\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b</p> <p>B.\u200b\u540c\u9636\u200b\u4f46\u200b\u975e\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b</p> <p>C.\u200b\u9ad8\u9636\u200b\u65e0\u7a77\u5c0f\u200b</p> <p>D.\u200b\u4f4e\u9636\u200b\u65e0\u7a77\u5c0f\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1213","title":"12.13","text":"<p>\u200b\u5f53\u200b\\(x\\to 0\\)\u200b\u65f6\u200b\uff0c\\(\\alpha(x)=kx^2\\)\u200b\u4e0e\u200b\\(\\beta(x)=\\sqrt{1+x\\arcsin x}-\\sqrt{\\cos x}\\)\u200b\u662f\u200b\u7b49\u4ef7\u200b\u65e0\u7a77\u5c0f\u200b\uff0c\u200b\u5219\u200b\\(k=(\\frac{3}{4})\\)</p> <p>\u200b\u89e3\u200b\uff1a\u200b\u7531\u200b\u9898\u610f\u200b\u5f97\u200b\\(\\lim\\limits_{x\\to 0}\\cfrac{\\alpha(x)}{\\beta(x)}=\\lim\\limits_{x\\to 0}\\cfrac{kx^2}{\\sqrt{1+x\\arcsin x}-\\sqrt{\\cos x}}=1\\)</p> <p>\\(\\lim\\limits_{x\\to 0}\\cfrac{kx^2}{\\sqrt{1+x\\arcsin x}-\\sqrt{\\cos x}}=\\lim\\limits_{x\\to 0}\\cfrac{kx^2}{\\cfrac{1}{2\\sqrt{\\xi}}(1+x\\arcsin x-\\cos x)}=\\lim\\limits_{x\\to 0}\\cfrac{2kx^2}{1+x\\arcsin x- \\cos x}\\)</p> <p>\\(=\\lim\\limits_{x\\to 0}\\cfrac{4kx}{\\arcsin x+\\cfrac{x}{\\sqrt{1-x^2}}+\\sin x}=\\lim\\limits_{x\\to 0}\\cfrac{4k}{1+1+1}=\\cfrac{4k}{3}=1\\)\uff0c\u200b\u6240\u4ee5\u200b\\(k=\\cfrac{3}{4}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1214","title":"12.14","text":"<p>\u200b\u5f53\u200b\\(x\\to 0^+\\)\u200b\u65f6\u200b\uff0c\u200b\u4e0e\u200b\\(\\sqrt{x}\\)\u200b\u7b49\u4ef7\u200b\u5f97\u200b\u65e0\u7a77\u5c0f\u200b\u91cf\u200b\u662f\u200b\\((B)\\)</p> <p>A.\\(1-e^{\\sqrt{x}}\\)</p> <p>B.\\(\\ln {\\frac{1+x}{1-\\sqrt{x}}}\\)</p> <p>C.\\(\\sqrt{1+\\sqrt{x}}-1\\)</p> <p>D.\\(1-\\cos \\sqrt{x}\\)</p> <p>\\(\\ln \\frac{1+x}{1-\\sqrt{x}}=\\ln \\frac{1-\\sqrt{x}+x+\\sqrt{x}}{1-\\sqrt{x}}=\\ln (1+\\frac{x+\\sqrt{x}}{1-\\sqrt{x}})\\) </p> <p>\\(\\lim\\limits_{x\\to 0^+}\\ln (1+\\frac{x+\\sqrt{x}}{1-\\sqrt{x}})=\\lim\\limits_{x\\to 0^+}\\frac{x+\\sqrt{x}}{1-\\sqrt{x}}=&gt;\\lim\\limits_{x\\to 0^+}\\frac{x+\\sqrt{x}}{\\sqrt{x}-x}=1\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1215","title":"12.15","text":"<p>\u200b\u8bbe\u200b\\(\\alpha_1=x(\\cos \\sqrt{x}-1),\\alpha_2=\\sqrt{x}\\ln (1+\\sqrt[3]{x}),\\alpha_3=\\sqrt[3]{x+1}-1\\),\u200b\u5f53\u200b\\(x\\to 0^+\\)\u200b\u65f6\u200b</p> <p>\u200b\u4ee5\u4e0a\u200b\u4e09\u4e2a\u200b\u65e0\u7a77\u5c0f\u200b\u91cf\u200b\u4ece\u200b\u4f4e\u9636\u200b\u5230\u200b\u9ad8\u9636\u200b\u7684\u200b\u6392\u5e8f\u200b\u662f\u200b \\((\\alpha_2,\\alpha_3,\\alpha_1)\\)</p> \\[\\alpha_1\\sim -\\frac{1}{2}x^2,\\alpha_2\\sim x^{\\frac{5}{6}},\\alpha_3\\sim \\frac{1}{3}x\\]"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1216","title":"12.16","text":"<p>\u200b\u51fd\u6570\u200b\\(f(x)=\\cfrac{(e^{\\cfrac{1}{x}}+e)\\tan x}{x(e^{\\cfrac{1}{x}}-e)}\\)\u200b\u5728\u200b\\([-\\pi,\\pi]\\)\u200b\u4e0a\u200b\u7684\u200b\u7b2c\u4e00\u7c7b\u200b\u95f4\u65ad\u200b\u70b9\u200b\u662f\u200b\\(x=(0)\\)</p> <p>\u200b\u7b2c\u4e00\u7c7b\u200b\u95f4\u65ad\u200b\u70b9\u200b\uff1a\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b&amp;\u200b\u8df3\u8dc3\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(x=0\\)\u200b\u4e3a\u200b\u8df3\u8dc3\u200b\u95f4\u65ad\u200b\u70b9\u200b\uff0c\u200b\u56e0\u4e3a\u200b\\(\\lim\\limits_{x\\to 0^+}f(x)=1,\\lim\\limits_{x\\to 0^-}f(x)=-1,\\lim\\limits_{x\\to 0^+}f(x)\\not ={\\lim\\limits_{x\\to 0^-}f(x)}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1217","title":"12.17","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b\\(f(x)=\\cfrac{\\ln |x|}{|x-1|} \\sin x\\),\u200b\u5219\u200b \\(f(x)\\)\u200b\u6709\u200b( )</p> <p>A.1\u200b\u4e2a\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b\uff0c1\u200b\u4e2a\u200b\u8df3\u8dc3\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>B.1\u200b\u4e2a\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b\uff0c1\u200b\u4e2a\u200b\u65e0\u7a77\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>C.2\u200b\u4e2a\u200b\u8df3\u8fdc\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>D.2\u200b\u4e2a\u200b\u65e0\u7a77\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(\\lim\\limits_{x\\to 1^+}\\frac{\\ln |x|}{|x-1|}\\sin x=\\lim\\limits_{x\\to 1^+}\\frac{\\ln |x|}{x-1}\\sin 1=\\lim\\limits_{x\\to 1^+}\\frac{\\sin (1)\\ln x}{x-1}=\\sin 1\\\\ \\lim\\limits_{x\\to 1^-}\\frac{\\sin (1)\\ln x}{1-x}=-\\sin 1\\)</p> <p>\\(\\lim\\limits_{x\\to 1^+}f(x)\\not ={\\lim\\limits_{x\\to 1^-}f(x)}\\),\u200b\u6240\u4ee5\u200b\\(x=1\\)\u200b\u8df3\u8dc3\u200b\u4e3a\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(\\lim\\limits_{x\\to 0^+}\\frac{x\\ln x}{1-x}=\\lim\\limits_{x\\to 0^+}x\\ln x=\\lim\\limits_{x\\to 0^+}\\frac{\\ln x}{\\frac{1}{x}}=\\lim\\limits_{x\\to 0^+}\\frac{\\frac{1}{x}}{-\\frac{1}{x^2}}=0\\)</p> <p>\\(\\lim\\limits_{x\\to 0^-}\\frac{x\\ln (-x)}{1-x}=\\lim\\limits_{x\\to 0^-}x\\ln (-x)=\\lim\\limits_{x\\to 0^-}\\frac{\\ln (-x)}{\\frac{1}{x}}=\\lim\\limits_{x\\to 0^-}\\frac{-\\frac{1}{x}}{-\\frac{1}{x^2}}=0\\)</p> <p>\u200b\u5219\u200b\\(x=0\\)\u200b\u4e3a\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\u200b\u53cd\u601d\u200b\uff1a\u200b\u5148\u200b\u786e\u5b9a\u200b\u5b9a\u4e49\u57df\u200b\uff0c\u200b\u627e\u5230\u200b\u672a\u5b9a\u4e49\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u8bd5\u63a2\u200b\u662f\u5426\u662f\u200b\u95f4\u65ad\u200b\u70b9\u200b\u3002\u200b\u4e3b\u8981\u200b\u89c2\u5bdf\u200b\u9009\u51fa\u200b\u7684\u200b\u70b9\u200b\u5de6\u53f3\u200b\u6781\u9650\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u3001\u200b\u5b58\u5728\u200b\u7684\u8bdd\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1218","title":"12.18","text":"<p>\u200b\u51fd\u6570\u200b\\(f(x)=\\cfrac{x^2-x}{x^2-1}\\sqrt{1+\\frac{1}{x^2}}\\)\u200b\u7684\u200b\u65e0\u7a77\u200b\u95f4\u65ad\u200b\u70b9\u200b\u7684\u200b\u4e2a\u6570\u200b\u4e3a\u200b\uff081\uff09</p> <p>\u200b\u53ef\u200b\u7591\u70b9\u200b\uff1a1\uff0c-1\uff0c0</p> <p>\\(f(x)=\\frac{x^2-x}{x^2-1}\\sqrt{1+\\frac{1}{x^2}}=\\frac{x}{x+1}\\sqrt{1+\\frac{1}{x^2}}\\)</p> <p>\\(\\lim\\limits_{x\\to 1^+}f(x)=\\lim\\limits_{x\\to 1^-}f(x)=\\frac{1}{2}\\sqrt{2}\\)\uff0c\u200b\u5219\u200b\\(x=1\\)\u200b\u4e3a\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(\\lim\\limits_{x\\to -1}f(x)=\\frac{-\\sqrt{2}}{x+1}=\\infty\\),\u200b\u5219\u200b\\(x=-1\\)\u200b\u4e3a\u200b\u65e0\u7a77\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(\\lim\\limits_{x\\to 0}f(x)=\\lim\\limits_{x\\to 0}x\\sqrt{1+\\frac{1}{x^2}}=&gt;\\lim\\limits_{x\\to 0^+}\\sqrt{x^2+1}=1\uff0c\\lim\\limits_{x\\to 0^-}-\\sqrt{x^2}\\sqrt{1+\\frac{1}{x^2}}=-1\\)</p> <p>\\(\\lim\\limits_{x\\to 0^+}f(x)\\not ={\\lim\\limits_{x\\to 0^-}f(x)}\\)\uff0c\u200b\u6240\u4ee5\u200b\\(x=0\\)\u200b\u4e3a\u200b\u8df3\u8dc3\u200b\u95f4\u65ad\u200b\u70b9\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1219","title":"12.19","text":"<p>\u200b\u51fd\u6570\u200b\\(f(x)=\\cfrac{|x|^x-1}{x(x+1)\\ln |x|}\\)\u200b\u7684\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b\u7684\u200b\u4e2a\u6570\u200b\u4e3a\u200b(2)</p> <p>\u200b\u53ef\u200b\u7591\u70b9\u200b\uff1a0\uff0c-1\uff0c1</p> <p>\\(\\lim\\limits_{x\\to 0^+}f(x)=\\lim\\limits_{x\\to 0^+}\\frac{x^x-1}{x(x+1)\\ln x}=\\lim\\limits_{x\\to 0^+}\\frac{e^{x\\ln x}-1}{x\\ln x}=1,\\)\u200b\u540c\u7406\u200b\u53ef\u200b\u5f97\u200b\\(\\lim\\limits_{x\\to 0^-}f(x)=1\\)\u200b\u6240\u4ee5\u200b\\(x=0\\)\u200b\u4e3a\u200b\\(f(x)\\)\u200b\u7684\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(\\lim\\limits_{x\\to -1}f(x)=-\\lim\\limits_{x\\to -1}\\frac{(-x)^x-1}{(x+1)\\ln (-x)}=\\lim\\limits_{x\\to -1}\\frac{e^{x\\ln (-x)}-1}{(x+1)\\ln (-x)}=\\lim\\limits_{x\\to -1}\\frac{x\\ln(-x)}{(x+1)\\ln(-x)}=\\infty\\)\u200b\u6240\u4ee5\u200b\\(x=-1\\)\u200b\u4e3a\u200b\\(f(x)\\)\u200b\u7684\u200b\u65e0\u7a77\u200b\u95f4\u65ad\u200b\u70b9\u200b</p> <p>\\(\\lim\\limits_{x\\to 1}f(x)=\\lim\\limits_{x\\to 1}\\frac{x^x-1}{x(x+1)\\ln x}=\\lim\\limits_{x\\to 1}\\frac{e^{x\\ln x}-1}{2x\\ln x}=\\frac{1}{2}\\)\u200b\u6240\u4ee5\u200b\\(x=1\\)\u200b\u4e3a\u200b\\(f(x)\\)\u200b\u7684\u200b\u53ef\u200b\u53bb\u200b\u95f4\u65ad\u200b\u70b9\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1220","title":"12.20","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b\\(f(x)=\\lim\\limits_{n\\to \\infty}\\cfrac{1+x}{1+x^{2n}}\\),\u200b\u8ba8\u8bba\u200b\u51fd\u6570\u200b\u7684\u200b\u95f4\u65ad\u200b\u70b9\u200b\u5176\u200b\u7ed3\u8bba\u200b\u4e3a\u200b\uff08\uff09</p> <p>A.\u200b\u4e0d\u200b\u5b58\u5728\u200b\u95f4\u65ad\u200b\u70b9\u200b </p> <p>B.\u200b\u5b58\u5728\u200b\u95f4\u65ad\u200b\u70b9\u200b\\(x=1\\)</p> <p>C.\u200b\u5b58\u5728\u200b\u95f4\u65ad\u200b\u70b9\u200b\\(x=0\\)</p> <p>D.\u200b\u5b58\u5728\u200b\u95f4\u65ad\u200b\u70b9\u200b\\(x=-1\\)</p> <p>\u200b\u7531\u200b\u9898\u610f\u200b\u77e5\u200b\uff1a \\(\\quad f(x)=\\left\\{     \\begin{aligned}     0,\\quad x\\le-1\\\\     1+x,\\quad -1&lt;x&lt;1     \\\\1, \\quad  x = 1     \\\\0, \\quad x&gt;1     \\end{aligned}     \\right.  \\quad\\)</p> <p>\u200b\u5219\u200b\u53ef\u77e5\u200b\\(x=1\\)\u200b\u4e3a\u200b\u51fd\u6570\u200b\\(f(x)\\)\u200b\u7684\u200b\u8df3\u8dc3\u200b\u95f4\u65ad\u200b\u70b9\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1226","title":"12.26","text":"<p>\\(\\quad f(x)=\\left\\{     \\begin{aligned}     \\ln{\\sqrt{x}},\\quad x\\ge1\\\\     2x-1,\\quad x&lt;1     \\end{aligned}     \\right.  \\quad y=f(f(x)),\\frac{dy}{dx}|_{x=e}=()\\)</p> <p>\\(\\frac{dy}{dx}|_{x=e}=y'|_{x=e}=f'(f(x))\\cdot f'(x)|_{x=e}=f'(f(e))\\cdot f'(e)=f'(\\frac{1}{2})\\cdot f'(e)\\)</p> <p>\\(= 2\\cdot\\frac{1}{\\sqrt{e}}\\cdot \\frac{1}{2\\sqrt{e}}=\\frac{1}{e}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1227","title":"12.27","text":"<p>\u200b\u8bbe\u200b\\(y=y(x)\\)\u200b\u662f\u200b\u7531\u200b\u65b9\u7a0b\u200b \\(xy+e^y=x+1\\) \u200b\u786e\u5b9a\u200b\u7684\u200b\u9690\u200b\u51fd\u6570\u200b,\u200b\u5219\u200b\\(\\cfrac{d^2y}{dx^2}|_{x=0}=\\)</p> <p>\u200b\u7b49\u5f0f\u200b\u4e24\u8fb9\u200b\u5bf9\u200bx\u200b\u6c42\u5bfc\u200b\u53ef\u200b\u5f97\u200b\\(y+x\\cfrac{dy}{dx}+e^y\\cfrac{dy}{dx}=1\\),\u200b\u5373\u200b\\(\\cfrac{dy}{dx}=\\cfrac{1-y}{x+e^y}\\)</p> <p>\\(\\cfrac{d^2y}{dx^2} =\\cfrac{-\\cfrac{dy}{dx}(x+e^y)-(1+e^y\\cfrac{dy}{dx})(1-y)}{(x+e^y)^2}\\),\u200b\u5c06\u200b\\(x=0\\)\u200b\u5e26\u5165\u200b\u524d\u9762\u200b\u7684\u200b\u5f0f\u5b50\u200b\u53ef\u77e5\u200b,\\(x=0\\)\u200b\u65f6\u200b\\(y=0\\)</p> <p>\u200b\u5219\u200b\u53ef\u5f97\u200b\\(\\cfrac{d^2y}{dx^2}|_{x=0}=-3\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1228","title":"12.28","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b\\(y = y(x)\\)\u200b\u7531\u200b\u53c2\u6570\u200b\u65b9\u7a0b\u200b \\(\\left\\{     \\begin{aligned}     x=t-\\ln{(1+t)}\\\\     y=t^3+t^2\\quad\\quad\\quad\\\\     \\end{aligned}     \\right.\\) \u200b\u6240\u200b\u786e\u5b9a\u200b\uff0c\u200b\u5219\u200b\\(\\frac{d^2y}{dx^2}=\\)</p> <p>\\(\\cfrac{dx}{dt}=1-\\cfrac{1}{1+t}=\\cfrac{t}{1+t},\\cfrac{dy}{dt}=3t^2+2t\\)</p> <p>\\(\\cfrac{dy}{dx}=\\cfrac{(3t^2+2t)(1+t)}{t}=(3t+2)(1+t)\\)</p> <p>\\(\\cfrac{d^2y}{dx^2}=\\cfrac{\\cfrac{dy}{dx}/dt}{\\cfrac{dx}{dt}}=\\cfrac{(1+t)(3(1+t)+(3t+2))}{t}=\\cfrac{(1+t)(6t+5)}{t}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1229","title":"12.29","text":"<p>\u200b\u8bbe\u200b\\(y=x^22^x\\),\u200b\u6c42\u200b\\(y^{(n)}\\)</p> <p>\u200b\u89e3\u200b\uff1a\u200b\u4ee4\u200b\\(u=x^2,v=2^x,u'=2x,u''=2,u'''=0,v^{(n)}=(\\ln 2)^{n}2^x\\)</p> <p>\\(y^{(n)}=(x^22^x)^{(n)}=(uv)^{(n)}=C_{n}^0x^2(\\ln 2)^n2^x+C_n^12x(\\ln 2)^{n-1}2^x+C_n^22(\\ln 2)^{n-2}2^x\\)</p> <p>\\(=x^2(\\ln 2)^n2^x+n(\\ln 2)^{n-1}x2^{x+1}+\\frac{n(n-1)}{2}(\\ln 2)^{n-2}2^{x+1}\\)</p> <p>\u200b\u53cd\u601d\u200b\uff1a\\((uv)^{(n)}=\\sum\\limits_{k=0}^{n}C_n^ku^{(k)}v^{(n-k)},(u+v)^{(n)}=u^{(n)}+v^{(n)}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1230","title":"12.30","text":"<p>\u200b\u8bbe\u200b\\(y = \\cfrac{1}{x^2-1}\\)\uff0c\u200b\u6c42\u200b\\(y^{(n)}\\)</p> <p>\\(y=\\cfrac{1}{x^2 -1}=\\cfrac{1}{(x+1)(x-1)}=\\cfrac{1}{2}\\cdot(\\cfrac{1}{x-1}-\\cfrac{1}{x+1})\\)</p> <p>\u200b\u800c\u200b\\((\\cfrac{1}{x-1})'=((x-1)^{-1})'=(-1)(x-1)^{-2},(\\cfrac{1}{x-1})''=(-1)(-2)(x-1)^{-3}\\)</p> <p>\u200b\u6240\u4ee5\u200b\\((\\cfrac{1}{x-1})^{(n)}=(-1)^nn!(x-1)^{-(n+1)}=\\cfrac{(-1)^nn!}{(x-1)^{n+1}}\\)</p> <p>\u200b\u5219\u200b\\(y^{(n)}=\\cfrac{1}{2}(\\cfrac{(-1)^nn!}{(x-1)^{n+1}}-\\cfrac{(-1)^nn!}{(x+1)^{n+1}})\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#1231","title":"12.31","text":"<p>\u200b\u5df2\u77e5\u200b\u51fd\u6570\u200b\\(f(x)\\)\u200b\u5177\u6709\u200b\u4efb\u610f\u200b\u9636\u200b\u5bfc\u6570\u200b\uff0c\u200b\u4e14\u200b\\(f'(x)=[f(x)]^2\\),\u200b\u5219\u200b\u5f53\u200b\\(n\\)\u200b\u4e3a\u200b\u5927\u4e8e\u200b\\(2\\)\u200b\u7684\u200b\u6b63\u6574\u6570\u200b\u65f6\u200b,\\(f(x)\\)\u200b\u7684\u200b\\(n\\)\u200b\u9636\u200b\u5bfc\u6570\u200b\\(f^{(n)}(x)\\)\u200b\u662f\u200b\\(()\\)</p> <p>\u200b\u7b54\u200b\uff1a</p> <p>\u200b\u7531\u200b\u9898\u610f\u200b\u5f97\u200b\uff0c\u200b\u53ef\u77e5\u200b\\(f''(x)=2f(x)[f(x)]^2=2[f(x)]^3,f^{(3)}(x)=2\\cdot3[f(x)]^4\\)</p> <p>\u200b\u627e\u200b\u89c4\u5f8b\u200b\u53ef\u77e5\u200b\\(f^{(n)}(x)=n![f(x)]^{(n+1)}\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#11","title":"1.1","text":"<p>\u200b\u8bbe\u200b\\(f(x)\\)\u200b\u5728\u200b\\((-\\infty,+\\infty)\\)\u200b\u5185\u53ef\u5bfc\u200b\uff0c\u200b\u4e14\u200b\u5bf9\u200b\u4efb\u610f\u200b\u7684\u200b\\(x_1,x_2,\\)\u200b\u5f53\u200b\\(x_1&gt;x_2\\)\u200b\u65f6\u200b,\u200b\u90fd\u200b\u6709\u200b\\(f(x_1)&gt;f(x_2)\\)\uff0c\u200b\u5219\u200b \\((A)\\)</p> <p>A.\u200b\u5bf9\u200b\u4efb\u610f\u200b\u7684\u200b\\(x,f'(x)&gt;0\\)</p> <p>B.\u200b\u5bf9\u200b\u4efb\u610f\u200b\u7684\u200b\\(x,f'(x)\\le 0\\)</p> <p>C.\u200b\u51fd\u6570\u200b\\(f(-x)\\)\u200b\u5355\u8c03\u200b\u589e\u52a0\u200b</p> <p>D.\u200b\u51fd\u6570\u200b\\(-f(-x)\\)\u200b\u5355\u8c03\u200b\u589e\u52a0\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#13","title":"1.3","text":"<p>\u200b\u8bbe\u200b\\(\\lim\\limits_{x\\to a}\\cfrac{f(x)-f(a)}{(x-a)^n}=-1\\)\uff0c\u200b\u5176\u200b\\(n\\)\u200b\u4e3a\u200b\u5927\u4e8e\u200b\\(1\\)\u200b\u7684\u200b\u6574\u6570\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\\(x=a\\)\u200b\u5904\u200b\\(()\\)</p> <p>A.\\(f(x)\\)\u200b\u7684\u200b\u5bfc\u6570\u200b\u5b58\u5728\u200b\uff0c\u200b\u4e14\u200b\\(f'(a)\\neq0\\)</p> <p>B.\\(f(x)\\)\u200b\u53d6\u5f97\u200b\u6781\u5927\u503c\u200b</p> <p>C.\\(f(x)\\)\u200b\u53d6\u5f97\u200b\u6781\u5c0f\u503c\u200b</p> <p>D.\\(f(x)\\)\u200b\u662f\u5426\u200b\u53d6\u5f97\u200b\u6781\u503c\u200b\u4e0e\u200bn\u200b\u7684\u200b\u53d6\u503c\u200b\u6709\u5173\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#14","title":"1.4","text":"<p>\u200b\u8bbe\u200b\\(f(x)\\)\u200b\u7684\u200b\u5bfc\u6570\u200b\u5728\u200b\\(x=a\\)\u200b\u5904\u200b\u8fde\u7eed\u200b\uff0c\u200b\u53c8\u200b\\(\\lim\\limits_{x\\to a}\\frac{f'(x)}{x-a}=-1\\),\u200b\u5219\u200b\\(()\\)</p> <p>A.\\(x=a\\) \u200b\u662f\u200b \\(f(x)\\) \u200b\u7684\u200b\u6781\u5c0f\u503c\u200b\u70b9\u200b</p> <p>B.\\(x=a\\) \u200b\u662f\u200b \\(f(x)\\) \u200b\u7684\u200b\u6781\u5927\u503c\u200b\u70b9\u200b</p> <p>C.\\((a,f(a))\\)\u200b\u662f\u200b\u66f2\u7ebf\u200b\\(y=f(x)\\)\u200b\u7684\u200b\u62d0\u70b9\u200b</p> <p>D.\\(x=a\\)\u200b\u4e0d\u662f\u200b\\(f(x)\\)\u200b\u7684\u200b\u6781\u503c\u200b\u70b9\u200b\uff0c\\((a,f(a))\\)\u200b\u4e5f\u200b\u4e0d\u662f\u200b\u66f2\u7ebf\u200b\\(y=f(x)\\)\u200b\u7684\u200b\u62d0\u70b9\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#15","title":"1.5","text":"<p>\u200b\u66f2\u7ebf\u200b\\(y=(x-5)x^{\\frac{2}{3}}\\)\u200b\u7684\u200b\u62d0\u70b9\u200b\u5750\u6807\u200b\u4e3a\u200b\\(()\\)</p> <p>\\(y'=x^{\\frac{2}{3}}+(x-5)\\cdot\\frac{2}{3}x^{-\\frac{1}{3}}=x^{\\frac{2}{3}}+\\frac{2}{3}x^{\\frac{2}{3}}-\\frac{10}{3}x^{-\\frac{1}{3}}=\\frac{5}{3}x^{\\frac{2}{3}}-\\frac{10}{3}x^{-\\frac{1}{3}}\\)</p> <p>\\(y''=\\frac{10}{9}x^{-\\frac{1}{3}}+\\frac{10}{9}x^{-\\frac{4}{3}}=\\frac{10}{9}x^{-\\frac{4}{3}}(x+1)\\)</p> <p>\u200b\u4e8e\u662f\u200b\u53ef\u77e5\u200b\\(x=-1,0\\)\u200b\u5747\u200b\u4e3a\u200b\u62d0\u70b9\u200b\u7684\u200b\u53ef\u200b\u7591\u70b9\u200b\uff0c\u200b\u5219\u200b\\(x&gt;0\\)\u200b\u65f6\u200b\uff0c\\(f''(x)&gt;0\\),\\(x&lt;0\\)\u200b\u65f6\u200b\\(f''(x)&gt;0\\),\u200b\u5219\u200b\\(x=0\\)\u200b\u65f6\u4e0d\u4e3a\u200b\u62d0\u70b9\u200b\u3002\\(x&gt;-1\\)\u200b\u65f6\u200b\uff0c\\(f''(x)&gt;0\\),\\(x&lt;-1\\)\u200b\u65f6\u200b,\\(f''(x)&lt;0\\),\u200b\u6240\u4ee5\u200b\\((-1,f(-1))\\)\u200b\u4e3a\u200b\u62d0\u70b9\u200b</p> <p>\u200b\u53cd\u601d\u200b\uff1a\u200b\u62d0\u70b9\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b\u7684\u200b\u70b9\u200b\uff1a1.\u200b\u4e8c\u9636\u200b\u5bfc\u6570\u200b\u4e3a\u200b0\u200b\u7684\u200b\u70b9\u200b. 2.\u200b\u4e8c\u9636\u200b\u5bfc\u6570\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u70b9\u200b</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#118","title":"1.18","text":"<p>\u200b\u8bbe\u200b\\(p,q\\)\u200b\u662f\u200b\u5927\u4e8e\u200b\\(1\\)\u200b\u7684\u200b\u5e38\u6570\u200b\uff0c\u200b\u5e76\u4e14\u200b \\(\\frac{1}{p}+\\frac{1}{q}=1\\) ,\u200b\u8bc1\u660e\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u7684\u200b \\(x&gt;0\\) ,\u200b\u6709\u200b \\(\\frac{1}{p}x^p+\\frac{1}{q}\\ge x\\)</p> <p>\u200b\u8bc1\u660e\u200b\uff1a</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#119","title":"1.19","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b\\(f(x)\\)\u200b\u5728\u200b\\([0,3]\\)\u200b\u4e0a\u200b\u8fde\u7eed\u200b\uff0c\u200b\u5728\u200b\\((0,3)\\)\u200b\u5185\u53ef\u5bfc\u200b\uff0c\u200b\u4e14\u200b\\(f(0)+f(1)+f(2)=3,f(3)=1\\)\u200b\u8bd5\u200b\u8bc1\u660e\u200b\u5fc5\u200b\u5b58\u5728\u200b\\(\\xi\\in(0,3)\\),\u200b\u4f7f\u200b\\(f'(\\xi)=0\\)</p> <p>\u200b\u8bc1\u660e\u200b\uff1a \u200b\u56e0\u4e3a\u200b\\(f(x)\\)\u200b\u5728\u200b\\([0,3]\\)\u200b\u4e0a\u200b\u8fde\u7eed\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\\([0,2]\\)\u200b\u4e0a\u200b\uff0c\\(\\exists m,M\\)\uff0c\u200b\u5206\u522b\u200b\u4e3a\u200b\u6700\u5c0f\u503c\u200b\u548c\u200b\u6700\u5927\u503c\u200b,\u200b\u4efb\u610f\u200b\u7684\u200b\\(x\\in[0,2]\\)\u200b\u90fd\u200b\u6709\u200b\\(m \\le f(x) \\le M\\),\u200b\u5373\u200b\\(m\\le f(1) \\le M,m\\le f(2) \\le M, m\\le f(3)\\le M\\)\u3002\u200b\u4e8e\u662f\u200b\u6709\u200b\\(m\\le \\cfrac{f(0)+f(1)+f(2)}{3} \\le M =&gt; m\\le1\\le M\\),\u200b\u7531\u4ecb\u503c\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b\\(\\exists \\xi_1\\in[0,2]\\),\u200b\u4f7f\u5f97\u200b\\(f(\\xi_1)=1,f(3)=1\\),\u200b\u7531\u7f57\u5c14\u200b\u5b9a\u7406\u200b\u53ef\u200b\u5f97\u200b\\(\\exists \\xi\\in(\\xi_1,3)\\),\u200b\u4f7f\u5f97\u200b\\(f'(\\xi)=0\\).\u200b\u5373\u200b\u8bc1\u660e\u200b\u4e86\u200b\\(\\exists \\xi \\in(0,3)\\),\u200b\u4f7f\u5f97\u200b\\(f'(\\xi) = 0\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#120","title":"1.20","text":"<p>\u200b\u8bbe\u200b\\(f(x)\\)\u200b\u5728\u200b\u533a\u95f4\u200b\\([a,b]\\)\u200b\u4e0a\u200b\u5177\u6709\u200b\u4e8c\u9636\u200b\u5bfc\u6570\u200b\uff0c\u200b\u4e14\u200b\\(f(a)=f(b)=0,f'(a)f'(b)&gt;0\\),\u200b\u8bc1\u660e\u200b\u5b58\u5728\u200b\\(\\xi\\in(a,b)\\)\u200b\u548c\u200b\\(\\eta\\in(a,b)\\)\u200b\u4f7f\u200b\\(f(\\xi) = 0\\)\u200b\u53ca\u200b\\(f''(\\eta)=0\\)</p> <p>\u200b\u8bc1\u660e\u200b\uff1a\u200b\u56e0\u4e3a\u200b\\(f(x)\\)\u200b\u4e8c\u9636\u200b\u53ef\u5bfc\u200b\uff0c\u200b\u5219\u200b\\(f(x)\\)\u200b\u5728\u200b\\([a,b]\\)\u200b\u4e0a\u200b\u8fde\u7eed\u200b\uff0c\u200b\u56e0\u4e3a\u200b\\(f'(a)f'(b) &gt;0\\),\u200b\u6240\u4ee5\u200b\\(f'(a)\\)\u200b\u4e0e\u200b\\(f'(b)\\)\u200b\u540c\u200b\u53f7\u200b\uff0c\u200b\u5047\u8bbe\u200b\\(f'(a)&gt;0\\)\u200b\u4e14\u200b\\(f'(b)&gt;0\\),\u200b\u5219\u200b\u7531\u200b\u6781\u9650\u200b\u7684\u200b\u4fdd\u53f7\u6027\u200b\u53ef\u77e5\u200b\uff0c\u200b\u5728\u200b\\(a\\)\u200b\u7684\u200b\u53f3\u200b\u9886\u57df\u200b\u6709\u200b\\(f(x)&gt;f(a)=0\\),\u200b\u5728\u200b\\(b\\)\u200b\u7684\u200b\u5de6\u200b\u9886\u57df\u200b\u6709\u200b\\(f(x)&lt;f(b)=0\\),\u200b\u4e8e\u662f\u200b\u4fbf\u200b\u53ef\u200b\u627e\u51fa\u200b\u4e24\u70b9\u200b\\(x_1,x_2\\),\u200b\u4f7f\u5f97\u200b\\(f(x_1)f(x_2)&lt;0\\),\u200b\u53c8\u200b\u7531\u200b\u96f6\u70b9\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b\\(\\exists \\xi\\in (x_1,x_2)\\)\u200b\u4f7f\u5f97\u200b\\(f(\\xi) = 0\\),\u200b\u800c\u200b\u5f53\u200b\\(f'(a)&lt;0\\)\u200b\u4e14\u200b\\(f'(b)&lt;0\\)\u200b\u65f6\u200b\u540c\u7406\u200b\u53ef\u200b\u5f97\u200b\\(\\exists \\xi \\in (a,b)\\)\u200b\u4f7f\u5f97\u200b\\(f(\\xi) =0\\)\u3002</p> <p>\u200b\u56e0\u4e3a\u200b\\(f(a)=f(b)=0\\),\u200b\u5219\u200b\u7531\u7f57\u5c14\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b\uff0c\\(\\exists \\beta\\in(a,b)\\),\u200b\u4f7f\u5f97\u200b\\(f'(\\beta)=0\\),\u200b\u5219\u200b\u7531\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b,\\(\\exists \\xi_1\\in(a,\\beta),\\xi_2\\in(\\beta,b)\\),\u200b\u4f7f\u5f97\u200b\\(f''(\\xi_1)=\\cfrac{f'(\\beta)-f'(a)}{\\beta - a},f''(\\xi_2)=\\cfrac{f'(\\beta)-f'(b)}{\\beta - b}\\),\u200b\u4e14\u200b\\(f''(\\xi_1)f''(\\xi_2)&lt;0\\),\u200b\u7531\u200b\u96f6\u70b9\u200b\u5b9a\u7406\u200b\u77e5\u200b\uff0c\\(\\exists \\eta\\in(\\xi_1,\\xi_2)\\)\uff0c\u200b\u4f7f\u5f97\u200b\\(f''(\\eta)=0,\\exists \\eta\\in(a,b)\\),\u200b\u4f7f\u5f97\u200b\\(f''(\\eta)=0\\)</p>"},{"location":"blog/%E6%AD%A6%E5%BF%A0%E7%A5%A5%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%9812%E6%9C%88/#128_1","title":"1.28","text":"<p>\u200b\u8bbe\u200b\\(f(x)\\)\u200b\u5728\u200b\\([a,b]\\)\u200b\u4e0a\u200b\u8fde\u7eed\u200b\uff0c\u200b\u5728\u200b\\((a,b)\\)\u200b\u5185\u53ef\u5bfc\u200b\uff0c\u200b\u4e14\u200b\\(f(a)=f(b)=0\\),\u200b\u8bd5\u200b\u8bc1\u660e\u200b\uff1a</p> <p>(1)\\(\\exists \\xi \\in (a,b)\\), \u200b\u4f7f\u200b\\(f'(\\xi)+f(\\xi)=0\\) </p> <p>(2)\\(\\exists \\eta \\in (a,b)\\), \u200b\u4f7f\u200b\\(f'(\\eta)-f(\\eta)=0\\)</p> <p>(3)\\(\\exists \\alpha \\in(a,b)\\), \u200b\u4f7f\u200b\\(f'(\\alpha)+\\lambda f(\\alpha)=0\\)</p> <p>\u200b\u8bc1\u660e\u200b\uff1a</p> <p>\uff081\uff09\u200b\u4e0d\u59a8\u200b\u4ee4\u200b\\(G(x)=e^xf(x)\\),\u200b\u53ef\u77e5\u200b\\(G(x)\\)\u200b\u5728\u200b\\([a,b]\\)\u200b\u4e0a\u200b\u8fde\u7eed\u200b\uff0c\u200b\u5728\u200b\\((a,b)\\)\u200b\u5185\u53ef\u5bfc\u200b\uff0c\u200b\u53c8\u200b\\(f(a)=f(b)=0\\)\uff0c\u200b\u5219\u200b\\(G(a)=G(b)=0\\),\u200b\u7531\u7f57\u5c14\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b\uff0c\\(\\exists \\xi\\in(a,b)\\),\u200b\u4f7f\u5f97\u200b\\(G'(\\xi)=e^{\\xi}f(\\xi)+f'(\\xi)e^{\\xi}=0=&gt;f(\\xi)+f'(\\xi)=0\\)</p> <p>\uff082\uff09 \u200b\u4e0d\u59a8\u200b\u4ee4\u200b\\(G(x)=e^{-x}f(x)\\),\u200b\u7531\u7f57\u5c14\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b\\(\\exists \\eta \\in (a,b)\\)\uff0c\u200b\u4f7f\u5f97\u200b\\(G'(\\eta)=-e^{-\\eta}f(\\eta)+e^{-\\eta}f'(\\eta)=0=&gt;f'(\\eta)-f(\\eta)=0\\)</p> <p>\uff083\uff09\u200b\u4e0d\u59a8\u200b\u4ee4\u200b\\(G(x)=e^{\\lambda x}f(x)\\),\u200b\u7531\u7f57\u5c14\u200b\u5b9a\u7406\u200b\u53ef\u77e5\u200b\\(\\exists \\alpha \\in (a,b)\\),\u200b\u4f7f\u5f97\u200b\\(G'(\\alpha)=\\lambda e^{\\lambda x}f(x)+f'(x)e^{\\lambda x}=0=&gt;f'(x)+\\lambda f(x)=0\\)</p> <p>\u200b\u53cd\u601d\u200b:\u200b\u6784\u9020\u51fd\u6570\u200b \\(e^{kx}f(x)\\) \u200b\u7b80\u76f4\u200b\u5c31\u662f\u200b\u795e\u5668\u200b\uff01\u200b\u589e\u52a0\u200b\u51fd\u6570\u200b\u590d\u6742\u5ea6\u200b\u4e4b\u540e\u200b\u53c8\u200b\u80fd\u200b\u4ee5\u200b\u4e0d\u200b\u7b49\u4e8e\u96f6\u200b\u7684\u200b\u6027\u8d28\u200b\u76f4\u63a5\u200b\u53bb\u9664\u200b\u3002</p>"},{"location":"blog/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B111/","title":"\u725b\u5ba2\u200b\u5c0f\u767d\u6708\u8d5b\u200b111","text":"<p>\u200b\u5c1d\u8bd5\u200b\u4e00\u4e0b\u200bJava\u200b\u81ea\u5df1\u200b\u5199\u200b\u8f93\u5165\u8f93\u51fa\u200b\u6253\u200b\u6bd4\u8d5b\u200b\u662f\u200b\u600e\u6837\u200b\u7684\u200b\u3002\u200b\u540e\u200b\u4e24\u9898\u200b\u592a\u200b\u4e0d\u5f53\u200b\u4eba\u200b\u4e86\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u7b2c\u4e00\u573a\u200b\u5199\u51fa\u200b4\u200b\u9898\u200b\u611f\u89c9\u200b\u8fd8\u662f\u200b\u633a\u200b\u6b23\u6170\u200b\u6ef4\u200b</p>"},{"location":"%E6%8A%80%E6%9C%AF/","title":"\u5b66\u200b\u6280\u672f","text":"<ul> <li> <p>JavaWeb</p> <ul> <li>JavaWeb</li> </ul> </li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/","title":"\u7f16\u7a0b\u200b\u57fa\u7840","text":"<p>\u200b\u7535\u8111\u200b\u4e0a\u200b\u8fd0\u884c\u200b\u8fd9\u200b\u5404\u5f0f\u5404\u6837\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u770b\u8d77\u6765\u200b\u79cd\u7c7b\u200b\u7e41\u591a\u200b\u3001\u200b\u767e\u82b1\u9f50\u653e\u200b\u3002\u200b\u5f88\u591a\u200b\u7a0b\u5e8f\u200b\u5728\u200b\u8ba1\u7b97\u673a\u200b\u4e0a\u9762\u200b\u4e00\u8d77\u200b\u8fd0\u884c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u8981\u200b\u4e3a\u200b\u5176\u200b\u5206\u914d\u200b\u4e00\u5b9a\u200b\u7684\u200b\u8ba1\u7b97\u8d44\u6e90\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u4f1a\u200b\u6839\u636e\u200b\u4f18\u5148\u7ea7\u200b\u4e3a\u200b\u7a0b\u5e8f\u200b\u5206\u914d\u200b\u7ed9\u200b\u5b83\u200b\u72ec\u4eab\u200b\u8d44\u6e90\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u800c\u200b\u7a0b\u5e8f\u200b\u5374\u200b\u8ba4\u4e3a\u200b\u81ea\u5df1\u200b\u4e00\u76f4\u200b\u5360\u6709\u200b\u7740\u200b\u6240\u6709\u200b\u7684\u200b\u8ba1\u7b97\u8d44\u6e90\u200b\uff0c\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u7ed9\u200b\u5b83\u200b\u5236\u9020\u200b\u4e86\u200b\u8fd9\u79cd\u200b\u5047\u8c61\u200b\u3002</p> <p>\u200b\u7a0b\u5e8f\u200b\u6700\u540e\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u8ba1\u7b97\u673a\u200b\u8bc6\u522b\u200b\u4e3a\u200b\u4e00\u6761\u6761\u200b\u7684\u200b\u6307\u4ee4\u200b\uff0c\u200b\u6309\u7167\u200b\u4e00\u5b9a\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fd0\u884c\u200b\uff0c\u200b\u6240\u6709\u200b\u7a0b\u5e8f\u8fd0\u884c\u200b\u7684\u200b\u6d41\u7a0b\u200b\u5927\u81f4\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u628a\u200b\u9700\u8981\u200b\u7684\u200b\u8d44\u6e90\u200b\u4ece\u200b\u786c\u76d8\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u51fa\u6765\u200b</li> <li>\u200b\u628a\u200b\u8d44\u6e90\u200b\u5b58\u50a8\u200b\u5230\u200b\u5185\u5b58\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b</li> <li>\u200b\u628a\u200b\u8d44\u6e90\u200b\u8f93\u51fa\u200b\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8bbe\u5907\u200b</li> </ul> <p>\u200b\u4f8b\u5982\u200b\u97f3\u4e50\u200b\u64ad\u653e\u200b\u8f6f\u4ef6\u200b\uff0c\u200b\u4f1a\u200b\u628a\u200b\u5bf9\u5e94\u200b\u683c\u5f0f\u200b\u7684\u200b\u6587\u4ef6\u200b\u8bfb\u5165\u200b\u5230\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u6700\u540e\u200b\u518d\u200b\u8f93\u51fa\u200b\u5230\u200b\u58f0\u5361\u200b\u4e0a\u200b\u3002\u200b\u5728\u200b\u8f6f\u4ef6\u200b\u4e0a\u200b\u9605\u8bfb\u200b\u4e00\u7bc7\u200b\u6587\u7ae0\u200b\u65f6\u200b\uff0c\u200b\u8f6f\u4ef6\u200b\u5148\u200b\u4ece\u200b\u786c\u76d8\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u5bf9\u5e94\u200b\u683c\u5f0f\u200b\u7684\u200b\u6587\u4ef6\u200b\u5230\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u6700\u540e\u200b\u8f93\u51fa\u200b\u5230\u200b\u663e\u793a\u5668\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u5185\u5b58\u200b\u4e2d\u662f\u200b\u5982\u4f55\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\u7684\u200b\u5462\u200b\uff1f\u200b\u7b54\u6848\u200b\u662f\u200b\u53d8\u91cf\u200b\uff01\u200b\u6211\u200b\u4f7f\u7528\u200b\u4e86\u200b\u53d8\u91cf\u200b\uff01</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#11","title":"1.1 \u200b\u6570\u636e\u7c7b\u578b\u200b\u548c\u200b\u53d8\u91cf","text":"<p>Java\u200b\u662f\u200b\u5f3a\u200b\u7c7b\u578b\u200b\u8bed\u8a00\u200b\uff0c\u200b\u5728\u200b\u5b9a\u4e49\u200b\u53d8\u91cf\u200b\u4e4b\u524d\u200b\u9700\u8981\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u77e5\u9053\u200b\u5f53\u524d\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u4ec0\u4e48\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u77e5\u9053\u200bJava\u200b\u4e2d\u6709\u200b\u54ea\u4e9b\u200b\u6570\u636e\u7c7b\u578b\u200b\u3002</p> <p>Java\u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5927\u200b\u7c7b\u200b\u5206\u4e3a\u200b\uff1a\u200b\u6574\u6570\u578b\u200b\u3001\u200b\u6d6e\u70b9\u6570\u200b\u578b\u200b\u3001\u200b\u5b57\u7b26\u200b\u578b\u200b\u3001\u200b\u5b57\u7b26\u4e32\u200b\u578b\u200b\u3001\u200b\u5e03\u5c14\u200b\u578b\u200b</p> <p>\u200b\u6bcf\u79cd\u200b\u7c7b\u578b\u200b\u90fd\u200b\u6709\u200b\u81ea\u5df1\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u6574\u6570\u578b\u200b\uff1aint  long\uff0c\u200b\u6d6e\u70b9\u6570\u200b\u578b\u200b\uff1afloat  double\uff0c\u200b\u5b57\u7b26\u200b\u578b\u200b\uff1acharacter\uff0c\u200b\u5b57\u7b26\u4e32\u200b\u578b\u200b\uff1aString\u3001\u200b\u5e03\u5c14\u200b\u578b\u200b\uff1aboolean</p> <p>\u200b\u5176\u4e2d\u200b\u6574\u6570\u578b\u200b\u3001\u200b\u6d6e\u70b9\u6570\u200b\u578b\u200b\u3001\u200b\u5b57\u7b26\u200b\u578b\u200b\u3001\u200b\u5e03\u5c14\u200b\u578b\u200b\u90fd\u200b\u662f\u200b\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u800c\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b\u5f15\u7528\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u533a\u522b\u200b\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\u548c\u200b\u5f15\u7528\u200b\u6570\u636e\u7c7b\u578b\u200b\u7279\u5f81\u200b\u5c31\u662f\u200b\u770b\u8be5\u200b\u6570\u636e\u7c7b\u578b\u200b\u662f\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u200b\u5728\u200bJava\u200b\u4e2d\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u5b57\u9762\u200b\u91cf\u200b(\u200b\u5e38\u91cf\u200b)\u200b\u9ed8\u8ba4\u200b\u662f\u200b int \u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u5982\u679c\u200b\u60f3\u8981\u200b\u628a\u200b\u5b57\u9762\u200b\u91cf\u200b\u8868\u793a\u200b\u4e3a\u200b long \u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5b57\u9762\u200b\u91cf\u200b\u7684\u200b\u672b\u5c3e\u200b\u52a0\u4e0a\u200b\u4e00\u4e2a\u200b</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#12","title":"1.2 \u200b\u8d4b\u503c","text":"<p>\u200b\u8d4b\u503c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u57fa\u672c\u200b\u5f88\u200b\u7b80\u5355\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4e0b\u9762\u200b\u7ed9\u200b</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#13","title":"1.3 \u200b\u57fa\u672c\u200b\u8fd0\u7b97","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#14","title":"1.4 \u200b\u6761\u4ef6\u200b\u6267\u884c","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#15","title":"1.5 \u200b\u5faa\u73af","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#16","title":"1.6 \u200b\u51fd\u6570\u200b\u7684\u200b\u7528\u6cd5","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaSE/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6/%E7%AC%AC1%E7%AB%A0_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#17","title":"1.7 \u200b\u51fd\u6570\u8c03\u7528\u200b\u7684\u200b\u57fa\u672c\u539f\u7406","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/","title":"JavaWeb","text":"<ul> <li> <p>JavaWeb</p> <ul> <li>B/S\u200b\u67b6\u6784\u200b\u4ecb\u7ecd\u200b</li> <li>MySQL</li> <li>JavaScript</li> </ul> </li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/BS%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/","title":"BS\u200b\u67b6\u6784\u200b\u4ecb\u7ecd","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/BS%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/#1","title":"1.\u200b\u7cfb\u7edf\u200b\u67b6\u6784\u200b\u4ecb\u7ecd","text":"<p>B/S\u200b\u67b6\u6784\u200b\u548c\u200bC/S\u200b\u67b6\u6784\u200b\u662f\u200b\u4e24\u79cd\u200b\u5e38\u89c1\u200b\u7684\u200b\u8f6f\u4ef6\u7cfb\u7edf\u200b\u67b6\u6784\u200b\uff0c\u200b\u76f8\u4fe1\u200b\u4f5c\u4e3a\u200b\u5728\u200b\u7f51\u7edc\u6e38\u620f\u200b\u4e2d\u200b\u8eab\u7ecf\u767e\u6218\u200b\u4f60\u200b\uff0c\u200b\u4e5f\u200b\u542c\u8bf4\u200b\u8fc7\u200b\u7f51\u9875\u200b\u6e38\u620f\u200b\uff08\u200b\u5982\u200b4399\uff09\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u6e38\u620f\u200b\u4e0d\u200b\u9700\u8981\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b\u7f51\u9875\u200b\u4e0a\u200b\u73a9\u200b\uff0c\u200b\u800c\u200b\u50cf\u200b\u7a7f\u8d8a\u200b\u706b\u7ebf\u200b\u8fd9\u79cd\u200b\u7f51\u7edc\u6e38\u620f\u200b\u5374\u200b\u8981\u200b\u4e0b\u8f7d\u200b\u4e4b\u540e\u200b\u624d\u80fd\u200b\u73a9\u200b\uff0c\u200b\u751a\u81f3\u200b\u6e38\u620f\u200b\u672c\u8eab\u200b\u8fd8\u200b\u5f88\u5927\u200b\u3002\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u73a9\u6e38\u620f\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u6b63\u597d\u200b\u5bf9\u5e94\u200b\u4e86\u200b\u4e24\u79cd\u200b\u4e0d\u540c\u200b\u7684\u200b\u7cfb\u7edf\u200b\u67b6\u6784\u200b\uff1aBrowser/Server\u200b\u67b6\u6784\u200b\u3001Client/Server\u200b\u67b6\u6784\u200b\uff0c\u200b\u6ca1\u60f3\u5230\u200b\u5427\u200b\uff0c\u200b\u513f\u65f6\u200b\u7684\u200b\u4f60\u200b\u5c31\u200b\u4ee5\u53ca\u200b\u9886\u7565\u200b\u8fc7\u200b\u4e0d\u540c\u200b\u67b6\u6784\u200b\u5f00\u53d1\u200b\u7684\u200b\u8f6f\u4ef6\u7cfb\u7edf\u200b\u3002</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/BS%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/#11-cs","title":"1.1 C/S\u200b\u67b6\u6784","text":"<p>Client/Server \u200b\u67b6\u6784\u200b\uff0c\u200b\u89c1\u540d\u200b\u77e5\u610f\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u67b6\u6784\u200b\u4e2d\u200b\u4e24\u4e2a\u200b\u91cd\u8981\u200b\u89d2\u8272\u200b\u662f\u200b\uff1aClient(\u200b\u5ba2\u6237\u7aef\u200b)\u3001Server(\u200b\u670d\u52a1\u5668\u200b)\u3002\u200b\u8fd9\u91cc\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u5176\u5b9e\u200b\u5c31\u200b\u5bf9\u5e94\u200b\u90a3\u4e9b\u200b\u9700\u8981\u200b\u4e0b\u8f7d\u200b\u7684\u200b\u6e38\u620f\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6e38\u620f\u200b\u5f80\u5f80\u200b\u6bd4\u8f83\u200b\u5927\u578b\u200b\uff0c\u200b\u6e38\u620f\u200b\u4e2d\u200b\u7684\u200b\u4eba\u7269\u200b\u89d2\u8272\u200b\u5236\u4f5c\u200b\u6bd4\u8f83\u200b\u7cbe\u7f8e\u200b\uff0c\u200b\u5982\u679c\u200b\u628a\u200b\u8fd9\u4e9b\u200b\u6e38\u620f\u200b\u505a\u6210\u200b\u9875\u200b\u6e38\u200b\uff0c\u200b\u670d\u52a1\u5668\u200b\u9700\u8981\u200b\u8d1f\u8d23\u200b\u5b58\u50a8\u200b\u6240\u6709\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u90a3\u4e48\u200b\u670d\u52a1\u5668\u200b\u8981\u200b\u628a\u200b\u4eba\u7269\u200b\u6a21\u578b\u200b\u54cd\u5e94\u200b\u7ed9\u200b\u6d4f\u89c8\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u6d4f\u89c8\u5668\u200b\u518d\u200b\u628a\u200b\u4eba\u7269\u200b\u7ed9\u200b\u6e32\u67d3\u200b\u51fa\u6765\u200b\uff0c\u200b\u7531\u4e8e\u200b\u8981\u200b\u4f20\u9012\u200b\u7684\u200b\u4e1c\u897f\u200b\u975e\u5e38\u200b\u5927\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u4f1a\u200b\u5f88\u6162\u200b\uff0c\u200b\u6e38\u620f\u200b\u7684\u200b\u4f53\u9a8c\u200b\u5c31\u200b\u4f1a\u200b\u53d8\u5dee\u200b\u3002\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u7528\u6237\u200b\u5728\u200b\u73a9\u6e38\u620f\u200b\u524d\u200b\uff0c\u200b\u4e8b\u5148\u200b\u5728\u200b\u672c\u5730\u4e0b\u8f7d\u200b\u4e00\u4e2a\u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u5ba2\u6237\u7aef\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5b58\u50a8\u200b\u89d2\u8272\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u89d2\u8272\u200b\u7684\u200b\u52a8\u4f5c\u200b\u7b49\u7b49\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u5e2e\u200b\u670d\u52a1\u5668\u200b\u5206\u62c5\u200b\u4e86\u200b\u538b\u529b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u5230\u200b\u7528\u6237\u200b\u66f4\u597d\u200b\u7684\u200b\u6e38\u620f\u200b\u4f53\u9a8c\u200b\u3002</p> <p>\u200b\u7ed3\u5408\u200b\u4e0a\u8ff0\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b </p> <p>C/S \u200b\u67b6\u6784\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u9700\u8981\u200b\u7528\u6237\u200b\u53bb\u200b\u5b89\u88c5\u200b\u7279\u5b9a\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u8f6f\u4ef6\u200b</li> <li>\u200b\u5ba2\u6237\u7aef\u200b\u672c\u8eab\u200b\u5e26\u6709\u200b\u6570\u636e\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u5168\u90e8\u200b\u7684\u200b\u6570\u636e\u200b\u90fd\u200b\u4ece\u200b\u670d\u52a1\u5668\u7aef\u200b\u4f20\u8fc7\u6765\u200b</li> </ul> <p>C/S \u200b\u67b6\u6784\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u901f\u5ea6\u200b\u5feb\u200b\uff0c\u200b\u8f6f\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u5927\u90e8\u5206\u200b\u6570\u636e\u200b\u5b58\u50a8\u200b\u518d\u200b\u5ba2\u6237\u7aef\u200b\u4e2d\u200b\uff0c\u200b\u53ea\u6709\u200b\u5f88\u5c0f\u200b\u4e00\u90e8\u5206\u200b\u6570\u636e\u200b\u9700\u8981\u200b\u4ece\u200b\u670d\u52a1\u5668\u7aef\u200b\u4f20\u8fc7\u6765\u200b</li> <li>\u200b\u670d\u52a1\u5668\u200b\u538b\u529b\u200b\u5c0f\u200b</li> </ul> <p>B/S \u200b\u67b6\u6784\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5347\u7ea7\u200b\u7ef4\u62a4\u200b\u6210\u672c\u200b\u9ad8\u200b</li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/BS%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/#12-bs","title":"1.2 B/S \u200b\u67b6\u6784","text":"<p>Browser/Server\u200b\u67b6\u6784\u200b\u5176\u5b9e\u200b\u53ef\u4ee5\u200b\u8bf4\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7279\u6b8a\u200b\u7684\u200b C/S\u200b\u67b6\u6784\u200b\uff0c\u200b\u53ea\u4e0d\u8fc7\u200bClient\u200b\u53d8\u6210\u200b\u4e86\u200b\u6d4f\u89c8\u5668\u200b\u3002\u200b\u5bf9\u5e94\u200b\u4e0a\u9762\u200b\u8bf4\u200b\u7684\u200b\u9875\u200b\u6e38\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f88\u5feb\u200b\u77e5\u9053\u200b B/S \u200b\u67b6\u6784\u200b\u548c\u200b C/S \u200b\u67b6\u6784\u200b\u7684\u200b\u533a\u522b\u200b\u548c\u200b\u7279\u70b9\u200b</p> <p>B/S\u200b\u67b6\u6784\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u65e0\u9700\u200b\u7528\u6237\u200b\u5b89\u88c5\u200b\u7279\u5b9a\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u8f6f\u4ef6\u200b</li> <li>\u200b\u5347\u7ea7\u200b\u7ef4\u62a4\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u6210\u672c\u200b\u6bd4\u8f83\u200b\u4f4e\u200b</li> </ul> <p>B/S\u200b\u67b6\u6784\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u901f\u5ea6\u6162\u200b</li> <li>\u200b\u670d\u52a1\u5668\u200b\u538b\u529b\u200b\u5927\u200b</li> <li>\u200b\u6240\u6709\u200b\u7684\u200b\u6570\u636e\u200b\u90fd\u200b\u5728\u200b\u670d\u52a1\u5668\u200b\u4e0a\u200b\uff0c\u200b\u4e0d\u200b\u5b89\u5168\u200b</li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/BS%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/#2bs","title":"2.B/S \u200b\u67b6\u6784\u200b\u7cfb\u7edf\u200b\u7684\u200b\u901a\u4fe1\u200b\u65b9\u5f0f","text":"<p>\u200b\u5728\u200b\u6d4f\u89c8\u5668\u200b\u4e0a\u200b\u952e\u5165\u200b\u8981\u200b\u8bbf\u95ee\u200b\u7684\u200b\u7f51\u5740\u200b\u57df\u540d\u200b\uff0c\u200b\u70b9\u51fb\u200b\u8bbf\u95ee\u200b\u5c31\u200b\u80fd\u591f\u200b\u5f97\u5230\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u7684\u200b\u9875\u9762\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u57df\u540d\u89e3\u6790\u200b\u5668\u4f1a\u200b\u5c06\u200b\u57df\u540d\u89e3\u6790\u200b\u51fa\u6765\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u7684\u200bIP\u200b\u5730\u5740\u200b\u548c\u200b\u7aef\u53e3\u53f7\u200b\uff08IP\u200b\u5730\u5740\u200b\u662f\u200b\u4e3b\u673a\u200b\u5728\u200b\u7f51\u7edc\u200b\u79cd\u200b\u7684\u200b\u552f\u4e00\u200b\u6807\u8bc6\u200b\uff0c\u200b\u7aef\u53e3\u53f7\u200b\u662f\u200b\u8fdb\u7a0b\u200b\u5728\u200b\u4e3b\u673a\u200b\u79cd\u200b\u7684\u200b\u552f\u4e00\u200b\u6807\u8bc6\u200b\uff09\uff0c\u200b\u968f\u540e\u200b\u670d\u52a1\u5668\u200b\u6536\u5230\u200b\u6765\u81ea\u200b\u6d4f\u89c8\u5668\u200b\u7684\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u670d\u52a1\u5668\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8fdb\u7a0b\u200b\u628a\u200b\u6d4f\u89c8\u5668\u200b\u8bf7\u6c42\u200b\u7684\u200b\u524d\u7aef\u200b\u4ee3\u7801\u200b\u54cd\u5e94\u200b\u5e76\u200b\u8f93\u51fa\u200b\u5230\u200b\u6d4f\u89c8\u5668\u200b\u4e0a\u200b\u3002\u200b\u63a5\u7740\u200b\u6d4f\u89c8\u5668\u200b\u8fdb\u884c\u200b\u6e32\u67d3\u200b\uff0c\u200b\u6267\u884c\u200bhtml\u3001css\u3001JavaScript\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5c55\u793a\u200b\u6548\u679c\u200b\u3002\u200b\u6574\u4e2a\u200b\u901a\u4fe1\u200b\u8fc7\u7a0b\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\u3002</p> <p></p> <p>\u200b\u6ce8\u610f\u200b\uff1aWeb\u200b\u670d\u52a1\u5668\u200b\u6307\u200b\u7684\u200b\u4e0d\u662f\u200b\u6574\u4e2a\u200b\u670d\u52a1\u5668\u200b\u4e3b\u673a\u200b\uff0c\u200b\u800c\u662f\u200b\u8fd0\u884c\u200b\u5728\u200b\u670d\u52a1\u5668\u200b\u4e3b\u673a\u200b\u4e0a\u200b\u7684\u200bWeb\u200b\u670d\u52a1\u5668\u8f6f\u4ef6\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7740\u200b\u4e00\u4e2a\u200b\u8fdb\u7a0b\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7aef\u53e3\u53f7\u200b\u3002</p> <p>\u200b\u8bf7\u6c42\u200b\uff1a\u200b\u4ece\u200bbrowser\u200b\u7aef\u200b\u53d1\u9001\u6570\u636e\u200b\u5230\u200bserver\u200b\u7aef\u7684\u200b\u8fc7\u7a0b\u200b\u79f0\u4e3a\u200b\u8bf7\u6c42\u200b\uff0crequest</p> <p>\u200b\u54cd\u5e94\u200b\uff1a\u200b\u4ece\u200bserver\u200b\u7aef\u200b\u53d1\u9001\u6570\u636e\u200b\u5230\u200bbrowser\u200b\u7aef\u7684\u200b\u8fc7\u7a0b\u200b\u79f0\u4e3a\u200b\u54cd\u5e94\u200b\uff0cresponse</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/BS%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/#3bs","title":"3.B/S \u200b\u67b6\u6784\u200b\u7cfb\u7edf\u200b\u7684\u200b\u89d2\u8272\u200b\u548c\u200b\u534f\u8bae","text":"<p>B/S\u200b\u67b6\u6784\u200b\u7cfb\u7edf\u200b\u7684\u200b\u89d2\u8272\u200b\uff1a\u200b\u6d4f\u89c8\u5668\u200b\uff0c\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u6570\u636e\u5e93\u200b</p> <p>\u200b\u6d4f\u89c8\u5668\u200b\u901a\u8fc7\u200b\u5411\u200b\u670d\u52a1\u5668\u53d1\u9001\u200b\u8bf7\u6c42\u200b\u83b7\u53d6\u200b\u60f3\u8981\u200b\u8bbf\u95ee\u200b\u7684\u200b\u9875\u9762\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u9759\u6001\u200b\u8d44\u6e90\u200b\u670d\u52a1\u5668\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u54cd\u5e94\u200b\u8f93\u51fa\u200b\u5bf9\u5e94\u200b\u7684\u200b\u524d\u7aef\u200b\u4ee3\u7801\u200b\uff0c\u200b\u800c\u200b\u5bf9\u4e8e\u200b\u52a8\u6001\u200b\u9875\u9762\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5728\u200b\u5b66\u751f\u200b\u4fe1\u606f\u7ba1\u7406\u7cfb\u7edf\u200b\u4e2d\u200b\u67e5\u8be2\u200b\u5168\u90e8\u200b\u5b66\u751f\u200b\u7684\u200b\u6210\u7ee9\u200b\u65f6\u200b\uff0c\u200b\u670d\u52a1\u5668\u200b\u9700\u8981\u200b\u4ece\u200b\u6570\u636e\u5e93\u200b\u4e2d\u200b\u67e5\u8be2\u200b\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5728\u200b\u54cd\u5e94\u200b\u7ed9\u200b\u524d\u7aef\u200b\u3002\u200b\u5728\u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u524d\u7aef\u200b\u4e0e\u200b\u670d\u52a1\u5668\u200b\u4ea4\u4e92\u200b\u9700\u8981\u200b\u9075\u5b88\u200bHTTP\u200b\u534f\u8bae\u200b\uff0c\u200b\u670d\u52a1\u5668\u200b\u4e0e\u200b\u6570\u636e\u5e93\u200b\u4ea4\u4e92\u200b\u9700\u8981\u200b\u9075\u5b88\u200bJDBC\u200b\u89c4\u8303\u200b\u3002\u200b\u6570\u636e\u200b\u4f20\u9012\u200b\u7684\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\u3002</p> <p></p> <p>\u200b\u5728\u200b\u6d4f\u89c8\u5668\u200b\u4e0a\u200b\u901a\u8fc7\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u8def\u5f84\u200b\u6765\u200b\u6807\u8bc6\u200b\u670d\u52a1\u5668\u200b\u4e2d\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u8def\u5f84\u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u8d44\u6e90\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8d44\u6e90\u200b\u53ef\u80fd\u200b\u662f\u200b\u9759\u6001\u200b\u8d44\u6e90\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u662f\u200b\u52a8\u6001\u200b\u8d44\u6e90\u200b\uff0c\u200b\u540e\u53f0\u200b\u8981\u200b\u8fd0\u884c\u200b\u54ea\u4e2a\u200bJava\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u53d6\u51b3\u4e8e\u200b\u524d\u7aef\u200b\u6d4f\u89c8\u5668\u200b\u53d1\u9001\u200b\u7684\u200b\u8bf7\u6c42\u200b\u8def\u5f84\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u8def\u5f84\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200bServlet\u200b\u7a0b\u5e8f\u200b\u3002</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/","title":"JavaScript","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#1javascript","title":"1.\u200b\u4ec0\u4e48\u200b\u662f\u200bJavaScript","text":"<p>JavaScript \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8de8\u5e73\u53f0\u200b\u3001\u200b\u9762\u5411\u5bf9\u8c61\u200b\u7684\u200b\u811a\u672c\u8bed\u8a00\u200b\uff0c\u200b\u7528\u6765\u200b\u63a7\u5236\u200b\u7f51\u9875\u200b\u3002</p> <p>W3C\u200b\u6807\u51c6\u200b: \u200b\u7f51\u9875\u200b\u4e3b\u8981\u200b\u7531\u200b\u4e09\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b</p> <ul> <li>\u200b\u7ed3\u6784\u200b: HTML</li> <li>\u200b\u8868\u73b0\u200b: CSS</li> <li>\u200b\u884c\u4e3a\u200b: JavaScript</li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#2javascript","title":"2.JavaScript\u200b\u5f15\u5165\u200b\u65b9\u5f0f","text":"<ul> <li> <p>\u200b\u5185\u90e8\u200b\u811a\u672c\u200b: \u200b\u5c06\u200bJS\u200b\u4ee3\u7801\u200b\u5b9a\u4e49\u200b\u5728\u200bHTML\u200b\u9875\u9762\u200b\u4e2d\u200b \u200b\u5728\u200bHTML\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0cJavaScript\u200b\u8bed\u53e5\u200b\u8981\u200b\u5199\u200b\u5728\u200b  \u200b\u6807\u7b7e\u200b\u4e2d\u200b\u3002\u200b\u4f8b\u5982\u200b:</p> <p><pre><code>&lt;script&gt;\n    alert(\"HelloWorld\");\n&lt;/script&gt;\n</code></pre> \u200b\u4e00\u822c\u200b - \u200b\u5916\u90e8\u200b\u811a\u672c\u200b: \u200b\u5c06\u200bJS\u200b\u4ee3\u7801\u200b\u5b9a\u4e49\u200b\u5728\u200b\u5916\u90e8\u200bJS\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u5f15\u5165\u200b\u5230\u200bHTML\u200b\u9875\u9762\u200b\u4e2d\u200b</p> </li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#3javascript","title":"3.JavaScript\u200b\u57fa\u7840\u200b\u8bed\u6cd5","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#4javascript","title":"4.JavaScript\u200b\u5e38\u7528\u200b\u5bf9\u8c61","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#5bom","title":"5.BOM","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#6dom","title":"6.DOM","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#7","title":"7.\u200b\u4e8b\u4ef6\u200b\u76d1\u542c","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/JavaScript/#8","title":"8.\u200b\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/MySQL/","title":"MySQL","text":"<p>JavaWeb\u200b\u662f\u200b\u7528\u200bJava\u200b\u6280\u672f\u200b\u6808\u200b\u8fdb\u884c\u200bWeb\u200b\u5e94\u7528\u200b\u5f00\u53d1\u200b\uff0cWeb\u200b\u5e94\u7528\u200b\u4e2d\u200b\u4f1a\u200b\u5305\u542b\u200b\u7528\u6237\u200b\u548c\u200b\u5e73\u53f0\u200b\u7684\u200b\u5404\u79cd\u200b\u6570\u636e\u200b\uff0c\u200b\u8981\u200b\u5b58\u50a8\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\u5c31\u8981\u200b\u7528\u5230\u200b\u6570\u636e\u5e93\u200b\uff0c\u200b\u6570\u636e\u5e93\u200b\u9700\u8981\u200b\u6570\u636e\u5e93\u200b\u7ba1\u7406\u7cfb\u7edf\u200b\u6765\u200b\u7ba1\u7406\u200b\uff0cMySQL\u200b\u662f\u200b\u4e00\u4e2a\u200b\u70ed\u95e8\u200b\u7684\u200b\u5173\u7cfb\u200b\u578b\u200b\u6570\u636e\u5e93\u200b\u7ba1\u7406\u7cfb\u7edf\u200b\u3002</p>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/MySQL/#sql","title":"SQL","text":"<p>\u200b\u6211\u4eec\u200b\u5728\u200b\u5f00\u53d1\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u63a5\u89e6\u200b\u5230\u200b\u6bd4\u8f83\u200b\u591a\u200b\u7684\u200b\u5e94\u8be5\u200b\u662f\u200bSQL\u200b\u8bed\u53e5\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u67e5\u8be2\u200b\u8bed\u53e5\u200b\u3002SQL\uff08Structured Query Language \u200b\u7b80\u79f0\u200b SQL\uff09\uff0c\u200b\u7ed3\u6784\u5316\u200b\u67e5\u8be2\u8bed\u8a00\u200b\uff0c\u200b\u4e00\u95e8\u200b\u64cd\u4f5c\u200b\u5173\u7cfb\u200b\u578b\u200b\u6570\u636e\u5e93\u200b\u7684\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\u3002</p> <p>SQL\u200b\u901a\u7528\u200b\u8bed\u6cd5\u200b\uff1aSQL\u200b\u8bed\u53e5\u200b\u53ef\u4ee5\u200b\u5355\u884c\u200b\u6216\u200b\u591a\u884c\u200b\u4e66\u5199\u200b\uff0c\u200b\u4ee5\u5206\u200b\u53f7\u200b\u7ed3\u5c3e\u200b\u3002MySQL\u200b\u6570\u636e\u5e93\u200b\u7684\u200bSQL\u200b\u8bed\u53e5\u200b\u4e0d\u200b\u533a\u5206\u200b\u5927\u5c0f\u5199\u200b\uff0c\u200b\u5173\u952e\u5b57\u200b\u5efa\u8bae\u200b\u5927\u5199\u200b\u3002</p> <p>\u200b\u6ce8\u91ca\u200b\uff1a</p> <pre><code>-- \u200b\u5355\u884c\u200b\u6ce8\u91ca\u200b  \n# \u200b\u5355\u884c\u200b\u6ce8\u91ca\u200b\n\n/* \u200b\u591a\u884c\u200b\u6ce8\u91ca\u200b\n   \u200b\u591a\u884c\u200b\u6ce8\u91ca\u200b */\n</code></pre> <p>SQL\u200b\u8bed\u53e5\u200b\u5206\u4e3a\u200b\u56db\u7c7b\u200b\uff1aDDL\u3001DML\u3001DQL\u3001DCL</p> <p></p> <ul> <li>DDL\uff1a\u200b\u6570\u636e\u200b\u5b9a\u4e49\u8bed\u8a00\u200b\uff0c\u200b\u7528\u6765\u200b\u5b9a\u4e49\u200b\u6570\u636e\u5e93\u200b\u5bf9\u8c61\u200b\uff1a\u200b\u6570\u636e\u5e93\u200b\u3001\u200b\u8868\u7b49\u200b</li> <li>DML\uff1a\u200b\u6570\u636e\u200b\u64cd\u4f5c\u200b\u8bed\u8a00\u200b\uff0c\u200b\u7528\u6765\u200b\u5bf9\u200b\u6570\u636e\u5e93\u200b\u4e2d\u8868\u200b\u7684\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u589e\u5220\u200b\u6539\u200b</li> <li>DQL\uff1a\u200b\u6570\u636e\u200b\u67e5\u8be2\u8bed\u8a00\u200b\uff0c\u200b\u7528\u6765\u200b\u67e5\u8be2\u6570\u636e\u5e93\u200b\u4e2d\u8868\u200b\u7684\u200b\u8bb0\u5f55\u200b</li> <li>DCL\uff1a\u200b\u6570\u636e\u200b\u63a7\u5236\u200b\u8bed\u8a00\u200b\uff0c\u200b\u7528\u6765\u200b\u5b9a\u4e49\u200b\u6570\u636e\u5e93\u200b\u7684\u200b\u8bbf\u95ee\u200b\u6743\u9650\u200b\u548c\u200b\u5b89\u5168\u7ea7\u522b\u200b\uff0c\u200b\u548c\u200b\u521b\u5efa\u200b\u7528\u6237\u200b</li> </ul>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/MySQL/#ddl","title":"DDL","text":"<p>\u200b\u64cd\u4f5c\u200b\u6570\u636e\u5e93\u200b\uff1a</p> <ul> <li>\u200b\u67e5\u8be2\u200b</li> </ul> <pre><code>show database;\n</code></pre> <ul> <li>\u200b\u521b\u5efa\u200b</li> </ul> <pre><code>create database \u200b\u6570\u636e\u5e93\u200b\u540d\u79f0\u200b;\n\n-- \u200b\u521b\u5efa\u200b\u65f6\u200b\u52a0\u5165\u200b\u5224\u65ad\u200b\ncreate database if not exists \u200b\u6570\u636e\u5e93\u200b\u540d\u79f0\u200b;\n</code></pre> <ul> <li>\u200b\u5220\u9664\u200b</li> </ul> <pre><code>drop database \u200b\u6570\u636e\u5e93\u200b\u540d\u79f0\u200b;\n\n-- \u200b\u5220\u9664\u200b\u662f\u200b\u52a0\u5165\u200b\u5224\u65ad\u200b\ndrop database if exists \u200b\u6570\u636e\u5e93\u200b\u540d\u79f0\u200b;\n</code></pre> <ul> <li>\u200b\u4f7f\u7528\u200b\u6570\u636e\u5e93\u200b</li> </ul> <pre><code>-- \u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u4f7f\u7528\u200b\u7684\u200b\u6570\u636e\u5e93\u200b\nselect database();\n\n-- \u200b\u4f7f\u7528\u200b\u6570\u636e\u5e93\u200b\nuse \u200b\u6570\u636e\u5e93\u200b\u540d\u79f0\u200b;\n</code></pre> <p>\u200b\u64cd\u4f5c\u200b\u8868\u200b\uff1a</p> <ul> <li>\u200b\u67e5\u8be2\u200b\u8868\u200b\uff1a</li> </ul> <pre><code>-- \u200b\u67e5\u8be2\u200b\u5f53\u524d\u200b\u6570\u636e\u5e93\u200b\u4e0b\u200b\u6240\u6709\u200b\u8868\u200b\nshow tables;\n\n-- \u200b\u67e5\u8be2\u200b\u8868\u200b\u7ed3\u6784\u200b\ndesc \u200b\u8868\u540d\u200b;\n</code></pre> <ul> <li>\u200b\u521b\u5efa\u200b\u8868\u200b</li> </ul> <pre><code>create table \u200b\u8868\u540d\u200b (\n  \u200b\u5b57\u200b\u6bb5\u200b1\u200b\u540d\u79f0\u200b \u200b\u5b57\u200b\u6bb5\u200b1\u200b\u7c7b\u578b\u200b\uff0c\n    \u200b\u5b57\u200b\u6bb5\u200b2\u200b\u540d\u79f0\u200b \u200b\u5b57\u200b\u6bb5\u200b2\u200b\u7c7b\u578b\u200b\uff0c\n    ...      ...,\n    \u200b\u5b57\u200b\u6bb5\u200bn\u200b\u540d\u79f0\u200b \u200b\u5b57\u200b\u6bb5\u200bn\u200b\u7c7b\u578b\u200b\n);\n</code></pre> <p>MySQL\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\uff1a</p> <ul> <li> <p>\u200b\u6570\u503c\u200b\u7c7b\u578b\u200b\uff1a     </p> </li> <li> <p>\u200b\u5b57\u7b26\u4e32\u200b\u7c7b\u578b\u200b\uff1a</p> <p></p> </li> <li> <p>\u200b\u65e5\u671f\u200b\u548c\u200b\u65f6\u95f4\u200b\u7c7b\u578b\u200b\uff1a</p> <p></p> </li> <li> <p>\u200b\u5220\u9664\u200b\u8868\u200b</p> </li> </ul> <pre><code>drop table \u200b\u8868\u540d\u200b;\n\n-- \u200b\u52a0\u4e0a\u200b\u5224\u65ad\u200b\ndrop table if exists \u200b\u8868\u540d\u200b;\n</code></pre> <ul> <li>\u200b\u4fee\u6539\u200b\u8868\u200b</li> </ul> <pre><code>-- \u200b\u4fee\u6539\u200b\u8868\u540d\u200b\nalter table \u200b\u8868\u540d\u200b rename to \u200b\u65b0\u8868\u540d\u200b;\n\n-- \u200b\u6dfb\u52a0\u200b\u4e00\u5217\u200b\nalter table \u200b\u8868\u540d\u200b add \u200b\u5217\u540d\u200b \u200b\u6570\u636e\u7c7b\u578b\u200b;\n\n-- \u200b\u4fee\u6539\u200b\u6570\u636e\u7c7b\u578b\u200b\nalter table \u200b\u8868\u540d\u200b modify \u200b\u5217\u540d\u200b \u200b\u65b0\u200b\u6570\u636e\u7c7b\u578b\u200b;\n\n-- \u200b\u4fee\u6539\u200b\u5217\u540d\u200b\u548c\u200b\u6570\u636e\u7c7b\u578b\u200b\nalter table \u200b\u8868\u540d\u200b change \u200b\u5217\u540d\u200b \u200b\u65b0\u200b\u5217\u540d\u200b \u200b\u65b0\u200b\u6570\u636e\u7c7b\u578b\u200b;\n\n-- \u200b\u5220\u9664\u200b\u5217\u200b\nalter table \u200b\u8868\u540d\u200b drop \u200b\u5217\u540d\u200b;\n</code></pre>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/MySQL/#dml","title":"DML","text":"<ul> <li>\u200b\u6dfb\u52a0\u200b\u6570\u636e\u200b</li> </ul> <pre><code>-- \u200b\u7ed9\u200b\u6307\u5b9a\u200b\u7684\u200b\u5217\u200b\u6dfb\u52a0\u200b\u6570\u636e\u200b\ninsert into \u200b\u8868\u540d\u200b(\u200b\u5217\u200b1, \u200b\u5217\u200b2, ...) values (\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...);\n\n-- \u200b\u7ed9\u200b\u6240\u6709\u200b\u5217\u200b\u6dfb\u52a0\u200b\u6570\u636e\u200b\ninsert into \u200b\u8868\u540d\u200b values (\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...);\n\n-- \u200b\u6279\u91cf\u200b\u6dfb\u52a0\u200b\u6570\u636e\u200b\ninsert into \u200b\u8868\u540d\u200b(\u200b\u5217\u200b1, \u200b\u5217\u200b2, ...) values (\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...), (\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...),\n(\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...),(\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...),(\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...) ...;\n\ninsert into \u200b\u8868\u540d\u200b values (\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...), (\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...),\n(\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...),(\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...),(\u200b\u503c\u200b1, \u200b\u503c\u200b2, ...) ...;\n</code></pre> <ul> <li>\u200b\u4fee\u6539\u200b\u6570\u636e\u200b</li> </ul> <pre><code>update \u200b\u8868\u540d\u200b set \u200b\u5217\u200b1 = \u200b\u503c\u200b1, \u200b\u5217\u200b2 = \u200b\u503c\u200b2, ... [where \u200b\u6761\u4ef6\u200b];\n-- \u200b\u6ce8\u610f\u200b: \u200b\u4fee\u6539\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u5982\u679c\u200b\u4e0d\u200b\u52a0\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5219\u200b\u8868\u4e2d\u200b\u6240\u6709\u200b\u8bb0\u5f55\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u4fee\u6539\u200b\n</code></pre> <ul> <li>\u200b\u5220\u9664\u200b\u6570\u636e\u200b</li> </ul> <pre><code>delete from \u200b\u8868\u540d\u200b [where \u200b\u6761\u4ef6\u200b]\n-- \u200b\u6ce8\u610f\u200b: \u200b\u5982\u679c\u200b\u5220\u9664\u200b\u8bed\u53e5\u200b\u4e2d\u4e0d\u52a0\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5219\u200b\u8868\u4e2d\u200b\u6240\u6709\u200b\u8bb0\u5f55\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u5220\u9664\u200b\n</code></pre>"},{"location":"%E6%8A%80%E6%9C%AF/JavaWeb/MySQL/#dql","title":"DQL","text":"<ul> <li>\u200b\u57fa\u7840\u200b\u67e5\u8be2\u200b</li> </ul> <pre><code>select * from \u200b\u8868\u540d\u200b; -- \u200b\u67e5\u8be2\u200b\u6240\u6709\u200b\u6570\u636e\u200b\nselect \u200b\u5b57\u200b\u6bb5\u200b\u5217\u8868\u200b from \u200b\u8868\u540d\u200b; -- \u200b\u67e5\u8be2\u200b\u591a\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\n\nselect distinct \u200b\u5b57\u200b\u6bb5\u200b\u5217\u8868\u200b from \u200b\u8868\u540d\u200b; -- \u200b\u53bb\u9664\u200b\u91cd\u590d\u8bb0\u5f55\u200b\n\nselect \u200b\u5b57\u200b\u6bb5\u200b1 as z1, \u200b\u5b57\u200b\u6bb5\u200b2 z2 from \u200b\u8868\u540d\u200b; -- as\u200b\u8d77\u200b\u522b\u540d\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/","title":"\u5237\u200b\u7b97\u6cd5\u200b\u9898\u200b\u7b14\u8bb0","text":"<ul> <li> <p>\u200b\u7b97\u6cd5\u200b\u9898\u5355\u200b</p> <ul> <li>\u200b\u4ee3\u7801\u200b\u968f\u60f3\u5f55\u200b</li> </ul> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/","title":"\u5237\u200b\u4ee3\u7801\u200b\u968f\u60f3\u5f55\u200b\u5fc3\u5f97","text":"<ul> <li> <p>\u200b\u4ee3\u7801\u200b\u968f\u60f3\u5f55\u200b</p> <ul> <li>1.\u200b\u6570\u7ec4\u200b</li> <li>2.\u200b\u94fe\u8868\u200b</li> <li>3.\u200b\u54c8\u5e0c\u200b\u8868\u200b</li> <li>4.\u200b\u5b57\u7b26\u4e32\u200b</li> <li>5.\u200b\u6808\u200b\u4e0e\u200b\u961f\u5217\u200b</li> <li>6.\u200b\u4e8c\u53c9\u6811\u200b</li> <li>7.\u200b\u56de\u6eaf\u200b</li> <li>8.\u200b\u8d2a\u5fc3\u200b</li> <li>9.\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b</li> </ul> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"\u4e8c\u53c9\u6811","text":"<p>Java\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e8c\u53c9\u6811\u200b\u7ed3\u70b9\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>public class TreeNode {\n    int val;\n    TreeNode left;\n    TreeNode right;\n\n    public TreeNode(){}\n\n    public TreeNode(int val) {\n        this.val = val;\n    }\n\n    public TreeNode(int val, TreeNode left, TreeNode right) {\n        this.val = val;\n        this.left = left;\n        this.right = right;\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#_2","title":"\u4e8c\u53c9\u6811\u200b\u7684\u200b\u9012\u5f52\u200b\u904d\u5386","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#144","title":"144. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u524d\u5e8f\u200b\u904d\u5386","text":"<p>\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    List&lt;Integer&gt; answer;\n    public List&lt;Integer&gt; preorderTraversal(TreeNode root) {\n        answer = new ArrayList&lt;&gt;();\n        dfs(root);\n        return answer;\n    }\n\n    public void dfs(TreeNode root) {\n        if(root == null) {\n            return;\n        }\n        answer.add(root.val);\n        dfs(root.left);\n        dfs(root.right);\n    }\n}\n</code></pre> <p>\u200b\u975e\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; preorderTraversal(TreeNode root) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        Stack&lt;TreeNode&gt; stk = new Stack&lt;&gt;();\n\n        TreeNode cur = root;\n\n        while(cur != null || !stk.isEmpty()) {\n            if(cur != null) {\n                ans.add(cur.val);\n                stk.push(cur);\n                cur = cur.left;\n            } else {\n                cur = stk.pop().right;\n            }\n        }\n\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#145","title":"145. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u540e\u5e8f\u200b\u904d\u5386","text":"<p>\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; postorderTraversal(TreeNode root) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();        \n        dfs(root, ans);\n        return ans;\n    }\n\n    private void dfs(TreeNode root, List&lt;Integer&gt; ans) {\n        if(root == null) {\n            return;\n        }\n        dfs(root.left, ans);\n        dfs(root.right, ans);\n        ans.add(root.val);\n    }\n}\n</code></pre> <p>\u200b\u975e\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; postorderTraversal(TreeNode root) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        TreeNode cur = root, pre = null;\n        Stack&lt;TreeNode&gt; stk = new Stack&lt;&gt;();\n\n        while(cur != null || !stk.isEmpty()) {\n            if(cur != null) {\n                stk.push(cur);\n                cur = cur.left;\n            } else {\n                cur = stk.peek();\n                if(cur.right == null || cur.right == pre) {\n                    ans.add(cur.val);\n                    cur = null;\n                    pre = stk.pop(); // \u200b\u8bb0\u5f55\u200b\u524d\u200b\u4e00\u4e2a\u200b\u904d\u5386\u200b\u8fc7\u200b\u7684\u200b\u7ed3\u70b9\u200b\n                } else {\n                    cur = cur.right;\n                }\n            }\n        }        \n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#94","title":"94. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u4e2d\u5e8f\u200b\u904d\u5386","text":"<p>\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; inorderTraversal(TreeNode root) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n        dfs(root, ans);\n        return ans;\n    }\n\n    private void dfs(TreeNode root, List&lt;Integer&gt; ans) {\n        if(root == null) {\n            return;\n        }\n\n        dfs(root.left, ans);\n        ans.add(root.val);\n        dfs(root.right, ans);\n    }\n} \n</code></pre> <p>\u200b\u975e\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; inorderTraversal(TreeNode root) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();    \n        Stack&lt;TreeNode&gt; stk = new Stack&lt;&gt;();\n        TreeNode cur = root;\n\n        while(cur != null || !stk.isEmpty()) {\n            if(cur != null) {\n                stk.push(cur);\n                cur = cur.left;\n            } else {\n                cur = stk.pop();\n                ans.add(cur.val);\n                cur = cur.right;\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#102","title":"102. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386","text":"<p>\u200b\u5728\u200b\u961f\u5217\u200b\u4e2d\u200b\u7528\u200bfor\u200b\u5faa\u73af\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u672c\u5c42\u200b\u7684\u200b\u5bf9\u8c61\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) {\n        List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n\n        Queue&lt;TreeNode&gt; q = new LinkedList&lt;&gt;();\n\n        if(root == null) return ans;\n        q.add(root);    \n\n        while(!q.isEmpty()) {\n            List&lt;Integer&gt; temp = new ArrayList&lt;&gt;();\n            int k = q.size();\n            for(int i = 0; i &lt; k; i ++) {\n                TreeNode t = q.poll();\n                temp.add(t.val);\n                if(t.left != null) q.add(t.left);\n                if(t.right != null) q.add(t.right);\n            }\n            ans.add(temp);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#107-ii","title":"107. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b II","text":"<pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) {\n        List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n        Queue&lt;TreeNode&gt; q = new LinkedList&lt;&gt;();\n\n        if(root == null) {\n            return ans;\n        }\n\n        q.add(root);\n\n        while(!q.isEmpty()) {\n            List&lt;Integer&gt; temp = new ArrayList&lt;&gt;();\n            int cnt = q.size();\n\n            for(int i = 0; i &lt; cnt; i ++) {\n                TreeNode t = q.poll();\n                temp.add(t.val);\n                if(t.left != null) q.add(t.left);\n                if(t.right != null) q.add(t.right);\n            }\n\n            ans.add(temp);\n        }\n\n        Collections.reverse(ans);\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#199","title":"199. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u53f3\u200b\u89c6\u56fe","text":"<pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; rightSideView(TreeNode root) {\n        Queue&lt;TreeNode&gt; q = new LinkedList&lt;&gt;();\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        if(root == null) {\n            return ans;\n        }        \n\n        q.add(root);\n\n        while(!q.isEmpty()) {\n            int cnt = q.size();\n\n            for(int i = 0; i &lt; cnt; i ++) {\n                TreeNode t = q.poll();\n                if(i == cnt - 1) {\n                    ans.add(t.val);\n                }\n                if(t.left != null) q.add(t.left);\n                if(t.right != null) q.add(t.right);\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#637","title":"637. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u200b\u5e73\u5747\u503c","text":"<p>\u200b\u5c42\u6b21\u200b\u904d\u5386\u200b\uff0c\u200b\u6ce8\u610f\u200b\u6bcf\u6b21\u200b\u53ea\u200b\u5c06\u200b\u672c\u5c42\u200b\u7684\u200b\u7ed3\u70b9\u200b\u4ece\u200b\u961f\u5217\u200b\u4e2d\u200b\u53d6\u51fa\u200b\u6765\u200b\u3002</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Double&gt; averageOfLevels(TreeNode root) {\n        List&lt;Double&gt; ans = new ArrayList&lt;&gt;();\n\n        Queue&lt;TreeNode&gt; q = new LinkedList&lt;&gt;();\n        q.add(root);\n\n        while(!q.isEmpty()) {\n            int k = q.size();\n            double sum = 0;\n            for(int i = 0; i &lt; k; i ++) {\n                TreeNode t = q.poll();\n                sum += t.val;\n                if(t.left != null) q.add(t.left);\n                if(t.right != null) q.add(t.right);\n            }\n            ans.add(sum / k);\n        }   \n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#429-n","title":"429. N \u200b\u53c9\u200b\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386","text":"<p>\u200b\u5bf9\u4e8e\u200b\u7a7a\u6811\u8981\u200b\u63d0\u524d\u200b\u5224\u65ad\u200b</p> <pre><code>/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List&lt;Node&gt; children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List&lt;Node&gt; _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\nimport java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;Integer&gt;&gt; levelOrder(Node root) {\n        List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n        Queue&lt;Node&gt; q = new LinkedList&lt;&gt;();\n\n        if(root == null) {\n            return ans;\n        }\n\n        q.add(root);\n\n        while(!q.isEmpty()) {\n            int cnt = q.size();\n            List&lt;Integer&gt; temp = new ArrayList&lt;&gt;();\n\n            for(int i = 0; i &lt; cnt; i ++) {\n                Node t = q.poll();\n                temp.add(t.val);\n                for(Node node : t.children) {\n                    if(node != null) {\n                        q.add(node);\n                    }\n                }\n            }\n\n            ans.add(temp);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#515","title":"515. \u200b\u5728\u200b\u6bcf\u4e2a\u200b\u6811\u884c\u200b\u4e2d\u200b\u627e\u200b\u6700\u5927\u503c","text":"<pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public List&lt;Integer&gt; largestValues(TreeNode root) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n        Queue&lt;TreeNode&gt; q = new LinkedList&lt;&gt;();\n\n        if(root == null) {\n            return ans;\n        }\n\n        q.add(root);\n\n        while(!q.isEmpty()) {\n            int maxNode = Integer.MIN_VALUE;\n            int cnt = q.size();\n\n            for(int i = 0; i &lt; cnt; i ++) {\n                TreeNode t = q.poll();\n                maxNode = Math.max(maxNode, t.val);\n                if(t.left != null) q.add(t.left);\n                if(t.right != null) q.add(t.right);\n            }\n\n            ans.add(maxNode);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#116","title":"116. \u200b\u586b\u5145\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u53f3\u4fa7\u200b\u8282\u70b9\u200b\u6307\u9488","text":"<p>\u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b</p> <pre><code>/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _left, Node _right, Node _next) {\n        val = _val;\n        left = _left;\n        right = _right;\n        next = _next;\n    }\n};\n*/\nimport java.util.*;\n\nclass Solution {\n    public Node connect(Node root) {\n        Queue&lt;Node&gt; q = new LinkedList&lt;&gt;();\n\n        if(root == null) {\n            return root;\n        }\n\n        q.add(root);\n\n        while(!q.isEmpty()) {\n            int cnt = q.size();\n            Node preNode = null;\n\n            for(int i = 0; i &lt; cnt; i ++) {\n                Node curNode = q.poll();\n\n                curNode.next = preNode;\n                preNode = curNode;\n\n                if(curNode.right != null) q.add(curNode.right);\n                if(curNode.left != null) q.add(curNode.left);\n            }\n        }\n\n        return root;\n    }\n}\n</code></pre> <p>\u200b\u9012\u5f52\u200b\uff1a</p> <p>\u200b\u7ed3\u70b9\u200b\u8fde\u63a5\u200b\u5206\u4e3a\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>\u200b\u4e24\u4e2a\u200b\u7ed3\u70b9\u200b\u540c\u200b\u5c5e\u4e8e\u200b\u4e00\u4e2a\u200b\u6839\u200b\u8282\u70b9\u200b</li> <li>\u200b\u4e24\u4e2a\u200b\u7ed3\u70b9\u200b\u5c5e\u4e8e\u200b\u4e0d\u540c\u200b\u6839\u200b\u8282\u70b9\u200b</li> </ul> <pre><code>/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _left, Node _right, Node _next) {\n        val = _val;\n        left = _left;\n        right = _right;\n        next = _next;\n    }\n};\n*/\nimport java.util.*;\n\nclass Solution {\n\n    public Node connect(Node root) {\n        dfs(root);\n        return root;\n    }\n\n    public void dfs(Node root) {\n        if(root == null) {\n            return;\n        }\n\n        if(root.left != null) {\n            root.left.next = root.right;\n            if(root.next != null) {\n                root.right.next = root.next.left;\n            }\n        }\n        dfs(root.left);\n        dfs(root.right);\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#117-ii","title":"117. \u200b\u586b\u5145\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u53f3\u4fa7\u200b\u8282\u70b9\u200b\u6307\u9488\u200b II","text":"<p>\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b\u5de6\u5b50\u200b\u8282\u70b9\u200b</li> <li>\u200b\u5982\u679c\u200b\u53f3\u5b50\u200b\u8282\u70b9\u200b\u5b58\u5728\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5de6\u5b50\u200b\u8282\u70b9\u200b\u7684\u200b next \u200b\u5c31\u662f\u200b\u53f3\u5b50\u200b\u8282\u70b9\u200b</li> <li>\u200b\u5982\u679c\u200b\u53f3\u5b50\u200b\u8282\u70b9\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200b\u8981\u200b\u5bfb\u627e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b next \u200b\u662f\u5426\u200b\u6709\u200b\u5b69\u5b50\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u5de6\u5b50\u200b\u8282\u70b9\u200b\u4f5c\u4e3a\u200bnext</li> <li>\u200b\u5bf9\u4e8e\u200b\u53f3\u5b50\u200b\u8282\u70b9\u200b</li> <li>\u200b\u548c\u200b\u5de6\u5b50\u200b\u8282\u70b9\u200b\u7b2c\u4e8c\u79cd\u200b\u60c5\u51b5\u200b\u4e00\u6837\u200b\u3002\u200b\u5bfb\u627e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b next \u200b\u662f\u5426\u200b\u6709\u200b\u5b69\u5b50\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u53f3\u5b50\u200b\u8282\u70b9\u200b\u4f5c\u4e3a\u200bnext</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5de6\u5b50\u200b\u6811\u200b\u5728\u200b\u5efa\u7acb\u200bnext\u200b\u7684\u200b\u65f6\u5019\u200b\u8981\u200b\u7528\u5230\u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5728\u200b\u5efa\u7acb\u200bnext\u200b\u7684\u200b\u65f6\u5019\u200b\u4f18\u5148\u200b\u5efa\u7acb\u200b\u53f3\u5b50\u200b\u6811\u200b</p> <pre><code>/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _left, Node _right, Node _next) {\n        val = _val;\n        left = _left;\n        right = _right;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\n\n    public Node connect(Node root) {\n        dfs(root);\n        return root;\n    }\n\n    public void dfs(Node root) {\n        if(root == null) {\n            return;\n        }\n\n        if(root.left != null) {\n            if(root.right != null) {\n                root.left.next = root.right;\n            } else {\n                setNext(root.left, root.next);\n            }\n        }\n\n        if(root.right != null) {\n            setNext(root.right, root.next);\n        }\n\n\n        dfs(root.right);\n        dfs(root.left);\n    }\n\n    public boolean checkLeaf(Node node) {\n        if(node == null) return false;\n        if(node.left == null &amp;&amp; node.right == null) {\n            return true;\n        }\n        return false;\n    }\n\n\n    public void setNext(Node curNode, Node nextNode) {\n        while(checkLeaf(nextNode)) {\n            nextNode = nextNode.next;\n        }\n\n        if(nextNode != null) {\n            if(nextNode.left != null) {\n                curNode.next = nextNode.left;\n            } else if(nextNode.right != null) {\n                curNode.next = nextNode.right;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#104","title":"104.\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u6700\u5927\u200b\u6df1\u5ea6","text":"<pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        return dfs(root);\n    }\n\n    public int dfs(TreeNode root) {\n        if(root == null) {\n            return 0;\n        }\n\n        return 1 + Math.max(dfs(root.left), dfs(root.right));\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#111","title":"111. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u6700\u5c0f\u200b\u6df1\u5ea6","text":"<p>\u200b\u4e0e\u200b\u6700\u5927\u200b\u6df1\u5ea6\u200b\u4e0d\u540c\u200b\uff0c\u200b\u6c42\u200b\u6700\u5c0f\u200b\u6df1\u5ea6\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8981\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u7ed3\u70b9\u200b\u662f\u5426\u662f\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u662f\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\u4f46\u200b\u7f3a\u5c11\u200b\u5de6\u5b50\u200b\u6811\u200b\u6216\u8005\u200b\u53f3\u5b50\u200b\u6811\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u89c6\u8be5\u200b\u7ed3\u70b9\u200b\u4e3a\u200b\u7ec8\u70b9\u200b\u3002</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int minDepth(TreeNode root) {\n\n        return dfs(root);\n    }\n\n    public int dfs(TreeNode root) {\n        if(root == null) {\n            return 0;\n        }\n\n        if(root.left == null &amp;&amp; root.right != null) {\n            return 1 + dfs(root.right);\n        }\n\n        if(root.left != null &amp;&amp; root.right == null) {\n            return 1 + dfs(root.left);\n        }\n\n        return 1 + Math.min(dfs(root.left), dfs(root.right));\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#226","title":"226. \u200b\u7ffb\u8f6c\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u904d\u5386\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4ea4\u6362\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        dfs(root);\n        return root;\n    }\n\n    public void dfs(TreeNode root) {\n        if(root == null) {\n            return;\n        }\n\n        TreeNode leftNode = root.left;\n        root.left = root.right;\n        root.right = leftNode;\n        dfs(root.left);\n        dfs(root.right);\n    }\n}\n</code></pre></p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#101","title":"101.\u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u540c\u6b65\u200b\u6bd4\u8f83\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b</p> <ul> <li>\u200b\u62ff\u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u53f3\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u6bd4\u8f83\u200b</li> <li>\u200b\u90a3\u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u53f3\u5b50\u200b\u6811\u200b\u6bd4\u8f83\u200b</li> </ul> <p>\u200b\u5982\u679c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u4e0d\u540c\u200b\u5219\u200b\u4e0d\u662f\u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return cmp(root.left, root.right);\n    }\n\n    public boolean cmp(TreeNode root1, TreeNode root2) {\n        if(root1 == null &amp;&amp; root2 == null) {\n            return true;\n        }\n\n        if((root1 == null &amp;&amp; root2 != null) || (root1 != null &amp;&amp; root2 == null) || (root1.val != root2.val)) {\n            return false;\n        }\n\n        return cmp(root1.left, root2.right) &amp;&amp; cmp(root1.right, root2.left);\n    }\n\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#222","title":"222.\u200b\u5b8c\u5168\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u8282\u70b9\u200b\u4e2a\u6570","text":"<p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b: \\(O (\\log^2 (n))\\)</p> <p>\u200b\u5bf9\u4e8e\u200b\u5b8c\u5168\u200b\u4e8c\u53c9\u6811\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5982\u679c\u200b\u6cbf\u7740\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u4e00\u76f4\u200b\u5f80\u200b\u5de6\u200b\u8d70\u200b\u7684\u200b\u6df1\u5ea6\u200b\u548c\u200b\u6cbf\u7740\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u53f3\u5b50\u200b\u6811\u200b\u4e00\u76f4\u200b\u5f80\u53f3\u200b\u8d70\u200b\u7684\u200b\u6df1\u5ea6\u200b\u4e00\u6837\u200b\u7684\u8bdd\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u8bf4\u660e\u200b\u76ee\u524d\u200b\u6240\u5728\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u6811\u200b\u662f\u200b\u4e00\u68f5\u200b\u6ee1\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u800c\u6ee1\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u8282\u70b9\u200b\u6570\u91cf\u200b\u4e0e\u200b\u6811\u200b\u7684\u200b\u6df1\u5ea6\u200b \\(h\\) \u200b\u6ee1\u8db3\u200b\u516c\u5f0f\u200b \u200b\u8282\u70b9\u200b\u4e2a\u6570\u200b=\\(2^h - 1\\),\u200b\u6839\u636e\u200b\u8fd9\u4e2a\u200b\u7279\u6027\u200b\u53ef\u4ee5\u200b\u4f18\u5316\u200b\u66b4\u529b\u200b\u904d\u5386\u200b\u6c42\u89e3\u200b\u8282\u70b9\u200b\u4e2a\u6570\u200b\u7684\u200b\u7b97\u6cd5\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int countNodes(TreeNode root) {\n        if(root == null) {\n            return 0;\n        }\n\n        TreeNode leftNode = root;\n        TreeNode rightNode = root;\n\n        int leftDepth = 0;\n        int rightDepth = 0;\n\n        while(leftNode != null) {\n            leftNode = leftNode.left;\n            leftDepth ++;\n        }\n\n        while(rightNode != null) {\n            rightNode = rightNode.right;\n            rightDepth ++;\n        }\n\n        if(leftDepth == rightDepth) {\n            return (1 &lt;&lt; leftDepth) - 1;\n        }\n\n        return countNodes(root.left) + countNodes(root.right) + 1;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#110","title":"110.\u200b\u5e73\u8861\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u4f9d\u6b21\u200b\u68c0\u67e5\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b\u662f\u5426\u200b\u5e73\u8861\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        if(root == null) {\n            return true;\n        }\n\n        if(Math.abs(maxDepth(root.left) - maxDepth(root.right)) &gt; 1) {\n            return false;\n        }\n\n        return isBalanced(root.left) &amp;&amp; isBalanced(root.right);\n    }\n\n    public int maxDepth(TreeNode root) {\n        if(root == null) {\n            return 0;\n        }\n\n        return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#404","title":"404. \u200b\u5de6\u200b\u53f6\u5b50\u200b\u4e4b\u200b\u548c","text":"<p>\u200b\u904d\u5386\u200b\u6574\u68f5\u6811\u200b\uff0c\u200b\u82e5\u200b\u5f53\u524d\u200b\u6839\u200b\u8282\u70b9\u200b\u6709\u200b\u5de6\u200b\u53f6\u5b50\u200b\uff0c\u200b\u5219\u200b\u628a\u200b\u5de6\u200b\u53f6\u5b50\u200b\u7684\u200b\u503c\u200b\u52a0\u4e0a\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        if(root == null) {\n            return 0;\n        }\n\n        int add = 0;\n\n        if(root.left != null &amp;&amp; root.left.left == null &amp;&amp; root.left.right == null) {\n            add += root.left.val;    \n        }\n\n        return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right) + add;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#513","title":"513. \u200b\u627e\u6811\u200b\u5de6\u4e0b\u89d2\u200b\u7684\u200b\u503c","text":"<p>\u200b\u5c42\u6b21\u200b\u904d\u5386\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u7b54\u6848\u200b\u53d6\u200b\u5c42\u6b21\u200b\u904d\u5386\u200b\u4e2d\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u6700\u540e\u200b\u4e00\u5c42\u200b\u7684\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u6570\u200b\u5c31\u662f\u200b\u6700\u540e\u200b\u7684\u200b\u7b54\u6848\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public int findBottomLeftValue(TreeNode root) {\n        Queue&lt;TreeNode&gt; q = new LinkedList&lt;&gt;();\n\n        q.add(root);\n\n        int ans = -1;\n\n        while(!q.isEmpty()) {\n            int k = q.size();\n            for(int i = 0; i &lt; k; i ++) {\n                TreeNode t = q.poll();\n                if(i == 0) {\n                    ans = t.val;\n                }\n                if(t.left != null) q.add(t.left);\n                if(t.right != null) q.add(t.right);\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#112","title":"112. \u200b\u8def\u5f84\u200b\u603b\u548c","text":"<p>\u200b\u4e00\u5b9a\u200b\u8981\u200b\u5bf9\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\u8fd9\u4e2a\u200b\u6761\u4ef6\u200b\u8fdb\u884c\u200b\u5224\u5b9a\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean hasPathSum(TreeNode root, int targetSum) {\n        if(root == null) {\n            return false;\n        }\n\n        return dfs(root, targetSum);\n    }\n\n    public boolean dfs(TreeNode root, int targetSum) {\n        if(root.left == null &amp;&amp; root.right == null) {\n            return targetSum == root.val;\n        }\n\n        boolean lflag = false, rflag = false;\n\n        if(root.left != null) {\n            lflag = dfs(root.left, targetSum - root.val);\n        } \n\n        if(root.right != null) {\n            rflag = dfs(root.right, targetSum - root.val);\n        }\n\n        return lflag || rflag;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#106","title":"106. \u200b\u4ece\u4e2d\u200b\u5e8f\u200b\u4e0e\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u5e8f\u5217\u200b\u6784\u9020\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u4e00\u5b9a\u200b\u662f\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u627e\u5230\u200b\u8be5\u6570\u200b\u5728\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u91cc\u9762\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u80fd\u200b\u627e\u5230\u200b\u8be5\u200b\u7ed3\u70b9\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\uff0c\u200b\u7136\u540e\u200b\u5bf9\u4e8e\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u53c8\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u5bf9\u4e8e\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u76ee\u6807\u200b\u5c31\u662f\u200b\u627e\u5230\u200b\u8be5\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u7684\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u548c\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u533a\u95f4\u200b\u8303\u56f4\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f</p> <p>\u200b\u8bbe\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u533a\u95f4\u200b\u4e3a\u200b \\([inl, inr]\\)\uff0c\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u533a\u95f4\u200b\u662f\u200b \\([postl, postr]\\) \u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b value = post[postr - 1]\uff0c\u200b\u5047\u8bbe\u200b value \u200b\u5728\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e0b\u6807\u200b\u4e3a\u200b index\uff0c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u6709\u200b leftsize = index - inl \u200b\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u6240\u4ee5\u200b</p> <ul> <li> <p>\u200b\u5f53\u524d\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u533a\u95f4\u200b\u4e3a\u200b \\([inl, index - 1]\\), \u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u533a\u95f4\u200b\u4e3a\u200b \\([postl, postl + leftsize - 1]\\)</p> </li> <li> <p>\u200b\u5f53\u524d\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u533a\u95f4\u200b\u4e3a\u200b \\([index + 1, inr]\\), \u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u533a\u95f4\u200b\u4e3a\u200b \\([postl + leftsize, postr - 1]\\)</p> </li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    private Map&lt;Integer,Integer&gt; map;\n    private int[] postorder;\n    private int[] inorder;\n    //private int n;\n\n    public TreeNode buildTree(int[] inorder, int[] postorder) {\n        this.inorder = inorder;\n        this.postorder = postorder;\n        this.map = new HashMap&lt;&gt;();\n\n        int n = inorder.length;\n\n        for(int i = 0; i &lt; n; i ++) {\n            map.put(inorder[i], i);\n        }\n\n        return dfs(0, n - 1, 0, n - 1); \n    }\n\n    public TreeNode dfs(int inl, int inr, int postl ,int postr) {\n        if(postr &lt; postl || inr &lt; inl) {\n            return null;\n        }\n\n        int value = postorder[postr];\n        TreeNode root = new TreeNode(value);\n\n        //System.out.println(root.val + \" \" + inl + \" \" + inr + \" \" + postl + \" \" + postr);\n\n        int index = map.get(value);\n        int leftsize = map.get(value) - inl;\n\n        root.left = dfs(inl, index - 1, postl, postl + leftsize - 1);\n        root.right = dfs(index + 1, inr, postl + leftsize, postr - 1);\n\n        return root;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#105","title":"105. \u200b\u4ece\u524d\u200b\u5e8f\u200b\u4e0e\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u5e8f\u5217\u200b\u6784\u9020\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u548c\u200b\u4e0a\u200b\u4e00\u9898\u200b\u4e00\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6309\u7167\u200b\u5f53\u524d\u200b\u7684\u200b\u6839\u200b\u8282\u70b9\u200b\u62c6\u5206\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u5e94\u8be5\u200b\u600e\u4e48\u200b\u505a\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    Map&lt;Integer,Integer&gt; map;\n    private int[] preorder;\n    private int[] inorder;\n\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        this.map = new HashMap&lt;&gt;();\n        this.preorder = preorder;\n        this.inorder = inorder;\n\n        int n = inorder.length;\n\n        for(int i = 0; i &lt; n; i ++) {\n            map.put(inorder[i], i);\n        }\n\n        return dfs(0, n - 1, 0, n - 1);\n    }\n\n    public TreeNode dfs(int prel, int prer, int inl, int inr) {\n        if(prel &gt; prer || inl &gt; inr) {\n            return null;\n        }\n\n        int value = preorder[prel];\n        TreeNode root = new TreeNode(value);\n\n        int index = map.get(value);\n        int leftsize = index - inl;\n\n        root.left = dfs(prel + 1, prel + leftsize, inl, inl + leftsize - 1);\n        root.right = dfs(prel + leftsize + 1, prer, inl + leftsize + 1, inr);\n\n        return root;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#654","title":"654. \u200b\u6700\u5927\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u627e\u5230\u200b\u503c\u200b\u6700\u5927\u200b\u7684\u200b\u6570\u200b\u548c\u200b\u8be5\u6570\u200b\u7684\u200b\u4e0b\u6807\u200b\uff0c\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u6570\u200b\u5c01\u88c5\u200b\u6210\u200b\u8282\u70b9\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u7d22\u5f15\u200b\u5de6\u8fb9\u200b\u7684\u200b\u6570\u200b\u4f5c\u4e3a\u200b\u5de6\u5b50\u200b\u6811\u200b\uff0c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u7d22\u5f15\u200b\u53f3\u8fb9\u200b\u7684\u200b\u6570\u200b\u4f5c\u4e3a\u200b\u53f3\u5b50\u200b\u6811\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u53c8\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u7528\u200b\u9012\u5f52\u200b\u6765\u200b\u89e3\u51b3\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public TreeNode constructMaximumBinaryTree(int[] nums) {\n\n        if(nums == null || nums.length == 0) {\n            return null;\n        }\n        int maxNum, maxIndex;\n        maxNum = maxIndex = -1;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(nums[i] &gt; maxNum) {\n                maxNum = nums[i];\n                maxIndex = i;\n            }\n        }\n\n        TreeNode root = new TreeNode(maxNum);\n\n        int[] leftnums = Arrays.copyOfRange(nums, 0, maxIndex);\n        int[] rightnums = Arrays.copyOfRange(nums, maxIndex + 1, nums.length);\n\n        root.left = constructMaximumBinaryTree(leftnums);\n        root.right = constructMaximumBinaryTree(rightnums);\n\n        return root;\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#617","title":"617. \u200b\u5408\u5e76\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u5408\u5e76\u200b\u8fc7\u7a0b\u200b\u4e2d\u6709\u200b\u4e0b\u9762\u200b\u51e0\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li> <p>root1 \u200b\u548c\u200b root2 \u200b\u90fd\u200b\u4e0d\u200b\u4e3a\u200b\u7a7a\u200b\uff0c\u200b\u628a\u200b root1 \u200b\u548c\u200b root2 \u200b\u7684\u200b\u503c\u200b\u76f8\u52a0\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u8282\u70b9\u200b</p> </li> <li> <p>root1 \u200b\u4e3a\u7a7a\u200b \u200b\u4e14\u200b root2 \u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5408\u5e76\u200b\u751f\u6210\u200b\u7684\u200b\u6811\u200b\u4e5f\u200b\u662f\u200b\u7a7a\u200b</p> </li> <li> <p>root1 \u200b\u4e3a\u7a7a\u200b \u200b\u4e14\u200b root2 \u200b\u4e0d\u4e3a\u200b\u7a7a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5408\u5e76\u200b\u751f\u6210\u200b\u7684\u200b\u6811\u200b\u5c31\u662f\u200b root1</p> </li> <li> <p>root1 \u200b\u4e0d\u4e3a\u200b\u7a7a\u200b \u200b\u4e14\u200b root2 \u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5408\u5e76\u200b\u751f\u6210\u200b\u7684\u200b\u6811\u200b\u5c31\u662f\u200b root2</p> </li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {\n        if(root1 == null) return root2;\n        if(root2 == null) return root1;\n\n        TreeNode root = new TreeNode(root1.val + root2.val);\n\n        root.left = mergeTrees(root1.left, root2.left);\n        root.right = mergeTrees(root1.right, root2.right);\n\n        return root;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#700","title":"700. \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u4e2d\u200b\u7684\u200b\u641c\u7d22","text":"<p>\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u4e2d\u200b\uff0c\u200b\u5de6\u5b50\u200b\u6811\u4e2d\u200b\u7684\u200b\u503c\u200b\u90fd\u200b\u5c0f\u4e8e\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u503c\u200b\u90fd\u200b\u5927\u4e8e\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u6839\u636e\u200b\u8be5\u200b\u7279\u70b9\u200b\u8fdb\u884c\u200b\u5224\u65ad\u200b\u641c\u7d22\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode searchBST(TreeNode root, int val) {\n        if(root == null) {\n            return null;\n        }\n\n        if(root.val == val) {\n            return root;\n        }\n\n        if(root.val &gt; val) {\n            return searchBST(root.left, val);\n        }\n\n        return searchBST(root.right, val);\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#98","title":"98. \u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811","text":"<p>\u200b\u540e\u7eed\u200b\u904d\u5386\u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u5de6\u5b50\u200b\u6811\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u548c\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u53f3\u5b50\u200b\u6811\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u548c\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u968f\u540e\u200b\u6bd4\u8f83\u200b\u5f53\u524d\u200b\u6839\u200b\u8282\u70b9\u200b\u503c\u200b\u548c\u200b\u5de6\u5b50\u200b\u6811\u4e2d\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u4e0e\u200b\u53f3\u5b50\u200b\u6811\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u82e5\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5219\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b \\([-\\inf, \\inf]\\) \u200b\u7684\u200b\u533a\u95f4\u200b\uff0c\u200b\u5426\u5219\u200b\u5408\u5e76\u200b\u66f4\u65b0\u200b\u5f53\u524d\u200b\u7684\u200b\u533a\u95f4\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return dfs(root, Long.MAX_VALUE, Long.MIN_VALUE)[0] != Long.MIN_VALUE;\n    }\n\n    public long[] dfs(TreeNode root, long left, long right) {\n        if(root == null) {\n            return new long[]{Long.MAX_VALUE, Long.MIN_VALUE};\n        }\n\n        long[] leftInter = dfs(root.left, left, right);\n        long[] rightInter = dfs(root.right, left, right);\n\n        long x = root.val;\n\n        if(x &lt;= leftInter[1] || x &gt;= rightInter[0]) {\n            return new long[]{Long.MIN_VALUE, Long.MAX_VALUE};\n        }\n\n        return new long[]{Math.min(x, leftInter[0]), Math.max(x, rightInter[1])};\n    }\n\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#530","title":"530. \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u6700\u5c0f\u200b\u7edd\u5bf9\u200b\u5dee","text":"<p>\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u6c42\u200b\u76f8\u90bb\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u5dee\u503c\u200b\uff0c\u200b\u627e\u51fa\u200b\u6700\u5c0f\u200b\u7684\u200b\u76f8\u90bb\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u5dee\u503c\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    private int pre = Integer.MIN_VALUE / 2;\n    public int getMinimumDifference(TreeNode root) {\n        return dfs(root);\n    }   \n\n    public int dfs(TreeNode root) {\n        int ans = Integer.MAX_VALUE / 2;\n\n        if(root.left != null) {\n            ans = Math.min(ans, dfs(root.left));    \n        }\n\n        ans = Math.min(ans, root.val - pre);\n        pre = root.val;\n\n        if(root.right != null) {\n            ans = Math.min(ans, dfs(root.right));\n        }\n\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#501","title":"501. \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u4e2d\u200b\u7684\u200b\u4f17\u6570","text":"<p>\u200b\u4f7f\u7528\u200bstream\u200b\u6d41\u200b\u628a\u200bList\u200b\u96c6\u5408\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6570\u7ec4\u200b:</p> <pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();\nint[] listarr = list.stream().mapToInt(Integer::intvalue).toArray();\n</code></pre> <p>\u200b\u601d\u8def\u200b\u8fd8\u662f\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\uff0c\u200b\u770b\u200b\u6574\u4e2a\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u51fa\u6765\u200b\u7684\u200b\u5e8f\u5217\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u5355\u8c03\u200b\u4e0d\u51cf\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7edf\u8ba1\u200b\u4e00\u4e2a\u200b\u6570\u200b\u7684\u200b\u51fa\u73b0\u200b\u9891\u7387\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u770b\u200b\u5f53\u524d\u200b\u6570\u200b\u4e0e\u200b\u4e0a\u200b\u4e00\u4e2a\u200b\u6570\u200b\u662f\u4e0d\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\u3002</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nimport java.util.*;\n\nclass Solution {\n    private int maxFre;\n    private int preValue;\n    private int count;\n    List&lt;Integer&gt; ans;\n\n    public int[] findMode(TreeNode root) {\n        this.maxFre = Integer.MIN_VALUE;\n        this.preValue = Integer.MIN_VALUE;\n        this.count = 0;\n        this.ans = new ArrayList&lt;&gt;();\n\n        dfs(root);\n        return ans.stream().mapToInt(Integer::intValue).toArray();\n    }\n\n    public void dfs(TreeNode root) {\n        if(root == null) {\n            return;\n        }\n\n        dfs(root.left);\n\n        if(preValue == root.val) {\n            count ++;\n        } else {\n            count = 1;\n        }\n\n        if(count &gt;= maxFre) {\n            if(count &gt; maxFre) {\n                while(!ans.isEmpty()) {\n                    ans.remove(ans.size() - 1);\n                }\n                maxFre = count;\n            } \n            ans.add(root.val);\n        } \n\n        preValue = root.val;\n\n\n        dfs(root.right);\n\n    } \n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#236","title":"236. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u6700\u8fd1\u200b\u516c\u5171\u200b\u7956\u5148","text":"<p>\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u7ed3\u70b9\u200b root \u200b\u662f\u200b q \u200b\u6216\u8005\u200b p \u200b\u7684\u8bdd\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5f53\u524d\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5f53\u200b root \u200b\u662f\u200b\u4e8c\u8005\u200b\u4e4b\u4e00\u200b\u7684\u200b\u65f6\u5019\u200b\u53ea\u6709\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li> <p>\u200b\u5982\u679c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b\u5728\u200broot\u200b\u4e0b\u9762\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5f53\u524d\u200b root \u200b\u5c31\u662f\u200b\u4e24\u4e2a\u200b\u7ed3\u70b9\u200b\u7684\u200b\u6700\u8fd1\u200b\u516c\u5171\u200b\u7956\u5148\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b\u4e0d\u200b\u5728\u200broot\u200b\u6240\u5728\u200b\u7684\u200b\u5b50\u6811\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5f53\u524d\u200b root \u200b\u867d\u7136\u200b\u4e0d\u662f\u200b\u4e24\u4e2a\u200b\u7ed3\u70b9\u200b\u7684\u200b\u6700\u8fd1\u200b\u516c\u5171\u200b\u7956\u5148\u200b\uff0c\u200b\u4f46\u662f\u200b\u8fd4\u56de\u200b\u540e\u200b\u53ef\u4ee5\u200b\u5728\u200b\u56de\u6eaf\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u7ed3\u70b9\u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u662f\u5426\u200b\u5305\u542b\u200b q \u200b\u6216\u8005\u200b p</p> </li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root == null || root == p || root == q) {\n            return root;\n        }\n\n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n\n        if(left != null &amp;&amp; right != null) {\n            return root;\n        }\n\n        if(left != null) {\n            return left;\n        }\n\n        return right;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#235","title":"235. \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u6700\u8fd1\u200b\u516c\u5171\u200b\u7956\u5148","text":"<p>\u200b\u91c7\u7528\u200b\u5148\u5e8f\u200b\u904d\u5386\u200b\uff0c\u200b\u5373\u5148\u200b\u5904\u7406\u200b\u7ed3\u70b9\u200b</p> <ul> <li> <p>\u200b\u5982\u679c\u200b\u5f53\u524d\u200b root.val \u200b\u5904\u4e8e\u200b p.val \u200b\u548c\u200b q.val \u200b\u4e4b\u95f4\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b root \u200b\u5c31\u662f\u200b\u6700\u8fd1\u200b\u516c\u5171\u200b\u7956\u5148\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u5f53\u524d\u200b root.val \u200b\u548c\u200b p.val \u200b\u6216\u8005\u200b q.val \u200b\u76f8\u7b49\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b root \u200b\u5c31\u662f\u200b\u6700\u8fd1\u200b\u516c\u5171\u200b\u7956\u5148\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u5b58\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b\u4e0d\u200b\u548c\u200b\u5f53\u524d\u200b root \u200b\u5728\u200b\u4e00\u4e2a\u200b\u5b50\u6811\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u91c7\u7528\u200b\u7684\u200b\u662f\u200b\u5148\u5e8f\u200b\u904d\u5386\u200b\uff0c\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u7ed3\u70b9\u200b\u4e0d\u200b\u5728\u200b\u540c\u4e00\u4e2a\u200b\u5b50\u6811\u200b\u65e9\u5c31\u200b\u8fd4\u56de\u200b\u4e4b\u524d\u200b\u7684\u200b\u7ed3\u70b9\u200b\u4e86\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b root.val &lt; p.val &amp;&amp; root.val &lt; q.val\uff0c\u200b\u90a3\u4e48\u200b\u7b54\u6848\u200b\u5728\u200b\u53f3\u5b50\u200b\u6811\u4e2d\u200b\uff0c\u200b\u904d\u5386\u200b\u53f3\u5b50\u200b\u6811\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b root.val &gt; p.val &amp;&amp; root.val &gt; q.val\uff0c\u200b\u90a3\u4e48\u200b\u7b54\u6848\u200b\u5728\u200b\u5de6\u5b50\u200b\u6811\u4e2d\u200b\uff0c\u200b\u904d\u5386\u200b\u5de6\u5b50\u200b\u6811\u200b</p> </li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root == null) {\n            return null;\n        }\n\n        if((root.val &gt;= p.val &amp;&amp; root.val &lt;= q.val) || (root.val &lt;= p.val &amp;&amp; root.val &gt;= q.val)) {\n            return root;\n        }\n\n        if(root.val &lt; p.val &amp;&amp; root.val &lt; q.val) {\n            return lowestCommonAncestor(root.right, p, q);\n        }\n\n        return lowestCommonAncestor(root.left, p, q);\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#701","title":"701. \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u4e2d\u200b\u7684\u200b\u63d2\u5165\u200b\u64cd\u4f5c","text":"<p>\u200b\u6839\u636e\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u9009\u62e9\u200b\u63d2\u200b\u5de6\u8fb9\u200b\u8fd8\u662f\u200b\u63d2\u200b\u53f3\u8fb9\u200b</p> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoBST(TreeNode root, int val) {\n        if(root == null) {\n            return new TreeNode(val);\n        }\n        dfs(root, val);\n        return root;\n    }\n\n    public void dfs(TreeNode root, int val) {\n        if(val &gt; root.val) {\n            if(root.right == null) {\n                root.right = new TreeNode(val);\n            } else {\n                dfs(root.right, val);\n            }\n        }\n\n        if(val &lt; root.val) {\n            if(root.left == null) {\n                root.left = new TreeNode(val);\n            } else {\n                dfs(root.left, val);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#450","title":"450. \u200b\u5220\u9664\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u4e2d\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u5220\u9664\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u4e2d\u200b\u7684\u200b\u7279\u5b9a\u200b\u503c\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u8981\u200b\u5220\u9664\u200b\u7684\u200b\u8282\u70b9\u200b node \u200b\u5b58\u5728\u200b\u4e0b\u9762\u200b\u4e00\u4e9b\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li> <p>node \u200b\u6ca1\u6709\u200b\u5b69\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u90a3\u4e48\u200b\u76f4\u63a5\u200b\u5220\u9664\u200b\uff0c\u200b\u7ecf\u8fc7\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u5b50\u6811\u200b\u5c31\u662f\u200b null</p> </li> <li> <p>node \u200b\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\u6ca1\u6709\u200b\u53f3\u5b50\u200b\u6811\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5220\u9664\u200b\u5e76\u200b\u8ba9\u200b\u5de6\u5b50\u200b\u6811\u4e0a\u200b\u4f4d\u200b\uff0c\u200b\u7ecf\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u5b50\u6811\u200b\u5c31\u662f\u200b node.left</p> </li> <li> <p>node \u200b\u6709\u53f3\u5b50\u200b\u6811\u200b\u6ca1\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5220\u9664\u200b\u5e76\u200b\u8ba9\u200b\u53f3\u5b50\u200b\u6811\u4e0a\u200b\u4f4d\u200b\uff0c\u200b\u7ecf\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u5b50\u6811\u200b\u5c31\u662f\u200b node.right</p> </li> <li> <p>node \u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u90fd\u200b\u6709\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u5de6\u5b50\u200b\u6811\u4e0a\u200b\u4f4d\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u53f3\u5b50\u200b\u6811\u4e0a\u200b\u4f4d\u200b\u3002\u200b\u8ba9\u200b\u5de6\u5b50\u200b\u6811\u4e0a\u200b\u4f4d\u200b\u7684\u200b\u529e\u6cd5\u200b\u5c31\u662f\u200b\u628a\u200b\u53f3\u5b50\u200b\u6811\u200b\u63a5\u5230\u200b\uff0c\u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u6700\u53f3\u200b\u8282\u70b9\u200b\u4e0a\u200b\u3002\u200b\u7531\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u6027\u8d28\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\uff0cnode.left \u200b\u5b50\u200b\u6811\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b\u503c\u200b\u90fd\u200b\u662f\u200b\u5c0f\u4e8e\u200b node.right \u200b\u5b50\u200b\u6811\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u628a\u200b node.right \u200b\u6574\u4e2a\u200b\u63a5\u5230\u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u6700\u53f3\u200b\u8282\u70b9\u200b\u4e0a\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u7ef4\u62a4\u200b\u4e86\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u6027\u8d28\u200b\u3002\u200b\u7ecf\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u5b50\u6811\u200b\u5c31\u662f\u200b node.left</p> </li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode deleteNode(TreeNode root, int key) {\n        if(root == null) {\n            return null;\n        }\n\n        if(root.val == key) {\n            if(root.left == null) return root.right;\n            if(root.right == null) return root.left;\n            TreeNode t = root.left;\n            while(t.right != null) t = t.right;\n            t.right = root.right;\n            return root.left;\n        } else if(root.val &lt; key) {\n            root.right = deleteNode(root.right, key);\n        } else {\n            root.left = deleteNode(root.left, key);\n        }\n\n        return root;\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#669","title":"669. \u200b\u4fee\u526a\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811","text":"<p>\u200b\u8fd9\u9898\u200b\u548c\u200b\u5220\u9664\u200b\u4e8c\u53c9\u6811\u200b\u4e2d\u200b\u7684\u200b\u7ed3\u70b9\u200b\u662f\u200b\u4e00\u6837\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8981\u200b\u6ce8\u610f\u200b\u4e0e\u200b\u5220\u9664\u200b\u4e8c\u53c9\u6811\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8fd9\u9053\u9898\u200b\u53ef\u80fd\u200b\u6709\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\u503c\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u533a\u95f4\u200b\u8303\u56f4\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5982\u679c\u200b\u91c7\u7528\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5220\u9664\u200b\u4e0d\u200b\u5408\u9002\u200b\u7ed3\u70b9\u200b\u7684\u200b\u5b50\u6811\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u5904\u7406\u200b\uff0c\u200b\u8981\u200b\u4f7f\u7528\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd4\u56de\u200b\u7684\u200b\u5b50\u6811\u4e2d\u200b\u53ef\u80fd\u200b\u8fd8\u6709\u200b\u4e0d\u200b\u5408\u6cd5\u200b\u7684\u200b\u8282\u70b9\u200b</p> <pre><code>class Solution {\n    public TreeNode trimBST(TreeNode root, int low, int high) {\n        if(root == null) {\n            return null;\n        }\n\n        root.left = trimBST(root.left, low, high);\n        root.right = trimBST(root.right, low, high);\n\n        if(root.val &lt; low || root.val &gt; high) {\n            TreeNode t = root;\n            while(t != null) {\n                if(t.val &gt; high) {\n                    t = t.left;\n                } else if(t.val &lt; low) {\n                    t = t.right;\n                } else {\n                    break;\n                }\n            } \n            return t;\n        } \n\n        return root;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#108","title":"108. \u200b\u5c06\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811","text":"<p>\u200b\u9012\u5f52\u200b\u5904\u7406\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u53ea\u200b\u9700\u8981\u200b\u627e\u5230\u200b\u4e2d\u95f4\u200b\u7684\u200b\u90a3\u4e2a\u200b\u6570\u200b\uff0c\u200b\u4e0d\u8bba\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u662f\u200b\u5076\u6570\u200b\u8fd8\u662f\u200b\u5947\u6570\u200b\uff0c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b n / 2 \u200b\u4f5c\u4e3a\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u7136\u540e\u200b\u4e0b\u6807\u200b\u5c0f\u4e8e\u200b n / 2 \u200b\u7684\u200b\u5c31\u662f\u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u4e0b\u6807\u200b\u5927\u4e8e\u200b n / 2 \u200b\u7684\u200b\u5c31\u662f\u200b\u53f3\u5b50\u200b\u6811\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u9012\u5f52\u200b\u5904\u7406\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b</p> <pre><code>class Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        if(nums == null || nums.length == 0) {\n            return null;\n        }\n        int n = nums.length;\n        int mid = n / 2;\n\n        TreeNode root = new TreeNode(nums[mid]);\n\n        int[] leftnums = Arrays.copyOfRange(nums, 0, mid);\n        int[] rightnums = Arrays.copyOfRange(nums, mid + 1, n);\n\n        root.left = sortedArrayToBST(leftnums);\n        root.right = sortedArrayToBST(rightnums);\n        return root;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BA%8C%E5%8F%89%E6%A0%91/#538","title":"538. \u200b\u628a\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u7d2f\u52a0\u200b\u6811","text":"<pre><code>class Solution {\n    private int sum = 0;\n\n    public TreeNode convertBST(TreeNode root) {\n        dfs(root);\n        return root;\n    }\n\n    public void dfs(TreeNode root) {\n        if(root == null) {\n            return;\n        }\n\n        dfs(root.right);\n        sum += root.val;\n        root.val = sum;\n        dfs(root.left);\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u52a8\u6001\u200b\u89c4\u5212","text":"<p>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#509","title":"509. \u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570","text":"<p>\u200b\u7ecf\u5178\u200b</p> <pre><code>class Solution {\n    public int fib(int n) {\n        int[] f = new int[n + 1];\n\n        for(int i = 0; i &lt;= n; i ++) {\n            if(i == 0) {\n                f[i] = 0;\n            } else if(i == 1) {\n                f[i] = 1;\n            } else {\n                f[i] = f[i - 1] + f[i - 2];\n            }\n        }\n\n        return f[n];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#70","title":"70. \u200b\u722c\u697c\u68af","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u7b2c\u200b i \u200b\u5c42\u200b\u53f0\u9636\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u7b2c\u200b i - 1 \u200b\u5c42\u200b\u53f0\u9636\u200b\u722c\u200b\u4e0a\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u7b2c\u200b i - 2\u200b\u5c42\u200b\u53f0\u9636\u200b\u722c\u200b\u4e0a\u200b</p> <pre><code>class Solution {\n    public int climbStairs(int n) {\n        int[] dp = new int[n + 1];\n\n        for(int i = 1; i &lt;= n; i ++) {\n            if(i == 1) {\n                dp[1] = 1;\n            } else if(i == 2){\n                dp[2] = 2;\n            } else {\n                dp[i] = dp[i - 1] + dp[i - 2];\n            }\n        }\n\n        return dp[n];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#746","title":"746. \u200b\u4f7f\u7528\u200b\u6700\u5c0f\u200b\u82b1\u8d39\u200b\u722c\u697c\u68af","text":"<p>\u200b\u548c\u200b\u722c\u697c\u68af\u200b\u4e00\u6837\u200b\uff0c\u200b\u5f53\u524d\u200b\u7b2c\u200b i \u200b\u5c42\u200b\u697c\u68af\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b i - 1 \u200b\u5c42\u200b\u5230\u8fbe\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4ece\u200b i - 2 \u200b\u5c42\u200b\u5230\u8fbe\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u8fd9\u200b\u4e24\u6761\u8def\u200b\u7684\u200b\u82b1\u8d39\u200b\uff0c\u200b\u9009\u53d6\u200b\u82b1\u8d39\u200b\u5c0f\u200b\u7684\u200b\u4e00\u6761\u200b</p> <pre><code>class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int n = cost.length;\n        int[] dp = new int[n + 1];\n\n        dp[0] = 0;\n        dp[1] = 0;\n\n        for(int i = 2; i &lt;= n; i ++) {\n            dp[i] = Math.min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2]);    \n        }\n\n        return dp[n];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#62","title":"62. \u200b\u4e0d\u540c\u200b\u8def\u5f84","text":"<p>\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u5de6\u8fb9\u200b\u8d70\u200b\u8fc7\u6765\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4e0a\u9762\u200b\u8d70\u200b\u8fc7\u6765\u200b\uff0c\u200b\u4ece\u200b\u4e0a\u9762\u200b\u8d70\u200b\u8fc7\u6765\u200b\u7684\u200b\u8def\u5f84\u200b\u6570\u200b\u52a0\u4e0a\u200b\u4ece\u200b\u5de6\u8fb9\u200b\u8d70\u200b\u8fc7\u6765\u200b\u7684\u200b\u8def\u5f84\u200b\u6570\u200b\u5c31\u662f\u200b\u603b\u200b\u7684\u200b\u8def\u5f84\u200b\u6761\u6570\u200b</p> <pre><code>class Solution {\n    public int uniquePaths(int m, int n) {\n        int[][] dp = new int[m + 1][n + 1];\n\n        for(int i = 0; i &lt; m; i ++) {\n            for(int j = 0; j &lt; n; j ++) {\n                if(i == 0 &amp;&amp; j == 0) {\n                    dp[i + 1][j + 1] = 1;\n                } else {\n                    dp[i + 1][j + 1] = dp[i + 1][j] + dp[i][j + 1];\n                }\n            }\n        }\n\n        return dp[m][n];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#63-ii","title":"63. \u200b\u4e0d\u540c\u200b\u8def\u5f84\u200b II","text":"<p>\u200b\u4e0e\u200b\u4e0a\u200b\u4e00\u9898\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8fd9\u9898\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u662f\u5426\u200b\u6709\u200b\u8def\u969c\u200b\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u8def\u969c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u53ef\u200b\u5230\u8fbe\u200b\u8def\u5f84\u200b\u8df3\u6570\u200b\u5c31\u662f\u200b0\u3002\u200b\u8fd8\u6709\u200b\u8981\u200b\u5224\u65ad\u200b\u521d\u59cb\u200b\u4f4d\u7f6e\u200b\u662f\u5426\u200b\u6446\u653e\u200b\u4e86\u200b\u8def\u969c\u200b\uff0c\u200b\u5982\u679c\u200b\u521d\u59cb\u200b\u4f4d\u7f6e\u200b\u6709\u200b\u8def\u969c\u200b\u90a3\u4e48\u200b\u7b54\u6848\u200b\u76f4\u63a5\u200b\u4e3a\u200b0</p> <pre><code>class Solution {\n    public int uniquePathsWithObstacles(int[][] obstacleGrid) {\n\n        if(obstacleGrid[0][0] == 1) {\n            return 0;\n        }\n\n        int n = obstacleGrid.length;\n        int m = obstacleGrid[0].length;\n\n        int[][] dp = new int[n + 1][m + 1];\n\n        for(int i = 0; i &lt; n; i ++) {\n            for(int j = 0; j &lt; m; j ++) {\n                if(i == 0 &amp;&amp; j == 0) {\n                    dp[i + 1][j + 1] = 1;\n                } else if(obstacleGrid[i][j] == 1) {\n                    dp[i + 1][j + 1] = 0;\n                } else {\n                    dp[i + 1][j + 1] = dp[i][j + 1] + dp[i + 1][j];\n                }\n            }\n        }\n\n        return dp[n][m];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#343","title":"343. \u200b\u6574\u6570\u200b\u62c6\u5206","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#96","title":"96. \u200b\u4e0d\u540c\u200b\u7684\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811","text":"<p>\u200b\u5f53\u9009\u200b\u5b9a\u200b\u4e00\u4e2a\u200b\u6570\u200b\u4f5c\u4e3a\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4ee5\u8be5\u200b\u6839\u200b\u8282\u70b9\u200b\u6784\u9020\u200b\u7684\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u4e0d\u540c\u200b\u79cd\u7c7b\u200b\u5171\u6709\u200b dp[left] * dp[right] \u200b\u79cd\u200b</p> <pre><code>class Solution {\n    public int numTrees(int n) {\n        int[] dp = new int[n + 1];\n\n        for(int i = 0; i &lt;= n; i ++) {\n            if(i == 0 || i == 1) {\n                dp[i] = 1;\n            } else if(i == 2) {\n                dp[i] = 2;\n            } else {\n                for(int j = 1; j &lt;= i; j ++) {\n                    dp[i] += dp[j - 1] * dp[i - j];\n                }\n            }\n        }\n\n        return dp[n];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#416","title":"416. \u200b\u5206\u5272\u200b\u7b49\u200b\u548c\u200b\u5b50\u96c6","text":"<p>\\(dp[i][j]\\)\u200b\u6570\u7ec4\u200b\u5b9a\u4e49\u200b\uff1a\u200b\u4ece\u524d\u200b i \u200b\u4e2a\u6570\u200b\u9009\u200b\uff0c\u200b\u80fd\u5426\u200b\u9009\u51fa\u200b\u548c\u200b\u5927\u5c0f\u200b\u4e3a\u200b j \u200b\u7684\u200b\u96c6\u5408\u200b</p> <p>\u200b\u53ef\u200b\u5f97\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b: \\(dp[i][j] = dp[i - 1][j] || dp[i - 1][j - nums[i]]\\)</p> <p>\u200b\u5206\u522b\u200b\u5bf9\u200b\u5e94\u9009\u200b\u5f53\u524d\u200b\u6570\u548c\u4e0d\u9009\u200b\u5f53\u524d\u200b\u6570\u200b\u7684\u200b\u7ed3\u679c\u200b</p> <pre><code>class Solution {\n    public boolean canPartition(int[] nums) {\n        int sum = 0;\n        for(int num : nums) sum += num;\n\n        if(sum % 2 == 1) {\n            return false;\n        } \n\n        boolean[] dp = new boolean[sum / 2 + 1];\n\n        dp[0] = true;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            for(int j = sum / 2; j &gt;= nums[i]; j --) {\n                dp[j] = dp[j] || dp[j - nums[i]];\n            }\n        }\n\n        return dp[sum / 2];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#1049-ii","title":"1049. \u200b\u6700\u540e\u200b\u4e00\u5757\u200b\u77f3\u5934\u200b\u7684\u200b\u91cd\u91cf\u200b II","text":"<p>\u200b\u548c\u200b\u5206\u5272\u200b\u7b49\u200b\u548c\u200b\u5b50\u96c6\u200b\u4e00\u6837\u200b\uff0c\u200b\u628a\u200b\u77f3\u5934\u200b\u5206\u6210\u200b\u4e24\u5806\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u4e00\u8d77\u200b\u7c89\u788e\u200b\uff0c\u200b\u67e5\u770b\u200b\u5206\u6210\u200b\u4e24\u5806\u200b\u540e\u200b\u8fd9\u200b\u4e24\u5806\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u5dee\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b</p> <pre><code>class Solution {\n    public int lastStoneWeightII(int[] stones) {\n        int sum = 0;\n        for(int stone : stones) sum += stone;\n\n        boolean[] dp = new boolean[sum + 1];\n\n        dp[0] = true;\n\n        for(int i = 0; i &lt; stones.length; i ++) {\n            for(int j = sum; j &gt;= stones[i]; j --) {\n                dp[j] = dp[j] || dp[j - stones[i]];\n            }\n        }\n\n        int ans = Integer.MAX_VALUE;\n        for(int i = 1; i &lt;= sum; i ++) {\n            if(dp[i]) {\n                ans = Math.min(ans, Math.abs(sum - 2 * i));\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#494","title":"494. \u200b\u76ee\u6807\u200b\u548c","text":"<p>\u200b\u8bbe\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b\u548c\u200b\u4e3a\u200b \\(S\\)\uff0c\u200b\u9009\u51fa\u200b\u6765\u52a0\u200b\u8d1f\u53f7\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u548c\u200b\u4e3a\u200b \\(N\\)\uff0c\u200b\u6ca1\u6709\u200b\u52a0\u200b\u8d1f\u53f7\u200b\u7684\u200b\u6570\u200b\u548c\u200b\u4e3a\u200b \\(P\\)\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b \\(N + P = S, P - N = target\\) \uff0c\u200b\u6240\u4ee5\u200b \\(2 * P = S + target, P = (S + target) / 2\\)</p> <p>\u200b\u6b64\u65f6\u200b\u95ee\u9898\u200b\u8f6c\u5316\u200b\u4e3a\u6c42\u200b\u4ece\u200b\u6570\u7ec4\u200b nums \u200b\u4e2d\u200b\u9009\u51fa\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\uff0c\u200b\u96c6\u5408\u200b\u7684\u200b\u548c\u200b\u4e3a\u200b (S + target) / 2 \u200b\u7684\u200b\u9009\u6cd5\u200b\u6709\u200b\u591a\u5c11\u200b\u79cd\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b S + target \u200b\u4e0d\u662f\u200b\u5076\u6570\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5219\u200b\u65e0\u89e3\u200b</p> <pre><code>class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        int s = 0;\n        for(int num : nums) s += num;\n\n        if((target + s) % 2 != 0 || (target + s) &lt; 0) {\n            return 0;\n        }\n\n        target = (target + s) / 2;\n\n        int[] dp = new int[target + 1];\n\n        dp[0] = 1;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            for(int j = target; j &gt;= nums[i]; j --) {\n                dp[j] += dp[j - nums[i]];\n            }\n        }\n\n        return dp[target];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#474","title":"474. \u200b\u4e00\u200b\u548c\u200b\u96f6","text":"<p><pre><code>dp[j][k] \u200b\u8868\u793a\u200b \u200b\u9009\u51fa\u200b\u6765\u200b j \u200b\u4e2a\u200b 0 \u200b\u548c\u200b k \u200b\u4e2a\u200b 1 \u200b\u7684\u200b\u5b50\u96c6\u200b\u7684\u200b\u957f\u5ea6\u200b\u6709\u200b\u591a\u957f\u200b\n\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b: dp[j][k] = max(dp[j][k], dp[j - cnt0[i]][k - cnt1[i]])\n</code></pre> <pre><code>class Solution {\n    public int findMaxForm(String[] strs, int m, int n) {\n        int len = strs.length;\n\n        int[] cnt0 = new int[len + 1];\n        int[] cnt1 = new int[len + 1];\n\n        for(int i = 0; i &lt; len; i ++) {\n            int c0 = 0;\n            int c1 = 0;\n            for(char c : strs[i].toCharArray()) {\n                if(c == '0') c0 ++;\n                else c1 ++;\n            }\n\n            cnt0[i] = c0;\n            cnt1[i] = c1;\n        }\n\n        int[][] dp = new int[m + 1][n + 1];\n\n        for(int i = 0; i &lt; len; i ++) {\n            for(int j = m; j &gt;= cnt0[i]; j --) {\n                for(int k = n; k &gt;= cnt1[i]; k --) {\n                    dp[j][k] = Math.max(dp[j][k], dp[j - cnt0[i]][k - cnt1[i]] + 1);\n                }\n            }\n        }\n\n        return dp[m][n];\n    }\n}\n</code></pre></p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#518-ii","title":"518. \u200b\u96f6\u94b1\u200b\u5151\u6362\u200b II","text":"<p>\u200b\u5b8c\u5168\u200b\u80cc\u5305\u200b\u95ee\u9898\u200b</p> <pre><code>class Solution {\n    public int change(int amount, int[] coins) {\n        int n = coins.length;\n\n        int[][] dp = new int[n + 1][amount + 1];\n\n        dp[0][0] = 1;\n\n        for(int i = 0; i &lt; n; i ++) {\n            for(int j = 0; j &lt;= amount; j ++) {\n                for(int k = 0; k * coins[i] &lt;= j; k ++) {\n                    dp[i + 1][j] += dp[i][j - k * coins[i]];\n                }\n            }\n        }\n\n        return dp[n][amount];\n    } \n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#377-iv","title":"377. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b \u2163","text":"<p>\u200b\u76f8\u5f53\u4e8e\u200b\u722c\u697c\u68af\u200b\u7684\u200b\u8fdb\u9636\u200b\u7248\u200b\uff0c\u200b\u722c\u697c\u68af\u200b\u6bcf\u6b21\u200b\u53ea\u80fd\u200b\u9009\u62e9\u200b 1 \u200b\u6216\u8005\u200b 2\uff0c\u200b\u800c\u200b\u8be5\u9898\u200b\u662f\u200b\u6bcf\u6b21\u200b\u4ece\u200b nums \u200b\u6570\u7ec4\u200b\u4e2d\u9009\u200b\u4e00\u4e2a\u200b\u6570\u200b</p> <pre><code>class Solution {\n    public int combinationSum4(int[] nums, int target) {\n        int n = nums.length;\n\n        int[] dp = new int[target + 1];\n\n        dp[0] = 1;\n\n        for(int j = 1; j &lt;= target; j ++) {\n            for(int i = 0; i &lt; n; i ++) {\n                if(j &gt;= nums[i]) {\n                    dp[j] += dp[j - nums[i]];\n                }\n            }\n        } \n\n        return dp[target];\n    }   \n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#57","title":"57. \u200b\u722c\u697c\u68af\u200b\uff08\u200b\u7b2c\u516b\u671f\u200b\u6a21\u62df\u200b\u7b14\u8bd5\u200b\uff09","text":"<p>\u200b\u548c\u200b\u4e0a\u200b\u4e00\u9898\u200b\u4e00\u6837\u200b\uff0c\u200b\u8fd9\u6b21\u200b\u7684\u200b nums \u200b\u53d8\u6210\u200b\u4e86\u200b 1 ~ m</p> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception{\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n\n        int[] dp = new int[n + 1];\n\n        dp[0] = 1;\n        for(int j = 1; j &lt;= n; j ++) {\n            for(int i = 1; i &lt;= m; i ++) {\n                if(j &gt;= i) {\n                    dp[j] += dp[j - i]; \n                }\n            }\n        }\n\n        System.out.println(dp[n]);\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#322","title":"322. \u200b\u96f6\u94b1\u200b\u5151\u6362","text":"<p>\u200b\u6807\u51c6\u200b\u7684\u200b\u5b8c\u5168\u200b\u80cc\u5305\u200b\u95ee\u9898\u200b</p> <pre><code>class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int n = coins.length;\n\n        int[] dp = new int[amount + 1];\n\n        Arrays.fill(dp, Integer.MAX_VALUE / 2);\n        dp[0] = 0;\n\n        for(int i = 0; i &lt; n; i ++) {\n            for(int j = coins[i]; j &lt;= amount; j ++) {\n                dp[j] = Math.min(dp[j], dp[j - coins[i]] + 1);\n            }\n        }\n\n        return dp[amount] &gt;= Integer.MAX_VALUE / 2 ? -1 : dp[amount];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/","title":"\u54c8\u5e0c\u200b\u8868","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#_2","title":"\u54c8\u5e0c\u200b\u8868\u200b\u7406\u8bba\u200b\u57fa\u7840","text":"<p>\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u964d\u4f4e\u200b\u67e5\u627e\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u3002\u200b\u4f8b\u5982\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u4efb\u52a1\u200b\u7684\u200b\u9700\u6c42\u200b\uff0c\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5728\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u53cd\u590d\u200b\u67e5\u627e\u200b\u67d0\u4e2a\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u6570\u200b \\(x\\) \u200b\u51fa\u73b0\u200b\u4e86\u200b\u51e0\u6b21\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53ef\u4ee5\u200b\u5f00\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4ee5\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u5bf9\u5e94\u200b\u503c\u200b \\(x\\) \uff0c\u200b\u6570\u7ec4\u200b\u7684\u200b\u503c\u200b\u5bf9\u5e94\u200b\u6570\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u8bb0\u5f55\u200b\u5b8c\u200b\u4e86\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5404\u4e2a\u200b\u6570\u503c\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\u3002</p> <p>\u200b\u5728\u200b\u8fd9\u200b\u4e0a\u200b\u4e2a\u200b\u4f8b\u5b50\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u6ca1\u6709\u200b\u7528\u5230\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\uff0c\u200b\u6216\u8005\u8bf4\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u7684\u200b\u6620\u5c04\u200b\u5c31\u662f\u200b\u81ea\u5df1\u200b\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u8981\u200b\u8bb0\u5f55\u200b\u7684\u200b\u503c\u200b\u4e0d\u662f\u200b\u6570\u5b57\u200b\uff0c\u200b\u800c\u662f\u200b\u5b57\u7b26\u200b\uff0c\u200b\u6216\u8005\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002\u200b\u6bd4\u5982\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u6240\u6709\u200b\u540c\u5b66\u200b\u540d\u5b57\u200b\uff08\u200b\u5047\u8bbe\u200b\u540d\u5b57\u200b\u5404\u4e0d\u76f8\u540c\u200b\uff09\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u6570\u7ec4\u200b\uff0c\u200b\u73b0\u5728\u200b\u9700\u8981\u200b\u4f60\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u540d\u5b57\u200b\u5168\u90e8\u200b\u8bb0\u5f55\u200b\u5230\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6211\u4eec\u200b\u5c31\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u6620\u5c04\u200b\uff0c\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u4f46\u200b\u6ce8\u610f\u200b\uff0c\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u67e5\u627e\u200b\u6b21\u6570\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6bcf\u6b21\u200b\u90fd\u200b\u662f\u200b \\(1\\) \u200b\u6b21\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e0d\u540c\u200b\u7684\u200b\u503c\u200b\u53ef\u80fd\u200b\u88ab\u200b\u54c8\u5e0c\u200b\u51fd\u6570\u200b\u6620\u5c04\u200b\u5230\u200b\u76f8\u540c\u200b\u7684\u200b\u6570\u503c\u200b\u4e0a\u200b\uff0c\u200b\u5373\u200b\u53d1\u751f\u200b\u54c8\u5e0c\u200b\u78b0\u649e\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u54c8\u5e0c\u200b\u78b0\u649e\u200b\uff08\u200b\u4f8b\u5982\u200b\u4f7f\u7528\u200b\u7ebf\u6027\u200b\u63a2\u6d4b\u200b\u6cd5\u200b\u3001\u200b\u62c9\u94fe\u200b\u6cd5\u200b\uff09\uff0c\u200b\u4f1a\u200b\u4f7f\u5f97\u200b\u67e5\u627e\u200b\u7684\u200b\u6b21\u6570\u200b\u53d8\u591a\u200b\u3002\u200b\u4f46\u662f\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5e76\u200b\u4e0d\u200b\u76f4\u63a5\u200b\u4f9d\u8d56\u4e8e\u200b\u6570\u636e\u200b\u5927\u5c0f\u200b\uff0c\u200b\u4e3a\u200b \\(O(1)\\) </p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#242","title":"242. \u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd","text":"<pre><code>class Solution {\n    public boolean isAnagram(String s, String t) {\n        if(s.length() != t.length()) {\n            return false;\n        }\n\n        char[] cnt = new char[26];\n\n        for(char x : s.toCharArray()) {\n            cnt[x - 'a'] ++;\n        }\n\n        for(char x : t.toCharArray()) {\n            cnt[x - 'a'] --;\n        }\n\n        for(int x : cnt) {\n            if(x != 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#383","title":"383. \u200b\u8d4e\u91d1\u200b\u4fe1","text":"<pre><code>class Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        int[] cnt = new int[26];\n\n        for(var x : magazine.toCharArray()) {\n            cnt[x - 'a'] ++;\n        }\n\n        for(var x : ransomNote.toCharArray()) {\n            cnt[x - 'a'] --;\n            if(cnt[x - 'a'] &lt; 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#49","title":"49. \u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd\u200b\u5206\u7ec4","text":"<pre><code>import java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;String&gt;&gt; groupAnagrams(String[] strs) {\n        Map&lt;String, List&lt;String&gt;&gt; collect = new HashMap&lt;&gt;();\n\n        for(String x : strs) {\n            char[] tempChar = x.toCharArray();\n            Arrays.sort(tempChar);\n            String temp = new String(tempChar);\n\n            if(!collect.containsKey(temp)) {\n                collect.put(temp, new ArrayList&lt;&gt;());  \n            } \n            collect.get(temp).add(x);\n        }\n\n        List&lt;List&lt;String&gt;&gt; ans = new ArrayList&lt;&gt;();\n\n        for(List&lt;String&gt; t : collect.values()) {\n            ans.add(t);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#438","title":"438. \u200b\u627e\u5230\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6240\u6709\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd","text":"<p>\u200b\u5b9a\u200b\u957f\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b+\u200b\u54c8\u5e0c\u200b\u8868\u200b</p> <p>\u200b\u9996\u5148\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\uff0c\u200b\u8981\u200b\u600e\u4e48\u200b\u5224\u65ad\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u662f\u4e0d\u662f\u200b\u5f02\u4f4d\u200b\u8bcd\u200b\u5462\u200b\uff1f\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7684\u200b\u60f3\u5230\u200b\u7528\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\uff0c\u200b\u5206\u522b\u200b\u8bb0\u5f55\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u76f8\u540c\u200b\u952e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u3002</p> <p>\u200b\u7b2c\u4e8c\u4e2a\u200b\u95ee\u9898\u200b\u662f\u200b\u6211\u4eec\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u628a\u200b\uff0c\u200b\u4e32\u200b \\(s\\) \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u4e32\u200b\u90fd\u200b\u53d6\u51fa\u200b\u6765\u200b\uff0c\u200b\u7136\u540e\u200b\u7edf\u8ba1\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u518d\u200b\u4e0e\u200b\u4e32\u200b \\(p\\) \u200b\u7684\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\u7684\u200b\u5462\u200b\uff1f\u200b\u7b54\u6848\u200b\u662f\u200b\u5e76\u4e0d\u9700\u8981\u200b\u3002\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u6765\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u4efb\u52a1\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(p.length()\\) \u200b\u7684\u200b\u7a97\u53e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u7edf\u8ba1\u200b\u843d\u200b\u5728\u200b\u7a97\u53e3\u200b\u5185\u200b\u7684\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u5728\u200b\u6bd4\u8f83\u200b\u5b8c\u200b\u662f\u5426\u200b\u4e3a\u200b\u5f02\u4f4d\u200b\u8bcd\u540e\u200b\uff0c\u200b\u7a97\u53e3\u200b\u5411\u200b\u540e\u200b\u6ed1\u52a8\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8fdb\u5165\u200b\u7a97\u53e3\u200b\u7684\u200b\u5b57\u6bcd\u200b\u6b21\u6570\u200b\u52a0\u200b \\(1\\)\uff0c\u200b\u4ece\u200b\u7a97\u53e3\u200b\u51fa\u53bb\u200b\u7684\u200b\u5b57\u6bcd\u200b\u6b21\u6570\u200b\u51cf\u200b \\(1\\) \u3002</p> <pre><code>import java.util.*;\nclass Solution {\n    public List&lt;Integer&gt; findAnagrams(String s, String p) {\n        int[] cnts = new int[26];\n        int[] cntp = new int[26];\n\n        int m = p.length();\n        for(int i = 0; i &lt; m; i ++) {\n            cntp[p.charAt(i) - 'a'] ++;\n        }\n\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        for(int i = 0, j = 0; i &lt; s.length(); i ++) {\n            cnts[s.charAt(i) - 'a'] ++;\n            if(i - j + 1 == m) {\n                if(check(cnts, cntp)) {\n                    ans.add(j);\n                }\n                cnts[s.charAt(j) - 'a'] --;\n                j ++;\n            }\n        }\n        return ans;\n    }\n\n    public boolean check(int[] cnts, int[] cntp) {\n        for(int i = 0; i &lt; 26; i ++) {\n            if(cnts[i] != cntp[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#349","title":"349. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6","text":"<p>\u200b\u7528\u200b\u4e00\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u8bb0\u5f55\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u518d\u200b\u68c0\u67e5\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u662f\u5426\u200b\u6709\u200b\uff0c\u200b\u6709\u200b\u7684\u8bdd\u200b\u5c31\u200b\u628a\u200b\u76f8\u540c\u200b\u7684\u200b\u52a0\u5165\u200b\u5230\u200b\u4e00\u4e2a\u200b \\(set\\) \u200b\u96c6\u5408\u200b\u4e2d\u200b\uff0c\u200b\u6700\u540e\u200b\u4f7f\u7528\u200b</p> <pre><code>set.stream().mapToInt(Integer::intValue).toArray()\n</code></pre> <p>\u200b\u628a\u200b \\(set\\) \u200b\u8f6c\u5316\u200b\u4e3a\u200b \\(int\\) \u200b\u6570\u7ec4\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        boolean[] cnt1 = new boolean[1001];\n        Set&lt;Integer&gt; set = new HashSet&lt;&gt;();\n\n        for(int x : nums1) {\n            cnt1[x] = true;\n        }        \n        for(int x : nums2) {\n            if(cnt1[x]) {\n                set.add(x);\n            }\n        }\n\n        int[] ans = set.stream().mapToInt(Integer::intValue).toArray();\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#350-ii","title":"350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II","text":"<p>\u200b\u7528\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5206\u522b\u200b\u7edf\u8ba1\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6570\u503c\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u6bcf\u4e2a\u200b\u6570\u503c\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b\u4e24\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u6570\u503c\u200b \\(x\\) \u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u90fd\u200b\u5927\u4e8e\u200b \\(0\\) \uff0c\u200b\u5219\u200b\u53d6\u200b\u4e24\u8005\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u7684\u200b\u8f83\u200b\u5c0f\u503c\u200b\u4f5c\u4e3a\u200b\u6b21\u6570\u200b\u8bb0\u200b\u4f5c\u200b \\(times\\) \uff0c\u200b\u628a\u200b \\(x\\) \u200b\u52a0\u5165\u200b\u7b54\u6848\u200b \\(times\\) \u200b\u6b21\u200b\u3002</p> <pre><code>import java.util.*;\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        int[] cnt1 = new int[1001];\n        int[] cnt2 = new int[1001];\n\n        for(int x : nums1) {\n            cnt1[x] ++;\n        }\n        for(int x : nums2) {\n            cnt2[x] ++;\n        }\n\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        for(int i = 0; i &lt;= 1000; i ++) {\n            if(cnt1[i] != 0 &amp;&amp; cnt2[i] != 0) {\n                int times = Math.min(cnt1[i], cnt2[i]);\n                for(int k = 0; k &lt; times; k ++) {\n                    ans.add(i);\n                }        \n            }\n        }\n\n        return ans.stream().mapToInt(Integer::intValue).toArray();\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#202","title":"202. \u200b\u5feb\u4e50\u200b\u6570","text":"<p>\u200b\u7528\u200b\u4e00\u4e2a\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5b58\u50a8\u200b\u8fbe\u5230\u200b\u8fc7\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5224\u65ad\u200b\u5728\u200b\u64cd\u4f5c\u8fc7\u7a0b\u200b\u4e2d\u200b\u6709\u6ca1\u6709\u200b\u9677\u5165\u200b\u5230\u200b\u5faa\u73af\u200b\u4e2d\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public boolean isHappy(int n) {\n        Set&lt;Integer&gt; set = new HashSet&lt;&gt;();\n        int m = n;\n\n        while(true) {\n            m = getsum(m);\n            if(m == 1) return true;\n            if(set.contains(m)) return false;\n\n            set.add(m);\n        }\n    }\n\n    int getsum(int m) {\n        int ans = 0;\n        while(m &gt; 0) {\n            ans += (m % 10) * (m % 10);\n            m /= 10;\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#1","title":"1. \u200b\u4e24\u6570\u200b\u4e4b\u200b\u548c","text":"<p>\u200b\u679a\u4e3e\u200b\u53f3\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u5de6\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map&lt;Integer, Integer&gt; cnt = new HashMap&lt;&gt;();\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(cnt.containsKey(target - nums[i])) {\n                return new int[]{cnt.get(target - nums[i]), i};\n            }\n            cnt.put(nums[i], i);\n        }\n\n        return new int[]{-1, -1};\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#454-ii","title":"454. \u200b\u56db\u6570\u200b\u76f8\u52a0\u200b II","text":"<p>\u200b\u5148\u200b\u4e24\u91cd\u200b\u5faa\u73af\u200b\u7edf\u8ba1\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u548c\u200b\u8bb0\u5f55\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u904d\u5386\u200b\u53e6\u5916\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u770b\u80fd\u200b\u4e0d\u80fd\u200b\u5f97\u5230\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u8bb0\u5f55\u200b\u7684\u200b\u76f8\u53cd\u6570\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {\n        Map&lt;Integer,Integer&gt; cnt = new HashMap&lt;&gt;();\n\n        for(int i = 0; i &lt; nums1.length; i ++) {\n            for(int j = 0; j &lt; nums2.length; j ++) {\n                int t = nums1[i] + nums2[j];\n                cnt.merge(t, 1, Integer::sum);\n            }\n        }\n\n        int ans = 0;\n\n        for(int i = 0; i &lt; nums3.length; i ++) {\n            for(int j = 0; j &lt; nums4.length; j ++) {\n                int t = nums3[i] + nums4[j];\n                ans += cnt.getOrDefault(-t, 0);        \n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#383_1","title":"383. \u200b\u8d4e\u91d1\u200b\u4fe1","text":"<p>\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b57\u6bcd\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b</p> <pre><code>class Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        int[] cnt = new int[26];\n\n        for(var x : magazine.toCharArray()) {\n            cnt[x - 'a'] ++;\n        }\n\n        for(var x : ransomNote.toCharArray()) {\n            cnt[x - 'a'] --;\n            if(cnt[x - 'a'] &lt; 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%93%88%E5%B8%8C%E8%A1%A8/#15","title":"15. \u200b\u4e09\u6570\u200b\u4e4b\u200b\u548c","text":"<p>\u200b\u5148\u200b\u56fa\u5b9a\u200b\u4e00\u4e2a\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u786e\u5b9a\u200b\u53e6\u5916\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums) {\n        int n = nums.length;\n\n        Arrays.sort(nums);\n\n        List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n\n        for(int i = 0; i &lt; n; i ++) {\n            if(i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) {\n                continue;\n            }\n            int l = i + 1, r = n - 1;\n            while(l &lt; r) {\n                int sum = nums[i] + nums[l] + nums[r];\n                if(sum == 0) {\n                    ans.add(new ArrayList&lt;&gt;(Arrays.asList(nums[i], nums[l], nums[r])));\n                    while(l &lt; r &amp;&amp; nums[l] == nums[l + 1]) l ++;\n                    while(l &lt; r &amp;&amp; nums[r] == nums[r - 1]) r --;\n                    l ++;\n                    r --;\n                } else if(sum &gt; 0) {\n                    r --;\n                } else {\n                    l ++;\n                }\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/","title":"\u56de\u6eaf\u200b\u7b97\u6cd5","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#77","title":"77. \u200b\u7ec4\u5408","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5f53\u524d\u200b\u7684\u200b\u6570\u200b n \u200b\u53ea\u6709\u200b\u4e24\u79cd\u200b\u9009\u62e9\u200b\uff0c\u200b\u9009\u200b\u6216\u8005\u200b\u4e0d\u9009\u200b\u3002\u200b\u5047\u8bbe\u200b\u5f53\u524d\u200b\u4e00\u4e2a\u200b\u6570\u200b\u90fd\u8fd8\u6ca1\u200b\u9009\u200b</p> <ul> <li>\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u6570\u200b n \u200b\u88ab\u200b\u9009\u200b\u4e86\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u4ece\u524d\u200b n - 1 \u200b\u4e2a\u6570\u200b\u4e2d\u9009\u200b k - 1 \u200b\u4e2a\u6570\u200b</li> <li>\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u6570\u200b n \u200b\u6ca1\u200b\u88ab\u200b\u9009\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u4ece\u524d\u200b n - 1 \u200b\u4e2a\u6570\u200b\u4e2d\u9009\u200b k \u200b\u4e2a\u6570\u200b</li> </ul> <pre><code>class Solution {\n    List&lt;List&lt;Integer&gt;&gt; ans;\n    public List&lt;List&lt;Integer&gt;&gt; combine(int n, int k) {\n        ans = new ArrayList&lt;&gt;();\n\n        dfs(n, k, new ArrayList&lt;&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int n, int k, List&lt;Integer&gt; temp) {\n        if(n &lt; 1) {\n            if(k == 0) {\n                ans.add(new ArrayList&lt;&gt;(temp));\n                return;\n            }\n            return;\n        }\n\n        dfs(n - 1, k, temp);\n\n        temp.add(n);\n        dfs(n - 1, k - 1, temp);\n        temp.remove(temp.size() - 1);\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#216-iii","title":"216. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b III","text":"<p>\u200b\u548c\u200b\u4e0a\u200b\u4e00\u9898\u200b\u4e00\u6837\u200b\uff0c\u200b\u540c\u6837\u200b\u8003\u8651\u200b\u5f53\u524d\u200b\u7684\u200b\u6570\u200b\u662f\u200b\u9009\u200b\u8fd8\u662f\u200b\u4e0d\u9009\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8fd9\u9898\u200b\u9012\u5f52\u200b\u7684\u200b\u7ec8\u6b62\u200b\u6761\u4ef6\u200b\u8981\u200b\u8003\u8651\u200b sum == n</p> <pre><code>class Solution {\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n    private boolean[] st;\n    private int n;\n    public List&lt;List&lt;Integer&gt;&gt; combinationSum3(int k, int n) {\n        this.ans = new ArrayList&lt;&gt;();\n        this.st = new boolean[10];\n        this.n = n;\n        dfs(k, 0, new ArrayList&lt;&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int k, int sum, List&lt;Integer&gt; temp) {\n        if(sum &gt; n) {\n            return;\n        }\n\n\n        if(k == 0 &amp;&amp; sum == n) {\n            ans.add(new ArrayList&lt;&gt;(temp));\n            return;\n        }\n\n        for(int i = 1; i &lt;= 9; i ++) {\n            if(!st[i] &amp;&amp; (temp.size() == 0 || temp.get(temp.size() - 1) &lt; i)) {\n                st[i] = true;\n                temp.add(i);\n                dfs(k - 1, sum + i, temp);\n                temp.remove(temp.size() - 1);\n                st[i] = false;\n            }        \n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#17","title":"17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408","text":"<p>\u200b\u9884\u5148\u200b\u5efa\u7acb\u200b\u6570\u5b57\u200b\u4e0e\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u6620\u5c04\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u9012\u5f52\u200b\uff0c\u200b\u4ece\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u9009\u51fa\u200b\u4e00\u4e2a\u200b\u6570\u200b\uff0c\u200b\u7ec4\u6210\u200b\u4e00\u4e2a\u200b\u7b54\u6848\u200b\u3002\u200b\u5728\u200b\u9012\u5f52\u200b\u56de\u6eaf\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53c8\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u5176\u4ed6\u200b\u7b54\u6848\u200b\u3002Java\u200b\u4f7f\u7528\u200bStringBuilder\u200b\u6765\u200b\u8fdb\u884c\u200b\u5b57\u7b26\u4e32\u200b\u62fc\u63a5\u200b\u6548\u7387\u200b\u80fd\u200b\u9ad8\u200b\u5f88\u591a\u200b\u3002</p> <p>StringBuilder \u200b\u62fc\u63a5\u200b\u5b57\u7b26\u4e32\u200b\u6bd4\u200b String \u200b\u9ad8\u6548\u200b\u7684\u200b\u539f\u56e0\u200b\uff1a</p> <p>String\u200b\u62fc\u63a5\u200b\uff1a</p> <ul> <li>String\u200b\u672c\u8eab\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\uff0c\u200b\u5f53\u8981\u200b\u5bf9\u200bString\u200b\u8fdb\u884c\u200b\u62fc\u63a5\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f1a\u200b\u91cd\u65b0\u200b new \u200b\u4e00\u4e2a\u200b String\uff0c\u200b\u628a\u200b\u539f\u6765\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u8981\u200b\u62fc\u63a5\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u653e\u5230\u200b\u8fd9\u4e2a\u200b\u65b0\u200bnew\u200b\u7684\u200bString\u200b\u91cc\u9762\u200b\uff0c\u200b\u8fd9\u6837\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u5927\u91cf\u200b\u7684\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u548c\u200b\u590d\u5236\u200b\u64cd\u4f5c\u200b</li> </ul> <p>StringBuilder\u200b\u62fc\u63a5\u200b\uff1a</p> <ul> <li>StringBuilder\u200b\u662f\u200b\u53ef\u53d8\u200b\u7684\u200b\uff0c\u200b\u5b83\u200b\u7ef4\u62a4\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5185\u90e8\u200b\u53ef\u53d8\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u9891\u7e41\u200b\u7684\u200b\u521b\u5efa\u200b\u65b0\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5927\u5927\u51cf\u5c11\u200b\u4e86\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u548c\u200b\u6570\u636e\u200b\u590d\u5236\u200b\u7684\u200b\u5f00\u9500\u200b</li> </ul> <pre><code>class Solution {\n    private static String[] map;\n    static {\n        map = new String[]{\"0\", \"1\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n    }\n\n    private List&lt;String&gt; ans;\n    private String digits;\n\n    public List&lt;String&gt; letterCombinations(String digits) {\n        this.digits = digits;\n        this.ans = new ArrayList&lt;&gt;();\n        dfs(0, new StringBuilder());    \n        return ans;\n    }\n\n    public void dfs(int i, StringBuilder str) {\n        if(i &gt;= digits.length()) {\n            if(str != null &amp;&amp; str.length() != 0) {\n                ans.add(str.toString());\n            }\n            return;\n        }\n\n        int num = digits.charAt(i) - '0';\n\n        for(char c : map[num].toCharArray()) {\n            str.append(c);\n            dfs(i + 1, str);\n            str.deleteCharAt(str.length() - 1);\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#39","title":"39. \u200b\u7ec4\u5408\u200b\u603b\u548c","text":"<p>\u200b\u9012\u5f52\u200b\u56de\u6eaf\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u4e00\u9897\u200b\u6811\u200b\uff0c\u200b\u8fd9\u9897\u200b\u6811\u200b\u7684\u200b\u5206\u652f\u200b\u6570\u200b\u548c\u200b candidates \u200b\u6570\u7ec4\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e00\u6837\u200b\uff0c\u200b\u6bcf\u200b\u9012\u5f52\u200b\u5230\u200b\u4e00\u5c42\u200b\u5c31\u200b\u4f1a\u200b\u6709\u200b candidates.length \u200b\u7684\u200b\u9009\u62e9\u200b\u673a\u4f1a\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4fdd\u8bc1\u200b\u9009\u51fa\u200b\u6765\u200b\u7684\u200b\u7ec4\u5408\u200b\u6ca1\u6709\u200b\u91cd\u590d\u200b\uff0c\u200b\u9996\u5148\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u6392\u5e8f\u200b\uff0c\u200b\u7136\u540e\u200b\u9009\u62e9\u200b\u7684\u200b\u65f6\u5019\u200b\u53ea\u200b\u9009\u62e9\u200b\u6bd4\u4e0a\u200b\u4e00\u4e2a\u200b\u6570\u5927\u200b\u7684\u200b\u6570\u200b\u3002\u200b\u4e3a\u4e86\u200b\u51cf\u5c11\u200b\u9012\u5f52\u200b\u6b21\u6570\u200b\uff0c\u200b\u8fdb\u884c\u200b\u526a\u679d\u200b\uff0c\u200b\u5f53\u200b\u76ee\u524d\u200b\u7d2f\u8ba1\u200b\u7684\u200b\u548c\u200b\u52a0\u4e0a\u200b\u9009\u4e2d\u200b\u7684\u200b canaidates[i] \u200b\u8981\u200b\u5927\u4e8e\u200b target \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u505c\u6b62\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>class Solution {\n    private int[] candidates;\n    private int target;\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n\n    public List&lt;List&lt;Integer&gt;&gt; combinationSum(int[] candidates, int target) {\n        this.candidates = candidates;\n        this.target = target;\n        this.ans = new ArrayList&lt;&gt;();\n\n        Arrays.sort(candidates);    \n\n        dfs(0, new ArrayList&lt;Integer&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int sum, List&lt;Integer&gt; temp) {\n        if(sum == target) {\n            ans.add(new ArrayList&lt;Integer&gt;(temp));\n            return;\n        }\n\n        for(int i = 0; i &lt; candidates.length; i ++) {\n            if(sum + candidates[i] &gt; target) {\n                break;\n            }\n\n            if(temp.size() == 0 || temp.get(temp.size() - 1) &lt;= candidates[i]) {\n                temp.add(candidates[i]);\n                dfs(sum + candidates[i], temp);\n                temp.removeLast();\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#40-ii","title":"40. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b II","text":"<p>\u200b\u6240\u6709\u200b\u7684\u200b\u4faf\u9009\u6570\u200b\u4e2d\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u4e14\u200b\u5728\u200b\u4e00\u79cd\u200b\u7ec4\u5408\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u7684\u200b\u6570\u200b\u53ea\u80fd\u200b\u9009\u200b\u4e00\u6b21\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5982\u4f55\u200b\u9009\u51fa\u200b\u548c\u200b\u4e3a\u200b target \u200b\u7684\u200b\u7ec4\u5408\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u4e00\u4ef6\u200b\u96be\u4e8b\u200b\uff0c\u200b\u5173\u952e\u5728\u4e8e\u200b\u53bb\u200b\u91cd\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u9012\u5f52\u200b\u9009\u6570\u200b\u7684\u200b\u65b9\u5f0f\u200b\u9009\u51fa\u200b\u4e00\u4e2a\u200b\u548c\u200b\u4e3a\u200b target \u200b\u7684\u200b\u7ec4\u5408\u200b\uff0c\u200b\u9012\u5f52\u200b\u7684\u200b\u7ec8\u6b62\u200b\u6761\u4ef6\u200b\u5c31\u662f\u200b\u5224\u65ad\u200b\u548c\u200b\u662f\u5426\u200b\u7b49\u4e8e\u200b target\u3002\u200b\u5173\u4e8e\u200b\u53bb\u200b\u91cd\u6709\u200b\u4e24\u4e2a\u200b\u5173\u952e\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u9996\u5148\u200b\u5728\u200b\u9012\u5f52\u200b\u53c2\u6570\u200b\u4e2d\u200b\u52a0\u5165\u200b\u5f53\u524d\u200b\u7ec4\u5408\u200b\uff0c\u200b\u8003\u8651\u200b\u9012\u5f52\u200b\u5f00\u59cb\u200b\u7684\u200b\u6570\u7ec4\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u907f\u514d\u200b\u9009\u5230\u200b\u5f00\u59cb\u200b\u6570\u200b\u4e4b\u524d\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u91cd\u590d\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u8fde\u7eed\u200b\u4e00\u6bb5\u200b\u76f8\u540c\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u5728\u200b\u9012\u5f52\u200b\u8fd9\u6bb5\u200b\u6570\u200b\u7684\u200b\u5f00\u5934\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u65f6\u200b\uff0c\u200b\u5176\u5b9e\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u6570\u200b\u53ef\u80fd\u200b\u7684\u200b\u7b54\u6848\u200b\u5168\u90e8\u200b\u904d\u5386\u200b\u5b8c\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5bf9\u4e8e\u200b\u540e\u9762\u200b\u7684\u200b\u6570\u200b\u76f4\u63a5\u200b\u8df3\u8fc7\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u9009\u51fa\u200b\u91cd\u590d\u200b\u7684\u200b\u7ec4\u5408\u200b</li> </ul> <pre><code>class Solution {\n    private int[] candidates;\n    private int target;\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n    public List&lt;List&lt;Integer&gt;&gt; combinationSum2(int[] candidates, int target) {\n        this.candidates = candidates;\n        this.target = target;\n        this.ans = new ArrayList&lt;&gt;();    \n\n        Arrays.sort(candidates);\n\n        dfs(0, 0, new ArrayList&lt;Integer&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int index, int sum, List&lt;Integer&gt; temp) {\n\n        if(sum == target) {\n            ans.add(new ArrayList&lt;Integer&gt;(temp));\n            return;\n        }\n\n        for(int i = index; i &lt; candidates.length; i ++) {\n            if(sum + candidates[i] &gt; target) {\n                break;\n            }\n\n\n            temp.add(candidates[i]);\n            dfs(i + 1, sum + candidates[i], temp);\n            temp.removeLast();\n\n\n            int j = i;\n            while(j &lt; candidates.length &amp;&amp; candidates[j] == candidates[i]) j ++;\n            i = j - 1;\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#131","title":"131. \u200b\u5206\u5272\u200b\u56de\u6587\u200b\u4e32","text":"<p>\u200b\u9884\u5904\u7406\u200b\u51fa\u200b\u4e00\u4e2a\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u5224\u65ad\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\u662f\u5426\u662f\u200b\u56de\u6587\u200b\uff0c\u200b\u8fdb\u884c\u200b\u9012\u5f52\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u9009\u4e2d\u200b\u7684\u200b\u533a\u95f4\u200b\u662f\u5426\u662f\u200b\u56de\u6587\u200b\uff0c\u200b\u5982\u4f55\u200b\u662f\u200b\u56de\u6587\u200b\u5c31\u200b\u9012\u5f52\u200b\u5230\u200b\u4e0b\u200b\u4e00\u5c42\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u662f\u200b\u5c31\u200b\u56de\u6eaf\u5230\u200b\u4e0a\u200b\u4e00\u5c42\u200b\u3002</p> <pre><code>class Solution {\n    private boolean[][] ishui;\n    private int n;\n    private List&lt;List&lt;String&gt;&gt; ans;\n    private String s;\n\n    public List&lt;List&lt;String&gt;&gt; partition(String s) {\n        this.s = s;\n        this.n = s.length();\n        this.ishui = new boolean[n][n];\n        this.ans = new ArrayList&lt;&gt;();\n\n        for(int i = n - 1; i &gt;= 0; i --) {\n            for(int j = i; j &lt; n; j ++) {\n                if(i == j) {\n                    ishui[i][j] = true;\n                } else if(j == i + 1) {\n                    ishui[i][j] = s.charAt(i) == s.charAt(j);\n                } else {\n                    ishui[i][j] = ishui[i + 1][j - 1] &amp;&amp; (s.charAt(i) == s.charAt(j));\n                }\n            }\n        }\n\n        dfs(0, new ArrayList&lt;String&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int i, List&lt;String&gt; temp) {\n        if(i &gt;= n) {\n            ans.add(new ArrayList&lt;&gt;(temp));\n            return;\n        }\n        for(int j = i; j &lt; n; j ++) {\n            if(ishui[i][j]) {\n                temp.add(s.substring(i, j + 1));\n                dfs(j + 1, temp);\n                temp.removeLast();\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#93-ip","title":"93. \u200b\u590d\u539f\u200b IP \u200b\u5730\u5740","text":"<p>\u200b\u9012\u5f52\u200b\u5904\u7406\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u9009\u4e2d\u200b\u7684\u200b\u6570\u200b\u7b26\u5408\u200b\u5927\u5c0f\u200b\u533a\u95f4\u200b\u8981\u6c42\u200b\uff0c\u200b\u5219\u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u5e76\u200b\u9012\u5f52\u200b\u5230\u200b\u4e0b\u200b\u4e00\u5c42\u200b\u3002\u200b\u5982\u679c\u200b\u6700\u540e\u200b\u9009\u200b\u4e86\u200b4\u200b\u4e2a\u6570\u200b\uff0c\u200b\u5e76\u4e14\u200b\u628a\u200b\u6574\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u90fd\u200b\u9009\u5b8c\u200b\u4e86\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u8bb0\u5f55\u200b\u8be5\u200b\u5408\u6cd5\u200bip\u200b\u5730\u5740\u200b\u3002\u200b\u9047\u5230\u200b0\u200b\u65f6\u8981\u200b\u7279\u5224\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u51fa\u73b0\u200b\u524d\u5bfc\u200b0\u3002</p> <pre><code>class Solution {\n    private int n;\n    private String s;\n    private List&lt;String&gt; ans;\n\n    public List&lt;String&gt; restoreIpAddresses(String s) {\n        this.n = s.length();\n        this.s = s;\n        this.ans = new ArrayList&lt;&gt;();\n\n        dfs(0, new ArrayList&lt;String&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int i, List&lt;String&gt; temp) {\n        if(i &gt;= n &amp;&amp; temp.size() == 4) {\n            StringBuilder sb = new StringBuilder();\n\n            for(int j = 0; j &lt; 4; j ++) {\n                sb.append(temp.get(j));\n                if(j != 3) {\n                    sb.append(\".\");\n                }\n            }\n\n            ans.add(sb.toString());\n            return;\n        }\n\n        for(int j = i; j &lt; n &amp;&amp; j &lt; i + 3; j ++) {\n            String subStr = s.substring(i, j + 1);\n            int num = Integer.parseInt(subStr);\n\n            if(num &gt;= 0 &amp;&amp; num &lt;= 255) {\n                temp.add(new String(subStr));\n                dfs(j + 1, temp);\n                temp.removeLast();\n            }\n\n            if(num == 0) {\n                break;\n            }\n\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#78","title":"78. \u200b\u5b50\u96c6","text":"<p>\u200b\u4ece\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5206\u522b\u200b\u9009\u51fa\u200b\u957f\u5ea6\u200b\u4e3a\u200b 0 \u200b\u5230\u200b nums.length \u200b\u957f\u5ea6\u200b\u7684\u200b\u5b50\u96c6\u200b</p> <pre><code>class Solution {\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n    private int[] nums;\n\n    public List&lt;List&lt;Integer&gt;&gt; subsets(int[] nums) {\n        this.ans = new ArrayList&lt;&gt;();\n        this.nums = nums;\n\n        ans.add(new ArrayList&lt;&gt;()); \n\n        for(int k = 1; k &lt;= nums.length; k ++) {\n            dfs(0, k, new ArrayList&lt;&gt;());\n        }\n\n        return ans;\n    }\n\n    public void dfs(int i, int k, List&lt;Integer&gt; temp) {\n        if(k == 0) {\n            ans.add(new ArrayList&lt;&gt;(temp));\n            return;\n        }\n\n        for(int j = i; j &lt; nums.length; j ++) {\n            temp.add(nums[j]);\n            dfs(j + 1, k - 1, temp);\n            temp.removeLast();\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#90-ii","title":"90. \u200b\u5b50\u96c6\u200b II","text":"<p>\u200b\u8fd9\u4e00\u9898\u200b\u5bf9\u4e8e\u200b\u4e0a\u200b\u4e00\u9898\u200b\u6765\u8bf4\u200b\u5c31\u662f\u200b\u591a\u52a0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6761\u4ef6\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6392\u5e8f\u200b\u6765\u200b\u907f\u514d\u200b\u9009\u62e9\u200b\u91cd\u590d\u200b\u7684\u200b\u5b50\u96c6\u200b\u3002</p> <pre><code>class Solution {\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n    private int[] nums;\n\n    public List&lt;List&lt;Integer&gt;&gt; subsetsWithDup(int[] nums) {\n        this.ans = new ArrayList&lt;&gt;();\n        this.nums = nums;\n\n        ans.add(new ArrayList&lt;&gt;()); \n\n        Arrays.sort(nums);\n\n        for(int k = 1; k &lt;= nums.length; k ++) {\n            dfs(0, k, new ArrayList&lt;&gt;());\n        }\n\n        return ans;\n    }\n\n    public void dfs(int i, int k, List&lt;Integer&gt; temp) {\n        if(k == 0) {\n            ans.add(new ArrayList&lt;&gt;(temp));\n            return;\n        }\n\n        for(int j = i; j &lt; nums.length; j ++) {\n            temp.add(nums[j]);\n            dfs(j + 1, k - 1, temp);\n            temp.removeLast();\n\n            int ahead = j;\n            while(ahead &lt; nums.length &amp;&amp; nums[ahead] == nums[j]) ahead ++;\n            j = ahead - 1;\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#491","title":"491. \u200b\u975e\u200b\u9012\u51cf\u200b\u5b50\u200b\u5e8f\u5217","text":"<p>\u200b\u65e0\u6cd5\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b\u8df3\u8fc7\u200b\u4e00\u6bb5\u200b\u8fde\u7eed\u200b\u7684\u200b\u6570\u6765\u200b\u53bb\u200b\u91cd\u200b\uff0c\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200bset\u200b\u6765\u200b\u8fdb\u884c\u200b\u53bb\u200b\u91cd\u200b\u3002</p> <pre><code>class Solution {\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n    private int[] nums;\n    private int n;\n    private Set&lt;List&lt;Integer&gt;&gt; set;\n\n    public List&lt;List&lt;Integer&gt;&gt; findSubsequences(int[] nums) {\n        this.ans = new ArrayList&lt;&gt;();\n        this.nums = nums;\n        this.n = nums.length;\n        this.set = new HashSet&lt;&gt;();\n\n        dfs(0, new ArrayList&lt;&gt;());\n\n        return ans;\n    }\n\n    public void dfs(int i, List&lt;Integer&gt; temp) {\n        if(temp.size() &gt;= 2) {\n            if(!set.contains(temp)) {\n                ans.add(new ArrayList&lt;&gt;(temp));\n                set.add(new ArrayList&lt;&gt;(temp));\n            }\n        }\n\n        for(int j = i; j &lt; n; j ++) {\n            if(temp.size() == 0 || (nums[j] &gt;= temp.get(temp.size() - 1))) {\n                temp.add(nums[j]);\n                dfs(j + 1, temp);\n                temp.removeLast();\n            }\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#46","title":"46. \u200b\u5168\u200b\u6392\u5217","text":"<p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b boolean st \u200b\u6570\u7ec4\u200b\u8bb0\u5f55\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u662f\u5426\u200b\u88ab\u200b\u9009\u4e2d\u200b\uff0c\u200b\u4e00\u5c42\u5c42\u200b\u9012\u5f52\u200b\uff0c\u200b\u9012\u5f52\u200b\u7684\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u90fd\u200b\u9009\u200b\u4e00\u4e2a\u200b\u6570\u200b\u6807\u8bb0\u200b\u5bf9\u5e94\u200b\u4f4d\u7f6e\u200b\u7684\u200bst\u200b\u503c\u4e3a\u200btrue</p> <pre><code>class Solution {\n    private int[] nums;\n    private int n;\n    private List&lt;List&lt;Integer&gt;&gt; ans;\n    private boolean[] st;\n\n    public List&lt;List&lt;Integer&gt;&gt; permute(int[] nums) {\n        this.nums = nums;\n        this.n = nums.length;\n        this.ans = new ArrayList&lt;&gt;();\n        this.st = new boolean[n];\n\n        dfs(new ArrayList&lt;Integer&gt;());\n\n        return ans;\n    }\n\n    public void dfs(List&lt;Integer&gt; temp) {\n\n        if(temp.size() == n) {\n            ans.add(new ArrayList&lt;&gt;(temp));\n            return;\n        }\n\n        for(int i = 0; i &lt; n; i ++) {\n            if(!st[i]) {\n                st[i] = true;\n                temp.add(nums[i]);\n                dfs(temp);\n                temp.removeLast();\n                st[i] = false; \n            }    \n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#51-n","title":"51. N \u200b\u7687\u540e","text":"<p>N\u200b\u7687\u540e\u200b\u6bd4\u200b\u5176\u4ed6\u200b\u56de\u6eaf\u200b\u8981\u200b\u591a\u52a0\u200b\u4e24\u4e2a\u200b\u6807\u8bb0\u200b\uff0c\u200b\u5206\u522b\u200b\u4e3a\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u6240\u5904\u200b\u7684\u200b\u6b63\u200b\u5bf9\u89d2\u7ebf\u200b\u548c\u200b\u53cd\u200b\u5bf9\u89d2\u7ebf\u200b\u662f\u5426\u200b\u6709\u200b\u7687\u540e\u200b\u3002\u200b\u9012\u5f52\u200b\u7684\u200b\u53c2\u6570\u200b\u4e3a\u200b\u5f53\u524d\u200b\u5904\u4e8e\u200b\u54ea\u200b\u4e00\u5c42\u200b\uff0c\u200b\u5f53\u524d\u200b\u5c42\u9009\u200b\u5b8c\u200b\u7687\u540e\u200b\u9012\u5f52\u200b\u5230\u200b\u4e0b\u200b\u4e00\u5c42\u200b\u3002</p> <pre><code>class Solution {\n    private char[][] ma;\n    private int n;\n    private boolean[] st, st1, st2;\n    private List&lt;List&lt;String&gt;&gt; ans;\n\n    public List&lt;List&lt;String&gt;&gt; solveNQueens(int n) {\n        this.ma = new char[n][n];\n        this.n = n;\n        this.ans = new ArrayList&lt;&gt;();\n        this.st = new boolean[n];\n        this.st1 = new boolean[2 * n];\n        this.st2 = new boolean[2 * n];\n\n        for(int i = 0; i &lt; n; i ++) {\n            for(int j = 0; j &lt; n; j ++) {\n                ma[i][j] = '.';\n            }\n        }\n\n        dfs(0);\n\n        return ans;\n    }\n\n    public void dfs(int i) {\n        if(i &gt;= n) {\n            List&lt;String&gt; temp = new ArrayList&lt;&gt;();\n            for(int j = 0; j &lt; n; j ++) {\n                temp.add(new String(ma[j]));\n            }\n            ans.add(temp);\n            return;\n        }\n\n        for(int j = 0; j &lt; n; j ++) {\n            if(!st[j] &amp;&amp; !st1[i - j + n] &amp;&amp; !st2[i + j]) {\n                st[j] = st1[i - j + n] = st2[i + j] = true;\n                ma[i][j] = 'Q';\n                dfs(i + 1);\n                ma[i][j] = '.';\n                st[j] = st1[i - j + n] = st2[i + j] = false;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/#37","title":"37. \u200b\u89e3\u6570\u200b\u72ec","text":"<p>\u200b\u53ea\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u7b54\u6848\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e00\u65e6\u200b\u627e\u5230\u200b\u7b54\u6848\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5230\u200b\u539f\u70b9\u200b</p> <pre><code>class Solution {\n    private char[][] board;\n    private boolean found;\n\n    public void solveSudoku(char[][] board) {\n        this.board = board;\n        this.found = false;\n        dfs();\n    }\n\n    public void dfs() {\n\n        if(found) {\n            return;\n        }\n\n        int row = -1, col = -1;\n\n        for(int i = 0; i &lt; 9 &amp;&amp; row == -1; i ++) {\n            for(int j = 0; j &lt; 9; j ++) {\n                if(board[i][j] == '.') {\n                    row = i;\n                    col = j;\n                    break;\n                }\n            }\n        }\n\n        if(row == -1) {\n            found = true;\n            return;\n        }\n\n        for(char c = '1'; c &lt;= '9'; c ++) {\n            if(check(row, col, c)) {\n                board[row][col] = c;\n                dfs();\n                if(found) return;\n                board[row][col] = '.';\n            }\n        }\n\n\n    }\n\n    public boolean check(int i, int j, char c) {\n        for(int k = 0; k &lt; 9; k ++) {\n            if(board[i][k] == c) {\n                return false;\n            } \n\n            if(board[k][j] == c) {\n                return false;\n            }\n        }\n\n        int im = i % 3, jm = j % 3;\n\n        for(int q = i - im; q &lt; i - im + 3; q ++) {\n            for(int p = j - jm; p &lt; j - jm + 3; p ++) {\n                if(board[q][p] == c) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u5b57\u7b26\u4e32","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#344","title":"344. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u4e0e\u5176\u8bf4\u662f\u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\u4e0d\u5982\u8bf4\u662f\u200b\u53cd\u8f6c\u200b\u6570\u7ec4\u200b</p> <pre><code>class Solution {\n    public void reverseString(char[] s) {\n        int l = 0, r = s.length - 1;\n\n        while(l &lt; r) {\n            char t = s[l];\n            s[l] = s[r];\n            s[r] = t;\n            l ++;\n            r --;\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#541-ii","title":"541. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b II","text":"<p>\u200b\u628a\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5b57\u7b26\u200b\u6570\u7ec4\u200b\u4e4b\u540e\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u65f6\u95f4\u200b\u6548\u7387\u9ad8\u200b\u800c\u4e14\u200b\u64cd\u4f5c\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u5957\u7528\u200b\u4e0a\u200b\u4e00\u9898\u200b\u7684\u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\u628a\u200b\u90e8\u5206\u200b\u5b57\u7b26\u4e32\u200b\u53cd\u8f6c\u200b\u3002</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public String reverseStr(String s, int k) {\n        int n = s.length();\n\n        char[] chrs = s.toCharArray();\n\n        for(int i = 0; i &lt; n; i += 2 * k) {\n            subReverse(chrs, i, Math.min(i + k, n) - 1);\n        } \n\n        return new String(chrs);\n    }\n\n    public void subReverse(char[] s, int l, int r) {\n        while(l &lt; r) {\n            char t = s[l];\n            s[l] = s[r];\n            s[r] = t;\n            l ++;\n            r --;\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","title":"\u66ff\u6362\u200b\u6570\u5b57\u200b\uff08\u200b\u7b2c\u516b\u671f\u200b\u6a21\u62df\u200b\u7b14\u8bd5\u200b\uff09","text":"<pre><code>import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        String s = br.readLine();\n\n        StringBuilder ans = new StringBuilder();\n\n        for(char c : s.toCharArray()) {\n            if(c &gt;= '0' &amp;&amp; c &lt;= '9') {\n                ans.append(\"number\");\n            } else {\n                ans.append(c);\n            }\n        }\n\n        for(char c : ans.toString().toCharArray()) {\n            bw.write(c);\n        }\n\n        bw.flush();\n        br.close();\n        bw.close();\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#151","title":"151. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u5355\u8bcd","text":"<p>\u200b\u628a\u200b\u5355\u8bcd\u200b\u5168\u90e8\u200b\u653e\u5230\u200b\u4e00\u4e2a\u200b \\(List&lt;String&gt;\\) \u200b\u4e2d\u200b\u7136\u540e\u200b\u5012\u5e8f\u200b\u653e\u5165\u200b \\(StringBuilder\\) \u200b\u6700\u540e\u200b\u8f6c\u200b\u6210\u200b \\(String\\)</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public String reverseWords(String s) {\n        int n = s.length();\n\n        List&lt;String&gt; collectWords = new ArrayList&lt;&gt;();\n\n        for(int i = 0; i &lt; n; i ++) {\n            while(i &lt; n &amp;&amp; s.charAt(i) == ' ') i ++;\n\n            if(i &gt;= n) {\n                break;\n            }\n\n            StringBuilder temp = new StringBuilder();\n            while(i &lt; n &amp;&amp; s.charAt(i) != ' ') {\n                temp.append(s.charAt(i));\n                i ++;\n            }\n\n            collectWords.add(temp.toString());\n        }\n\n        StringBuilder ans = new StringBuilder();\n\n        for(int i = collectWords.size() - 1; i &gt;= 0; i --) {\n            ans.append(collectWords.get(i));\n            if(i &gt; 0) ans.append(\" \");\n        }\n\n        return ans.toString();\n    }\n}\n</code></pre> <p>\u200b\u628a\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5b57\u7b26\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public String reverseWords(String s) {\n        char[] chrs = s.toCharArray();\n\n        int slow = 0;\n\n        for(int i = 0; i &lt; chrs.length; i ++) {\n            if(chrs[i] != ' ') {\n                if(slow != 0) {\n                    chrs[slow ++] = ' ';\n                }\n                while(i &lt; chrs.length &amp;&amp; chrs[i] != ' ') chrs[slow ++] = chrs[i ++];\n            }\n        }\n\n        chrs = Arrays.copyOf(chrs, slow);\n\n        reverseStr(chrs, 0, chrs.length - 1);\n\n        for(int i = 0; i &lt; chrs.length; i ++) {\n            int j = i;\n            while(j &lt; chrs.length &amp;&amp; chrs[j] != ' ') j ++;\n            reverseStr(chrs, i, j - 1);\n            i = j;\n        }\n\n        return new String(chrs);\n    }\n\n    private void reverseStr(char[] chrs, int l, int r) {\n        while(l &lt; r) {\n            char t = chrs[l];\n            chrs[l] = chrs[r];\n            chrs[r] = t;\n            l ++;\n            r --;\n        } \n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#55","title":"55. \u200b\u53f3\u65cb\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u501f\u52a9\u200b\u989d\u5916\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u5148\u200b\u628a\u200b\u540e\u534a\u6bb5\u200b\u653e\u200b\u4e00\u4e2a\u200bStringBuilder\u200b\u91cc\u9762\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u628a\u200b\u524d\u534a\u6bb5\u200b\u653e\u8fdb\u53bb\u200b\uff0c\u200b\u6700\u540e\u200b\u8f6c\u5316\u200b\u4e3a\u200bString</p> <pre><code>import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int k = sc.nextInt();\n\n        sc.nextLine();\n        String str = sc.nextLine();\n\n\n        StringBuilder sb = new StringBuilder();\n\n        for(int i = str.length() - k; i &lt; str.length(); i ++) {\n            sb.append(str.charAt(i));\n        }\n\n        for(int i = 0; i &lt; str.length() - k; i ++) {\n            sb.append(str.charAt(i));\n        }\n\n        System.out.println(sb.toString());\n    }\n}\n</code></pre> <p>\u200b\u5982\u679c\u200b\u7ed9\u200b\u7684\u200b\u662f\u200b\u4e00\u4e2a\u200bchar[] \u200b\u6570\u7ec4\u200b\uff0c\u200b\u90a3\u4e48\u200bJava\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e0d\u7528\u200b\u501f\u52a9\u200b\u989d\u5916\u200b\u7684\u200b\u7a7a\u95f4\u200b\u3002\u200b\u9996\u5148\u200b\u53cd\u8f6c\u200b\u6574\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u7136\u540e\u200b\u628a\u200b\u524d\u200b \\(k\\) \u200b\u4e2a\u5b57\u7b26\u200b\u53cd\u8f6c\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b\u5269\u4f59\u200b\u7684\u200b\u5b57\u7b26\u200b\u53cd\u8f6c\u200b\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u5c31\u662f\u200b\u53f3\u65cb\u200b\u5b57\u7b26\u4e32\u200b\u3002</p> <pre><code>import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int k = sc.nextInt();\n\n        sc.nextLine();\n        String str = sc.nextLine();\n\n        char[] charStr = str.toCharArray();\n\n        reverseStr(charStr, 0, str.length() - 1);\n\n        reverseStr(charStr, 0, k - 1);\n\n        reverseStr(charStr, k, str.length() - 1);\n\n        System.out.println(new String(charStr));\n    }\n\n    private static void reverseStr(char[] s, int l, int r) {\n        while(l &lt; r){\n            char t = s[l];\n            s[l] = s[r];\n            s[r] = t;\n            l ++;\n            r --;\n        } \n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#28","title":"28. \u200b\u627e\u51fa\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7b2c\u4e00\u4e2a\u200b\u5339\u914d\u200b\u9879\u200b\u7684\u200b\u4e0b\u6807","text":"<p>KMP \u200b\u7b97\u6cd5\u200b</p> <pre><code>class Solution {\n    public int strStr(String haystack, String needle) {\n        int n = needle.length();\n        int[] next = new int[n];\n        next[0] = -1;\n\n        for(int i = 1, j = -1; i &lt; n; i ++) {\n            while(j != -1 &amp;&amp; needle.charAt(j + 1) != needle.charAt(i)) j = next[j];\n            if(needle.charAt(j + 1) == needle.charAt(i)) j ++;\n            next[i] = j;\n        }\n\n        for(int i = 0, j = -1; i &lt; haystack.length(); i ++) {\n            while(j != -1 &amp;&amp; needle.charAt(j + 1) != haystack.charAt(i)) j = next[j];\n            if(needle.charAt(j + 1) == haystack.charAt(i)) j ++;\n            if(j == n - 1) {\n                return i - n + 1;\n            }\n        }\n        return -1;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/#459","title":"459. \u200b\u91cd\u590d\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u5b58\u5728\u200b\u5faa\u73af\u200b\u8282\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e2a\u200b\u5faa\u73af\u200b\u8282\u200b\u7684\u200b\u957f\u5ea6\u200b\u5c31\u662f\u200b n - next[n] - 1</p> <pre><code>class Solution {\n    public boolean repeatedSubstringPattern(String s) {\n        int n = s.length();\n\n        int[] next = new int[n];\n        next[0] = -1;\n\n        for(int i = 1, j = -1; i &lt; n; i ++) {\n            while(j != -1 &amp;&amp; s.charAt(j + 1) != s.charAt(i)) j = next[j];\n            if(s.charAt(j + 1) == s.charAt(i)) j ++;\n            next[i] = j;\n        }\n\n        int k = n - next[n - 1] - 1;\n\n        return n % k == 0 &amp;&amp; k != n;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/","title":"\u6570\u7ec4","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#1","title":"1.\u200b\u6570\u7ec4\u200b\u7406\u8bba\u200b\u57fa\u7840","text":"<p>\u200b\u6570\u7ec4\u200b\u5b9a\u4e49\u200b\uff1a\u200b\u6570\u7ec4\u200b\u662f\u200b\u5b58\u653e\u200b\u5728\u200b\u8fde\u7eed\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u4e0a\u200b\u7684\u200b\u76f8\u540c\u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p> <p>\u200b\u5728\u200bJava\u200b\u4e2d\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u62c6\u200b\u5206\u6210\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b\uff08\u200b\u6570\u7ec4\u540d\u200b\uff09\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u6570\u7ec4\u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u636e\u200b\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#_1","title":"\u4e00\u7ef4\u200b\u6570\u7ec4","text":"<p>\u200b\u5728\u200bJava\u200b\u4e2d\u200b\u901a\u8fc7\u200b\u4e0b\u9762\u200b\u7684\u200b\u8bed\u53e5\u200b\u521d\u59cb\u5316\u200b\u6570\u7ec4\u200b</p> <pre><code>int[] arr = new int[n];\n</code></pre> <p>\u200b\u5728\u200b\u4e0a\u9762\u200b\u8fd9\u200b\u6bb5\u200b\u8bed\u53e5\u200b\u4e2d\u200b\uff0cnew \u200b\u64cd\u4f5c\u200b\u4ece\u5806\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7533\u8bf7\u200b\u4e86\u200b n \u200b\u4e2a\u200b int \u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u8fde\u7eed\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8ba9\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b arr \u200b\u6307\u5411\u200b\u8fd9\u6bb5\u200b\u5806\u200b\u7a7a\u95f4\u200b\uff08arr\u200b\u5b58\u50a8\u200b\u4e86\u200b\u8fd9\u6bb5\u200b\u5806\u200b\u7a7a\u95f4\u200b\u7684\u200b\u9996\u200b\u5730\u5740\u200b\uff09\u3002arr \u200b\u5f15\u7528\u200b\u672c\u8eab\u200b\u5219\u200b\u5b58\u50a8\u200b\u5728\u200b\u6808\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u5f53\u200b\u4f60\u200b\u5c06\u200b arr \u200b\u6570\u7ec4\u200b\u76f4\u63a5\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u65f6\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>int[] otherArr = arr\n</code></pre> <p>\u200b\u4ec5\u4ec5\u200b\u662f\u200b\u8ba9\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b otherArr \u200b\u6307\u5411\u200b arr \u200b\u6240\u200b\u6307\u5411\u200b\u7684\u200b\u5806\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5e76\u200b\u6ca1\u6709\u200b\u4ea7\u751f\u200b\u65b0\u200b\u7684\u200b\u6570\u7ec4\u200b\u3002\u200b\u6240\u4ee5\u200b\u5728\u200b\u540e\u9762\u200b\u5982\u679c\u200b\u4fee\u6539\u200b\u4e86\u200botherArr \u200b\u7684\u200b\u503c\u200b\uff0carr \u200b\u4e5f\u200b\u4f1a\u200b\u8ddf\u7740\u200b\u4e00\u8d77\u200b\u53d8\u52a8\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#_2","title":"\u4e8c\u7ef4\u200b\u6570\u7ec4","text":"<p>\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u89c6\u4f5c\u200b \"\u200b\u6570\u7ec4\u200b\u7684\u200b\u6570\u7ec4\u200b\"\uff0c\u200b\u5373\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u8bed\u53e5\u200b\u4e3a\u200b</p> <pre><code>int[][] arr2 = new int[n][m];\n</code></pre> <p>\u200b\u6b64\u65f6\u200barr2\u200b\u4f5c\u4e3a\u200b\u6570\u7ec4\u200b\u7684\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b\u5b58\u50a8\u200b\u5728\u200b\u6808\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u800c\u200b\u5176\u4e2d\u200b\u7684\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u5143\u7d20\u200b arr2[i] \u200b\u5219\u200b\u5b58\u50a8\u200b\u5728\u200b\u6808\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u540c\u65f6\u200b arr2[i] \u200b\u4e5f\u200b\u4f5c\u4e3a\u200b\u5f15\u7528\u200b\u53d8\u91cf\u200b\u5b58\u50a8\u200b\u7740\u200b\u7b2c\u200b i \u200b\u884c\u200b\u6570\u7ec4\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u8fd9\u200b\u4e00\u90e8\u5206\u200b\u5b9e\u9645\u200b\u7684\u200b\u6570\u636e\u200b\u4e5f\u200b\u5b58\u50a8\u200b\u5728\u200b\u5806\u200b\u5185\u5b58\u200b\u4e2d\u200b\u3002\u200b\u5b58\u50a8\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\u56fe\u200b\uff1a</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#2","title":"2.\u200b\u4e8c\u5206\u200b\u67e5\u627e","text":"<p>\u200b\u5728\u200b\u4e00\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e0a\u200b\u7684\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b4\u200b\u4e2d\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>\u200b\u5bfb\u627e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u200b</li> <li>\u200b\u5bfb\u627e\u200b\u5927\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u200b        \uff08\u200b\u7528\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b9e\u73b0\u200b: \\(\\ge (x + 1)\\) )</li> <li>\u200b\u5bfb\u627e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b  \uff08\u200b\u7528\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b9e\u73b0\u200b: \\((\\ge (x + 1)) - 1\\) )</li> <li>\u200b\u5bfb\u627e\u200b\u5c0f\u4e8e\u200b \\(x\\) \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b    \uff08\u200b\u7528\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b9e\u73b0\u200b: \\((\\ge x) - 1\\) )</li> </ul> <p>\u200b\u5728\u6211\u770b\u6765\u200b\uff0c\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u67e5\u627e\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u6570\u200b\uff0c\u200b\u548c\u200b\u67e5\u627e\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u6700\u200b\u53f3\u8fb9\u200b\u7684\u200b\u6570\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#_3","title":"\u9898\u76ee","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#704","title":"704. \u200b\u4e8c\u5206\u200b\u67e5\u627e","text":"<pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        int left = 0, right = nums.length;\n\n        while(left &lt; right) {\n            int mid = left + (right - left) / 2;\n            if(nums[mid] &gt;= target) right = mid;\n            else left = mid + 1;\n        }\n\n        if(left == nums.length) return -1;\n\n        return nums[left] == target ? left : -1;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#35","title":"35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e","text":"<p>\u200b\u5de6\u95ed\u200b\u53f3\u200b\u5f00\u533a\u95f4\u200b\uff0c\u200b\u67e5\u627e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(target\\) \u200b\u7684\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u4f4d\u7f6e\u200b</p> <pre><code>class Solution {\n    public int searchInsert(int[] nums, int target) {\n        int l = 0, r = nums.length;\n        while(l &lt; r) {\n            int mid = l + (r - l) / 2;\n            if(nums[mid] &gt;= target) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#34","title":"34. \u200b\u5728\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u67e5\u627e\u200b\u5143\u7d20\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u548c\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e","text":"<p>\u200b\u67e5\u627e\u200b \\(target\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u7528\u200b \u200b\u5de6\u95ed\u200b\u53f3\u5f00\u200b \u200b\u533a\u95f4\u200b\uff0c\u200b\u800c\u200b\u67e5\u627e\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u67e5\u627e\u200b \\(target + 1\\) \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u518d\u200b\u51cf\u53bb\u200b \\(1\\) \u3002</p> <pre><code>class Solution {\n\n    int lower_bound(int[] nums, int target) {\n        int l = 0, r = nums.length;\n        while(l &lt; r) {\n            int mid = l + (r - l) / 2;\n            if(nums[mid] &gt;= target) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n\n    public int[] searchRange(int[] nums, int target) {\n        int leftIndex = lower_bound(nums, target);\n        if(leftIndex == nums.length || nums[leftIndex] != target) {\n            return new int[]{-1, -1};\n        }\n        int rightIndex = lower_bound(nums, target + 1) - 1;\n        return new int[]{leftIndex, rightIndex};\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#69-x","title":"69. x \u200b\u7684\u200b\u5e73\u65b9\u6839","text":"<p>\u200b\u56e0\u4e3a\u200b\u8981\u6c42\u200b\u67e5\u627e\u200b\u51fa\u6765\u200b\u7684\u200b\u5e73\u65b9\u6839\u200b\u662f\u200b\u7b97\u6570\u200b\u5e73\u65b9\u6839\u200b\u5411\u4e0b\u200b\u53d6\u6574\u200b\uff0c\u200b\u6240\u4ee5\u200b\u60c5\u51b5\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u4e24\u79cd\u200b</p> <ul> <li>\u200b\u5982\u679c\u200b \\(x\\) \u200b\u662f\u200b\u5b8c\u5168\u200b\u5e73\u65b9\u200b\u6570\u200b\u7684\u8bdd\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5230\u200b\u7684\u200b\u4e2d\u70b9\u200b \\(mid\\) \u200b\u6ee1\u8db3\u200b\\(mid * mid = x\\)</li> <li>\u200b\u5982\u679c\u200b \\(x\\) \u200b\u4e0d\u662f\u200b\u5b8c\u5168\u200b\u5e73\u65b9\u200b\u6570\u200b\u7684\u8bdd\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6709\u200b \\(mid * mid &lt; x\\)</li> </ul> <p>\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u5bf9\u4e8e\u200b\u771f\u6b63\u200b\u7684\u200b\u5b9e\u6570\u200b\u5e73\u65b9\u6839\u200b \\(\\sqrt{x}\\)\uff0c\u200b\u6211\u4eec\u200b\u8981\u200b\u67e5\u627e\u200b\u7684\u200b\u662f\u200b\u7684\u200b \\(\\le \\sqrt{x}\\) \u200b\u6700\u5927\u200b\u7684\u200b\u6574\u6570\u200b</p> <pre><code>class Solution {\n    public int mySqrt(int x) {\n        long l = 0, r = x;\n        while(l &lt; r) {\n            long mid = (l + r + 1) / 2;\n            if(mid * mid &lt;= x) l = mid;\n            else r = mid - 1; \n        }\n        return (int)l;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#367","title":"367. \u200b\u6709\u6548\u200b\u7684\u200b\u5b8c\u5168\u200b\u5e73\u65b9\u200b\u6570","text":"<p>\u200b\u548c\u200b\u4e0a\u200b\u4e00\u9898\u200b\u4e00\u6837\u200b\uff0c\u200b\u67e5\u627e\u200b \\(x\\) \u200b\u7684\u200b\u6574\u6570\u200b\u5e73\u65b9\u6839\u200b \\(l\\) \uff0c\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6ee1\u8db3\u200b \\(l * l = x\\)</p> <pre><code>class Solution {\n    public boolean isPerfectSquare(int num) {\n        long l = 0, r = num;\n        while(l &lt; r) {\n            long mid = (l + r + 1) / 2;\n            if(mid * mid &lt;= num) l = mid;\n            else r = mid - 1;\n        }\n        return l * l == num;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#3","title":"3.\u200b\u79fb\u9664\u200b\u5143\u7d20","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#27","title":"27. \u200b\u79fb\u9664\u200b\u5143\u7d20","text":"<p>\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b \\(k\\) \u200b\u6307\u5411\u200b\u6570\u7ec4\u200b\u503c\u4e0d\u4e3a\u200b \\(val\\) \u200b\u7684\u200b\u5e8f\u5217\u200b\u7684\u200b\u5c3e\u90e8\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6307\u5411\u200b\u539f\u200b\u6570\u7ec4\u200b\u5e76\u200b\u4e00\u76f4\u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\u3002\u200b\u5f53\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6307\u5411\u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u503c\u200b\u4e0d\u200b\u4e3a\u200b \\(val\\) \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5c06\u200b\u6307\u9488\u200b \\(k\\) \u200b\u6307\u5411\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u503c\u7f6e\u200b\u4e3a\u200b \\(nums[i]\\)\uff0c\u200b\u7136\u540e\u200b\u6307\u9488\u200b \\(k\\) \u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\u3002</p> <pre><code>class Solution {\n    public int removeElement(int[] nums, int val) {\n        int k = 0;\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(nums[i] != val) {\n                nums[k ++] = nums[i];\n            }\n        }\n        return k;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#26","title":"26. \u200b\u5220\u9664\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879","text":"<p>\u200b\u53cc\u200b\u6307\u9488\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6307\u5411\u200b\u539f\u200b\u6570\u7ec4\u200b\uff0c\u200b\u6307\u9488\u200b \\(j\\) \u200b\u6bcf\u6b21\u200b\u90fd\u200b\u6307\u5411\u200b \\(i\\) \uff0c\u200b\u7136\u540e\u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u503c\u200b\u4e0d\u200b\u76f8\u540c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6307\u9488\u200b \\(j\\) \u200b\u505c\u6b62\u200b\u79fb\u52a8\u200b\uff0c\u200b\u7136\u540e\u200b\u8bb0\u5f55\u200b\u6307\u9488\u200b \\(i\\) \u200b\u6240\u200b\u6307\u5411\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u6700\u540e\u200b \\(i = j - 1\\) \u200b\u8df3\u8fc7\u200b\u91cd\u590d\u200b\u7684\u200b\u5143\u7d20\u200b</p> <pre><code>class Solution {\n    public int removeDuplicates(int[] nums) {\n        int curLength = 0;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            int j = i;\n            while(j &lt; nums.length &amp;&amp; nums[j] == nums[i]) j ++;\n\n            nums[curLength ++] = nums[i];\n\n            i = j - 1;\n        }\n\n        return curLength;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#283","title":"283. \u200b\u79fb\u52a8\u200b\u96f6","text":"<p>\u200b\u53cc\u200b\u6307\u9488\u200b\uff0c\u200b\u628a\u200b\u4e0d\u662f\u200b0\u200b\u7684\u200b\u6570\u200b\u63d2\u200b\u5230\u200b\u524d\u9762\u200b\u53bb\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u628a\u200b\u540e\u9762\u200b\u7684\u200b\u6570\u7f6e\u200b\u6210\u200b0</p> <pre><code>class Solution {\n    public void moveZeroes(int[] nums) {\n        int notZeroCnt = 0;\n\n        for(int i = 0; i &lt; nums.length; i ++) {\n            if(nums[i] != 0) {\n                nums[notZeroCnt ++] = nums[i];\n            }\n        }\n\n        for(int i = notZeroCnt; i &lt; nums.length; i ++) {\n            nums[i] = 0;\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#844","title":"844. \u200b\u6bd4\u8f83\u200b\u542b\u200b\u9000\u683c\u200b\u7684\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u628a\u200b\u5b57\u7b26\u4e32\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b\u52a0\u5165\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u7ed3\u679c\u200b\u5b57\u7b26\u4e32\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u3002</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b: \\(O(n)\\) </p> <p>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b: \\(O(n)\\) </p> <pre><code>class Solution {\n    public boolean backspaceCompare(String s, String t) {\n        int indexS = -1, indexT = -1;\n\n        char[] charS = new char[s.length()];\n        char[] charT = new char[t.length()];\n\n        for(char c : s.toCharArray()) {\n            if(c == '#' &amp;&amp; indexS != -1) {\n                indexS --;\n            } else if(c != '#'){\n                charS[++ indexS] = c;\n            }\n        }\n\n        for(char c : t.toCharArray()) {\n            if(c == '#' &amp;&amp; indexT != -1) {\n                indexT --;\n            } else if(c != '#'){\n                charT[++ indexT] = c;\n            }\n        }\n\n        if(indexS != indexT) return false;\n\n        for(int i = 0; i &lt;= indexS; i ++) {\n            if(charS[i] != charT[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n</code></pre> <p>\u200b\u8981\u200b\u5b9e\u73b0\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b\u7684\u200b \\(O(n)\\) \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u548c\u200b \\(O(1)\\) \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u540e\u9762\u200b\u5411\u200b\u524d\u9762\u200b\u627e\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u627e\u5230\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u5b57\u7b26\u200b</p> <pre><code>class Solution {\n    public boolean backspaceCompare(String s, String t) {\n        int i = s.length() - 1, j = t.length() - 1;\n\n        while(i &gt;= 0 || j &gt;= 0) {\n            i = getIndex(s, i);\n            j = getIndex(t, j);\n\n            char charS = i &gt;= 0 ? s.charAt(i) : '0';\n            char charT = j &gt;= 0 ? t.charAt(j) : '0';\n\n            if(charS != charT) {\n                return false;\n            }\n\n            i --;\n            j --;\n        }\n\n        return true;\n    }\n\n    public int getIndex(String str, int idx) {\n        int cnt = 0;\n        while((idx &gt;= 0 &amp;&amp; str.charAt(idx) == '#') || cnt &gt; 0) {\n            if(idx &gt;= 0 &amp;&amp; str.charAt(idx) == '#') {\n                cnt ++;\n            } else {\n                cnt --;\n            }\n            idx --;\n        } \n        return idx;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#977","title":"977. \u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u7684\u200b\u5e73\u65b9","text":"<p>\u200b\u7528\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5b58\u200b\u5347\u5e8f\u200b\u7684\u200b\u6b63\u6570\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5b58\u200b\u964d\u5e8f\u200b\u7684\u200b\u8d1f\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u5e73\u65b9\u200b\u540e\u200b\uff0c\u200b\u5c31\u200b\u90fd\u200b\u53d8\u6210\u200b\u4e86\u200b\u5347\u5e8f\u200b\uff0c\u200b\u6700\u540e\u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u5347\u5e8f\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>class Solution {\n    public int[] sortedSquares(int[] nums) {\n        int[] posNum = new int[nums.length];\n        int[] negNum = new int[nums.length];\n\n        int cntPos = 0, cntNeg = 0;\n\n        int idx = 0;\n        while(idx &lt; nums.length &amp;&amp; nums[idx] &lt; 0) {\n            idx ++;\n        }\n\n\n        for(int i = idx; i &lt; nums.length; i ++) {\n            posNum[cntPos ++] = nums[i];\n        }\n        for(int i = idx - 1; i &gt;= 0; i --) {\n            negNum[cntNeg ++] = nums[i];\n        }\n\n        int[] ans = new int[nums.length];\n\n        int i = 0, j = 0, cnt = 0;\n        while(i &lt; cntPos &amp;&amp; j &lt; cntNeg) {\n            int a = posNum[i] * posNum[i];\n            int b = negNum[j] * negNum[j];\n            if(a &lt;= b) {\n                ans[cnt ++] = a;\n                i ++;\n            } else {\n                ans[cnt ++] = b;\n                j ++;\n            }\n        }\n\n        while(i &lt; cntPos) {\n            ans[cnt ++] = posNum[i] * posNum[i];\n            i ++;\n        }\n\n        while(j &lt; cntNeg) {\n            ans[cnt ++] = negNum[j] * negNum[j];\n            j ++;\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#4","title":"4.\u200b\u957f\u5ea6\u200b\u6700\u5c0f\u200b\u7684\u200b\u5b50\u200b\u6570\u7ec4","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#209","title":"209. \u200b\u957f\u5ea6\u200b\u6700\u5c0f\u200b\u7684\u200b\u5b50\u200b\u6570\u7ec4","text":"<p>\u200b\u53d8\u200b\u957f\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u5f53\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u5185\u200b\u7684\u200b\u548c\u200b\u5c0f\u4e8e\u200b \\(target\\) \u200b\u7684\u8bdd\u200b\uff0c\u200b\u5c31\u200b\u628a\u200b\u7a97\u53e3\u200b\u5411\u200b\u540e\u200b\u7ee7\u7eed\u200b\u6269\u5f20\u200b\uff0c\u200b\u5982\u679c\u200b\u7a97\u53e3\u200b\u5185\u200b\u7684\u200b\u503c\u200b\u4ee5\u53ca\u200b\u6ee1\u8db3\u8981\u6c42\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5219\u200b\u7a97\u53e3\u200b\u5de6\u200b\u8fb9\u754c\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b</p> <pre><code>class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int sum = 0;\n\n        int ans = Integer.MAX_VALUE;\n        for(int i = 0, j = 0; i &lt; nums.length; i ++) {\n            sum += nums[i];\n\n            if(sum &lt; target) {\n                continue;\n            }\n\n            while(sum &gt;= target) {\n                ans = Math.min(ans, i - j + 1);\n                sum -= nums[j ++];\n            }\n        }\n\n        return ans == Integer.MAX_VALUE ? 0 : ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#904","title":"904. \u200b\u6c34\u679c\u200b\u6210\u7bee","text":"<p>\u200b\u53d8\u200b\u957f\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u7a97\u53e3\u200b\u4e2d\u200b\u53ea\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u79cd\u7c7b\u200b\u7684\u200b\u6c34\u679c\u200b</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int totalFruit(int[] fruits) {\n        int kind = 0;        \n\n        int mx = 0;\n        for(int x : fruits) mx = Math.max(mx, x);\n\n        int[] cnt = new int[mx + 1];\n        int ans = 0;\n\n        for(int i = 0, j = 0; i &lt; fruits.length; i ++) {\n\n            if(cnt[fruits[i]] == 0) {\n                kind ++;\n            }\n\n            cnt[fruits[i]] ++;\n\n            while(kind &gt; 2) {\n                cnt[fruits[j]] --;\n                if(cnt[fruits[j]] &lt;= 0) {\n                    kind --;\n                }\n                j ++;\n            }\n\n            ans = Math.max(ans, i - j + 1);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#59-ii","title":"59. \u200b\u87ba\u65cb\u200b\u77e9\u9635\u200b II","text":"<pre><code>class Solution {\n    public int[][] generateMatrix(int n) {\n        int[][] ans = new int[n][n];\n\n        int k = 1;\n\n        int i = 0, j = -1;\n        while(k &lt;= n * n) {\n            while(j + 1 &lt; n &amp;&amp; ans[i][j + 1] == 0) ans[i][++ j] = k ++;\n            while(i + 1 &lt; n &amp;&amp; ans[i + 1][j] == 0) ans[++ i][j] = k ++;\n            while(j - 1 &gt;= 0 &amp;&amp; ans[i][j - 1] == 0) ans[i][-- j] = k ++;\n            while(i - 1 &gt;= 0 &amp;&amp; ans[i - 1][j] == 0) ans[-- i][j] = k ++;\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#54","title":"54. \u200b\u87ba\u65cb\u200b\u77e9\u9635","text":"<pre><code>class Solution {\n    public List&lt;Integer&gt; spiralOrder(int[][] matrix) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        int n = matrix.length, m = matrix[0].length;\n\n        boolean[][] vis = new boolean[n][m];\n\n        int cnt = 1;\n        int i = 0, j = -1;\n        while(cnt &lt;= n * m) {\n            while(j + 1 &lt; m &amp;&amp; !vis[i][j + 1]) {\n                vis[i][j + 1] = true;\n                ans.add(matrix[i][++ j]);\n                cnt ++;\n            }\n\n            while(i + 1 &lt; n &amp;&amp; !vis[i + 1][j]) {\n                vis[i + 1][j] = true;\n                ans.add(matrix[++ i][j]);\n                cnt ++;\n            }\n\n            while(j - 1 &gt;= 0 &amp;&amp; !vis[i][j - 1]) {\n                vis[i][j - 1] = true;\n                ans.add(matrix[i][-- j]);\n                cnt ++;\n            }\n\n            while(i - 1 &gt;= 0 &amp;&amp; !vis[i - 1][j]) {\n                vis[i - 1][j] = true;\n                ans.add(matrix[-- i][j]);\n                cnt ++;\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#lcr-146","title":"LCR 146. \u200b\u87ba\u65cb\u200b\u904d\u5386\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4","text":"<pre><code>class Solution {\n    public int[] spiralArray(int[][] array) {\n        if(array.length == 0) return new int[]{};\n\n        int n = array.length, m = array[0].length;\n        boolean[][] vis = new boolean[n][m];    \n        int[] ans = new int[n * m];\n\n        int cnt = 0;\n        int i = 0, j = -1;\n        while(cnt &lt; n * m) {\n            while(j + 1 &lt; m &amp;&amp; !vis[i][j + 1]) {\n                vis[i][j + 1] = true;\n                ans[cnt ++] = array[i][++ j];\n            }\n\n            while(i + 1 &lt; n &amp;&amp; !vis[i + 1][j]) {\n                vis[i + 1][j] = true;\n                ans[cnt ++] = array[++ i][j];\n            }\n\n            while(j - 1 &gt;= 0 &amp;&amp; !vis[i][j - 1]) {\n                vis[i][j - 1] = true;\n                ans[cnt ++] = array[i][-- j];\n            }\n\n            while(i - 1 &gt;= 0 &amp;&amp; !vis[i - 1][j]) {\n                vis[i - 1][j] = true;\n                ans[cnt ++] = array[-- i][j];\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#5","title":"5.\u200b\u533a\u95f4\u200b\u548c","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#58","title":"58.\u200b\u533a\u95f4\u200b\u548c","text":"<pre><code>import java.util.*;\nimport java.io.*;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        int n = Integer.parseInt(br.readLine());\n        int[] arr = new int[n];\n\n        for(int i = 0; i &lt; n; i ++) {\n            arr[i] = Integer.parseInt(br.readLine());\n        }\n\n        int[] sum = new int[n + 1];\n\n        for(int i = 0; i &lt; n; i ++) {\n            sum[i + 1] = sum[i] + arr[i];\n        }\n\n        String line;\n        while((line = br.readLine()) != null) {\n            int l = Integer.parseInt(line.split(\" \")[0]);\n            int r = Integer.parseInt(line.split(\" \")[1]);\n            System.out.println(sum[r + 1] - sum[l]);\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%95%B0%E7%BB%84/#44","title":"44.\u200b\u5f00\u53d1\u5546\u200b\u8d2d\u4e70\u200b\u571f\u5730","text":"<pre><code>import java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        String nm  = br.readLine();\n\n        int n = Integer.parseInt(nm.split(\" \")[0]);\n        int m = Integer.parseInt(nm.split(\" \")[1]);\n\n        int[][] nums = new int[n][m];\n\n        for(int i = 0; i &lt; n; i ++) {\n            String line = br.readLine();\n            String[] splitLine = line.split(\" \");\n            for(int j = 0; j &lt; m; j ++) {\n                nums[i][j] = Integer.parseInt(splitLine[j]);\n            }\n        }\n\n        int[][] sum = new int[n + 1][m + 1];\n\n        for(int i = 0; i &lt; n; i ++) {\n            for(int j = 0; j &lt; m; j ++) {\n                sum[i + 1][j + 1] = sum[i][j + 1] + sum[i + 1][j] - sum[i][j] + nums[i][j];\n            }\n        }\n\n        int ans = Integer.MAX_VALUE;\n\n        for(int i = 1; i &lt;= n; i ++) {\n            int a = sum[i][m];\n            ans = Math.min(ans, Math.abs(sum[n][m] - 2 * a));\n        }\n\n        for(int j = 1; j &lt;= m; j ++) {\n            int a = sum[n][j];\n            ans = Math.min(ans, Math.abs(sum[n][m] - 2 * a));\n        }\n\n        bw.write(ans+\"\");\n        bw.flush();\n\n        br.close();\n        bw.close();\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/","title":"\u6808\u200b\u4e0e\u200b\u961f\u5217","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#232","title":"232. \u200b\u7528\u6808\u200b\u5b9e\u73b0\u200b\u961f\u5217","text":"<p>\u200b\u4e24\u4e2a\u200b\u6808\u200b\u5b9e\u73b0\u200b\u961f\u5217\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\u6808\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4f5c\u4e3a\u200b\u8f93\u51fa\u200b\u6808\u200b\uff0c\u200b\u8981\u200b\u8f93\u5165\u200b\u7684\u200b\u65f6\u5019\u200b\u628a\u200b\u8f93\u5165\u200b\u6808\u200b\u7684\u200b\u6570\u200b\u5168\u90e8\u200b\u817e\u5230\u200b\u8f93\u51fa\u200b\u6808\u200b\u91cc\u9762\u200b\uff0c\u200b\u7136\u540e\u200b\u628a\u200b\u8f93\u51fa\u200b\u6808\u200b\u7684\u200b\u6808\u9876\u200b\u4f5c\u4e3a\u200b\u7b54\u6848\u200b\u3002</p> <pre><code>import java.util.*;\n\nclass MyQueue {\n    Stack&lt;Integer&gt; stk1;\n    Stack&lt;Integer&gt; stk2;\n    public MyQueue() {\n        stk1 = new Stack&lt;&gt;();\n        stk2 = new Stack&lt;&gt;();\n    }\n\n    public void push(int x) {\n        stk1.push(x);\n    }\n\n    public int pop() {\n        transfer();\n        return stk2.pop();\n    }\n\n    public int peek() {\n        transfer();\n        return stk2.peek();\n    }\n\n    public boolean empty() {\n        return stk1.isEmpty() &amp;&amp; stk2.isEmpty();\n    }\n\n    public void transfer() {\n        if(stk2.isEmpty()) {\n            while(!stk1.isEmpty()) {\n                stk2.push(stk1.pop());\n            }\n        }\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#225","title":"225. \u200b\u7528\u200b\u961f\u5217\u200b\u5b9e\u73b0\u200b\u6808","text":"<p>\u200b\u6808\u200b\u8981\u6c42\u200b\u5148\u8fdb\u540e\u51fa\u200b\uff0c\u200b\u8bbe\u200b\u4e24\u4e2a\u200b\u961f\u5217\u200b\u5206\u522b\u200b\u4e3a\u200b\u961f\u5217\u200b \\(q1\\) \u200b\u548c\u200b\u961f\u5217\u200b \\(q2\\) \uff0c\u200b\u5f53\u200b \\(q1\\) \u200b\u4f5c\u4e3a\u200b\u63a5\u53d7\u200b\u5143\u7d20\u200b\u7684\u200b\u961f\u5217\u200b\uff0c\u200b\u8981\u200b\u8f93\u51fa\u200b\u65f6\u200b\uff0c\u200b\u628a\u200b\u524d\u200b \\(q1.size() - 1\\) \u200b\u4e2a\u200b\u5143\u7d20\u200b\u8f93\u51fa\u200b\u5230\u200b \\(q2\\) \u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u8f93\u51fa\u200b \\(q1\\) \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u3002\u200b\u540c\u7406\u200b\uff0c\u200b\u5f53\u200b \\(q2\\) \u200b\u4f5c\u4e3a\u200b\u63a5\u53d7\u200b\u5143\u7d20\u200b\u7684\u200b\u961f\u5217\u200b\uff0c\u200b\u8981\u200b\u8f93\u51fa\u200b\u65f6\u200b\uff0c\u200b\u628a\u200b\u524d\u200b \\(q2.size() - 1\\) \u200b\u4e2a\u200b\u5143\u7d20\u200b\u8f93\u51fa\u200b\u5230\u200b \\(q1\\) \u200b\u7136\u540e\u200b\u8f93\u51fa\u200b \\(q2\\) \u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u3002</p> <pre><code>import java.util.*;\n\nclass MyStack {\n    Queue&lt;Integer&gt; q1, q2;\n    boolean status = false;\n\n    public MyStack() {\n        q1 = new LinkedList&lt;&gt;();    \n        q2 = new LinkedList&lt;&gt;();\n    }\n\n    public void push(int x) {\n        if(!status) {\n            q1.add(x);\n        } else {\n            q2.add(x);\n        }\n    }\n\n    public int pop() {\n        transfer();\n        if(!status) {\n            status = true;\n            return q1.poll();\n        } else {\n            status = false;\n            return q2.poll();\n        }\n    }\n\n    public int top() {\n        transfer();\n        if(!status) {\n            status = true;\n            int t = q1.peek();\n            q2.add(q1.poll());\n            return t;\n        } else {\n            status = false;\n            int t = q2.peek();\n            q1.add(q2.poll());\n            return t;\n        }\n    }\n\n    public boolean empty() {\n        return q1.isEmpty() &amp;&amp; q2.isEmpty();\n    }\n\n    public void transfer() {\n        if(!status) {\n            while(q1.size() &gt; 1) {\n                q2.add(q1.poll());\n            }\n        } else {\n            while(q2.size() &gt; 1) {\n                q1.add(q2.poll());\n            }\n        }\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#20","title":"20. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7","text":"<p>\u200b\u7528\u200b\u4e00\u4e2a\u200b\u6808\u200b\u5b58\u50a8\u200b\u5de6\u200b\u62ec\u53f7\u200b\uff0c\u200b\u5f53\u200b\u9047\u5230\u200b\u53f3\u200b\u62ec\u53f7\u200b\u7684\u200b\u65f6\u200b\uff0c\u200b\u68c0\u67e5\u200b\u6808\u4e2d\u200b\u7684\u200b\u5de6\u200b\u62ec\u53f7\u200b\u662f\u5426\u200b\u4e0e\u200b\u5f53\u524d\u200b\u9047\u5230\u200b\u7684\u200b\u53f3\u200b\u62ec\u53f7\u200b\u5339\u914d\u200b\uff0c\u200b\u4e0d\u200b\u5339\u914d\u200b\u8fd4\u56de\u200b false\u3002\u200b\u5982\u679c\u200b\u904d\u5386\u200b\u5b8c\u200b\u5b57\u7b26\u4e32\u200b\u90fd\u200b\u6ca1\u6709\u200b\u8fd4\u56de\u200b false\uff0c\u200b\u68c0\u67e5\u200b\u6808\u4e2d\u200b\u662f\u5426\u200b\u8fd8\u6709\u200b\u5b57\u7b26\u200b\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u5b57\u7b26\u200b\u5219\u200b\u8fd4\u56de\u200btrue</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public boolean isValid(String s) {\n        Stack&lt;Character&gt; stk = new Stack&lt;&gt;();\n\n        for(char c : s.toCharArray()) {\n            if(c == '(' || c == '[' || c == '{') {\n                stk.push(c);\n            } else {\n                if(stk.isEmpty()) {\n                    return false;\n                }\n\n                char t =  stk.pop();\n\n                if(c == ')' &amp;&amp; t != '(') {\n                    return false;\n                }\n                if(c == '}' &amp;&amp; t != '{') {\n                    return false;\n                }\n                if(c == ']' &amp;&amp; t != '[') {\n                    return false;\n                }\n            } \n        }   \n\n        return stk.isEmpty();\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#1047","title":"1047. \u200b\u5220\u9664\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u76f8\u90bb\u200b\u91cd\u590d\u200b\u9879","text":"<p>\u200b\u5229\u7528\u200b\u6808\u6765\u200b\u5224\u65ad\u200b\u4e24\u4e2a\u200b\u76f8\u90bb\u200b\u7684\u200b\u5b57\u7b26\u200b\u662f\u5426\u200b\u4e00\u6837\u200b\uff0c\u200b\u904d\u5386\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u5b57\u7b26\u200b\u548c\u200b\u6808\u200b\u9876\u200b\u7684\u200b\u5b57\u7b26\u200b\u76f8\u7b49\u200b\uff0c\u200b\u5219\u200b\u6808\u9876\u200b\u5b57\u7b26\u200b\u51fa\u6808\u200b\uff0c\u200b\u5f53\u524d\u200b\u5b57\u7b26\u200b\u4e0d\u5165\u200b\u6808\u200b\uff0c\u200b\u5426\u5219\u200b\u5f53\u524d\u200b\u5b57\u7b26\u200b\u5165\u6808\u200b\u3002</p> <p>\u200b\u6700\u540e\u200b\u628a\u200b\u6240\u6709\u200b\u6808\u5185\u200b\u5b57\u7b26\u200b\u5f39\u51fa\u200b\u540e\u200b\u6536\u96c6\u200b\u5230\u200bStringBuilder\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\u4f5c\u4e3a\u200b\u6700\u7ec8\u200b\u7b54\u6848\u200b\u3002</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public String removeDuplicates(String s) {\n        Stack&lt;Character&gt; stk = new Stack&lt;&gt;();\n\n        for(char c : s.toCharArray()) {\n            if(!stk.isEmpty() &amp;&amp; stk.peek() == c) {\n                stk.pop();\n            } else {\n                stk.push(c);\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        while(!stk.isEmpty()) {\n            sb.append(stk.pop());\n        }\n\n        return sb.reverse().toString();\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#150","title":"150. \u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u6c42\u503c","text":"<p>\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u6808\u200b\u4f5c\u4e3a\u200b\u6570\u5b57\u200b\u6808\u200b\uff0c\u200b\u5b58\u653e\u200b\u6570\u5b57\u200b\uff0c\u200b\u9047\u5230\u200b\u8fd0\u7b97\u7b26\u200b\u65f6\u200b\uff0c\u200b\u4ece\u6808\u200b\u9876\u200b\u53d6\u51fa\u200b\u4e24\u4e2a\u200b\u6570\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u540e\u200b\u653e\u5165\u200b\u6570\u5b57\u200b\u6808\u4e2d\u200b\u3002</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int evalRPN(String[] tokens) {\n        Stack&lt;Integer&gt; numbers = new Stack&lt;&gt;();\n\n        for(int i = 0; i &lt; tokens.length; i ++) {\n            if(isNumber(tokens[i])) {\n                numbers.push(Integer.parseInt(tokens[i]));\n            } else {\n                //System.out.println(tokens[i]);\n                int b = numbers.pop(), a = numbers.pop();\n                if(\"+\".equals(tokens[i])) {\n                    numbers.push(a + b);\n                } else if(\"-\".equals(tokens[i])) {\n                    numbers.push(a - b);\n                } else if(\"/\".equals(tokens[i])) {\n                    numbers.push(a / b);\n                } else {\n                    numbers.push(a * b);\n                }\n            }\n        }        \n\n        return numbers.pop();\n    }\n\n    public boolean isNumber(String str) {\n        if(str == null || str.length() == 0) {\n            return false;\n        }\n\n        for(int i = 0; i &lt; str.length(); i ++) {\n            char c = str.charAt(i);\n            if(i == 0 &amp;&amp; c == '-' &amp;&amp; str.length() &gt; 1) {\n                continue;\n            }\n            if(c &lt; '0' || c &gt; '9') {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#239","title":"239. \u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u6700\u5927\u503c","text":"<p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u53cc\u7aef\u200b\u961f\u5217\u200b\u6765\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u5355\u8c03\u200b\u961f\u5217\u200b\u3002\u200b\u5355\u8c03\u200b\u961f\u5217\u200b\u8981\u200b\u7ef4\u62a4\u200b\u5b58\u50a8\u200b\u5728\u200b\u961f\u5217\u200b\u4e2d\u200b\u6570\u636e\u200b\u7684\u200b\u5355\u8c03\u200b\u6027\u200b\uff0c\u200b\u672c\u9898\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u5355\u8c03\u200b\u9012\u51cf\u200b\u7684\u200b\u961f\u5217\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5982\u679c\u200b\u904d\u5386\u200b\u5230\u200b\u5f53\u524d\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5927\u4e8e\u200b\u961f\u5217\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u961f\u5217\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u5c31\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u4f5c\u4e3a\u200b\u540e\u7eed\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u4e86\u200b\u3002\u200b\u540c\u6837\u200b\u6211\u4eec\u200b\u8fd8\u8981\u200b\u7ef4\u62a4\u200b\u961f\u5217\u200b\u4e2d\u200b\u7684\u200b\u6570\u200b\u5e94\u8be5\u200b\u5728\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(k\\) \u200b\u7684\u200b\u7a97\u53e3\u200b\u4e2d\u200b\uff0c\u200b\u6240\u4ee5\u200b\u91c7\u7528\u200b\u8bb0\u5f55\u200b\u7d22\u5f15\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5904\u7406\u200b\u3002</p> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        Deque&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\n\n        int[] ans = new int[nums.length - k + 1];\n\n        for(int i = 0, j = 0; i &lt; nums.length; i ++) {\n            if(!q.isEmpty() &amp;&amp; i - q.peekFirst() + 1 &gt; k) {\n                q.pollFirst();\n            }\n\n            while(!q.isEmpty() &amp;&amp; nums[q.peekLast()] &lt; nums[i]) {\n                q.pollLast();\n            }\n\n            q.addLast(i);\n\n            if(i &gt;= k - 1) {\n                ans[j ++] = nums[q.peekFirst()];\n            }\n        }   \n\n        return ans;\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/#347-k","title":"347. \u200b\u524d\u200b K \u200b\u4e2a\u200b\u9ad8\u9891\u200b\u5143\u7d20","text":"<p>\u200b\u9650\u5b9a\u200b\u4e00\u4e2a\u200b\u5927\u5c0f\u200b\u4e3a\u200b\u6700\u5927\u200b\u4e3a\u200b \\(k\\) \u200b\u7684\u200b\u5c0f\u200b\u6839\u5806\u200b\uff0c\u200b\u7528\u8be5\u200b\u5c0f\u200b\u6839\u5806\u200b\u6bd4\u8f83\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5404\u6570\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u5927\u5c0f\u200b\u7684\u200b\u524d\u200b \\(k\\) \u200b\u4e2a\u200b\u3002\u200b\u9996\u5148\u200b\u7528\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5f97\u5230\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u4e00\u4e2a\u4e2a\u200b\u63d2\u5165\u200b\u5230\u200b\u5c0f\u200b\u6839\u5806\u200b\u4e2d\u200b\u3002</p> <ul> <li> <p>\u200b\u5982\u679c\u200b\u5c0f\u6839\u5806\u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u8bb0\u5f55\u200b\u4e86\u200b \\(k\\) \u200b\u4e2a\u200b\u5143\u7d20\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u5c0f\u6839\u5806\u200b\u7684\u200b\u5806\u200b\u9876\u200b\u5143\u7d20\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u5927\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u3002\u200b\u5219\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u4e00\u5b9a\u200b\u4e0d\u662f\u200b\u7b54\u6848\u200b\u3002</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u5c0f\u6839\u5806\u200b\u7684\u200b\u5806\u200b\u9876\u200b\u5143\u7d20\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u5219\u200b\u5f39\u51fa\u200b\u5806\u200b\u9876\u200b\uff0c\u200b\u628a\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u8bb0\u5f55\u200b\u8fdb\u5c0f\u6839\u5806\u200b</p> </li> <li> <p>\u200b\u5982\u679c\u200b\u5c0f\u6839\u5806\u200b\u4e2d\u200b\u8bb0\u5f55\u200b\u5143\u7d20\u200b\u4e0d\u8db3\u200b \\(k\\) \u200b\u4e2a\u200b\uff0c\u200b\u5219\u200b\u76f4\u63a5\u200b\u628a\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u8bb0\u5f55\u200b\u5230\u200b\u5c0f\u200b\u6839\u5806\u200b</p> </li> </ul> <pre><code>import java.util.*;\n\nclass Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n        Map&lt;Integer, Integer&gt; cnt = new HashMap&lt;&gt;();\n\n        for(int x : nums) {\n            cnt.merge(x, 1, Integer::sum);\n        }\n        // \u200b\u5c0f\u6839\u5806\u200b\u81ea\u5b9a\u4e49\u200b\u6bd4\u8f83\u200b\u65b9\u6cd5\u200b\n        PriorityQueue&lt;Integer&gt; heap = new PriorityQueue&lt;&gt;(new Comparator&lt;&gt;() {\n            public int compare(Integer a, Integer b) {\n                return cnt.get(a) - cnt.get(b);\n            }\n        });\n\n        for(int x : cnt.keySet()) {\n            if(heap.size() == k) {\n                if(cnt.get(heap.peek()) &lt; cnt.get(x)) {\n                    heap.poll();\n                    heap.add(x);\n                }\n            } else {\n                heap.add(x);\n            }\n        }\n\n        int[] ans = new int[k];\n        for(int i = 0; i &lt; k; i ++) {\n            ans[i] = heap.poll();\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/","title":"\u8d2a\u5fc3","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#455","title":"455. \u200b\u5206\u53d1\u200b\u997c\u5e72","text":"<p>\u200b\u5bf9\u200b\u5c0f\u5b69\u200b\u7684\u200b\u80c3\u53e3\u200b\u503c\u200b\u548c\u200b\u997c\u5e72\u200b\u7684\u200b\u5c3a\u5bf8\u200b\u5206\u522b\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4f18\u5148\u200b\u6ee1\u8db3\u200b\u80c3\u53e3\u200b\u5c0f\u200b\u7684\u200b\u5c0f\u5b69\u200b\uff0c\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u6ee1\u8db3\u200b\u5c3d\u53ef\u80fd\u200b\u591a\u200b\u7684\u200b\u5b69\u5b50\u200b\u3002</p> <pre><code>class Solution {\n    public int findContentChildren(int[] g, int[] s) {\n        int ans = 0;\n        Arrays.sort(g);\n        Arrays.sort(s);\n\n        int j = 0;\n\n        for(int i = 0; i &lt; g.length; i ++) {\n\n            while(j &lt; s.length &amp;&amp; s[j] &lt; g[i]) j ++;\n            if(j &gt;= s.length) {\n                break;\n            } else {\n                j ++;\n                ans ++;\n            }\n\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#376","title":"376. \u200b\u6446\u52a8\u200b\u5e8f\u5217","text":"<p>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u505a\u6cd5\u200b\uff1a</p> <p>up[i]\uff1a\u200b\u8868\u793a\u200b\u524d\u200b i \u200b\u4e2a\u6570\u200b\u4e2d\u200b\u6700\u957f\u200b\u7684\u200b\u4ee5\u200b\u4e0a\u5347\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u6446\u52a8\u200b\u5e8f\u5217\u200b</p> <p>down[i]\uff1a\u200b\u8868\u793a\u200b\u524d\u200b i \u200b\u4e2a\u6570\u200b\u4e2d\u200b\u6700\u957f\u200b\u7684\u200b\u4ee5\u200b\u4e0b\u964d\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u6446\u52a8\u200b\u5e8f\u5217\u200b</p> <ul> <li>\u200b\u5f53\u200b nums[i] &gt; nums[i - 1] \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u6446\u52a8\u200b\u5e8f\u5217\u200b\u4e0a\u5347\u200b\u7684\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b\uff1a</li> </ul> <pre><code>up[i] = max(up[i - 1], down[i - 1] + 1);\ndown[i] = down[i - 1];\n</code></pre> <ul> <li>\u200b\u5f53\u200b nums[i] &lt; nums[i - 1] \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u6446\u52a8\u200b\u5e8f\u5217\u200b\u4e0b\u964d\u200b\u7684\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b\uff1a</li> </ul> <pre><code>down[i] = max(down[i - 1], up[i - 1] + 1);\nup[i] = up[i - 1];\n</code></pre> <pre><code>class Solution {\n    public int wiggleMaxLength(int[] nums) {\n        int n = nums.length;\n\n        int[] up = new int[n];\n        int[] down = new int[n];\n\n        for(int i = 1; i &lt; n; i ++) {\n            if(nums[i] &gt; nums[i - 1]) {\n                up[i] = Math.max(up[i - 1], down[i - 1] + 1);\n                down[i] = down[i - 1];\n            } else if(nums[i] &lt; nums[i - 1]) {\n                down[i] = Math.max(down[i - 1], up[i - 1] + 1);\n                up[i] = up[i - 1];\n            } else {\n                up[i] = up[i - 1];\n                down[i] = down[i - 1];\n            }\n        }\n\n        return Math.max(down[n - 1], up[n - 1]) + 1;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#53","title":"53. \u200b\u6700\u5927\u200b\u5b50\u200b\u6570\u7ec4\u200b\u548c","text":"<p>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u505a\u6cd5\u200b\uff1a</p> <p>dp[i]\uff1a\u200b\u8868\u793a\u200b\u4ee5\u4e0b\u200b\u6807\u200b i \u200b\u7ed3\u5c3e\u200b\u7684\u200b\u6700\u5927\u200b\u5b50\u200b\u6570\u7ec4\u200b\u7684\u200b\u548c\u200b\uff0c\u200b\u8981\u200b\u4f7f\u5f97\u200b\u548c\u200b\u6700\u5927\u200b\u53ef\u200b\u5f97\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\uff1a</p> <pre><code>dp[i] = max(dp[i - 1], 0) + nums[i]\n</code></pre> <p>\u200b\u8981\u4e48\u200b\u5728\u200b\u524d\u9762\u200b\u8fde\u7eed\u200b\u7684\u200b\u548c\u200b\u4e0a\u200b\u52a0\u4e0a\u200bnums[i]\uff0c\u200b\u8981\u4e48\u200b\u820d\u5f03\u200b\u4e4b\u524d\u200b\u7684\u200b\u8fde\u7eed\u200b\u548c\u200b\uff0c\u200b\u8ba9\u200b\u5f53\u524d\u200b\u7684\u200bnums[i]\u200b\u4f5c\u4e3a\u200b\u8fde\u7eed\u200b\u5b50\u200b\u6570\u7ec4\u200b\u548c\u200b\u7684\u200b\u5f00\u59cb\u200b\u3002</p> <pre><code>class Solution {\n    public int maxSubArray(int[] nums) {\n        int sum = nums[0];\n        int ans = sum;\n        for(int i = 1; i &lt; nums.length; i ++) {\n            sum = Math.max(sum, 0) + nums[i];\n            ans = Math.max(ans, sum);\n        }\n        return ans;\n    } \n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#122-ii","title":"122. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b II","text":"<p>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u505a\u6cd5\u200b\uff1a</p> <p>DP\u200b\u72b6\u6001\u673a\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u4e24\u4e2a\u200bdp\u200b\u6570\u7ec4\u200b:</p> <pre><code>dp[i][0] // \u200b\u8868\u793a\u200b\u4ee5\u200b i \u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u672a\u200b\u6301\u6709\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\ndp[i][1] // \u200b\u8868\u793a\u200b\u4ee5\u200b i \u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u6301\u6709\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\n// \u200b\u53ef\u200b\u5f97\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\ndp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + price[i])\ndp[i][1] = max(dp[i - 1][1], dp[i - 1][0] - price[i])\n\n// \u200b\u7531\u4e8e\u200b\u540c\u4e00\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u672a\u200b\u6301\u6709\u200b\u80a1\u7968\u200b\u7684\u200b\u5229\u6da6\u200b\u4e00\u5b9a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u6301\u6709\u200b\u80a1\u7968\u200b\u7684\u200b\u5229\u6da6\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u540e\u200b\u7b54\u6848\u200b\u5c31\u662f\u200b dp[i][0]\n// \u200b\u5bf9\u4e8e\u200b\u8fb9\u754c\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\uff1a\ndp[i][0] = 0, dp[i][1] = -inf\n</code></pre> <p>\u200b\u53ef\u200b\u5f97\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>class Solution {\n    public int maxProfit(int[] prices) {\n        int n = prices.length;\n\n        int[][] dp = new int[n + 1][2];\n\n        dp[0][0] = 0;\n        dp[0][1] = Integer.MIN_VALUE;\n\n        for(int i = 0; i &lt; n; i ++) {\n            dp[i + 1][1] = Math.max(dp[i][1], dp[i][0] - prices[i]);\n            dp[i + 1][0] = Math.max(dp[i][0], dp[i][1] + prices[i]);\n        }\n\n        return dp[n][0];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#55","title":"55. \u200b\u8df3\u8dc3\u200b\u6e38\u620f","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#45-ii","title":"45. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b II","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#1005-k","title":"1005. K \u200b\u6b21\u200b\u53d6\u53cd\u200b\u540e\u200b\u6700\u5927\u5316\u200b\u7684\u200b\u6570\u7ec4\u200b\u548c","text":"<p>\u200b\u5148\u200b\u627e\u5230\u200b\u6b63\u6570\u200b\u548c\u200b\u8d1f\u6570\u200b\u7684\u200b\u5206\u754c\u7ebf\u200b\uff0c\u200b\u7136\u540e\u200b\u4f18\u5148\u200b\u628a\u200b\u8d1f\u6570\u200b\u53d8\u6210\u200b\u6b63\u6570\u200b\u3002\u200b\u5f53\u200b\u6570\u7ec4\u200b\u91cc\u9762\u200b\u5168\u90e8\u200b\u662f\u200b\u6b63\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5982\u679c\u200b k \u200b\u662f\u200b\u5076\u6570\u200b\u6216\u8005\u200b\u6570\u7ec4\u200b\u91cc\u9762\u200b\u5305\u542b\u200b 0 \u200b\u503c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b\u6570\u7ec4\u200b\u548c\u200b\u5c31\u662f\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u5982\u679c\u200b k \u200b\u662f\u200b\u5947\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u628a\u200b\u5f53\u524d\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u53d8\u6210\u200b\u8d1f\u6570\u200b\u3002</p> <pre><code>class Solution {\n    public int largestSumAfterKNegations(int[] nums, int k) {\n        Arrays.sort(nums);\n\n        int par = 0;\n        while(par &lt; nums.length &amp;&amp; nums[par] &lt; 0) {\n            par ++;\n        }\n\n        for(int i = 0; i &lt; par &amp;&amp; k &gt; 0; i ++) {\n            nums[i] = -nums[i];\n            k --;\n        }\n\n        if((par &lt; nums.length &amp;&amp; nums[par] == 0) || k % 2 == 0) {\n            k = 0;\n        }\n\n        Arrays.sort(nums);\n        if(k &gt; 0) {\n            nums[0] = -nums[0];\n        }\n\n        int ans = 0;\n        for(int i = 0; i &lt; nums.length; i ++) {\n            ans += nums[i];\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#134","title":"134. \u200b\u52a0\u6cb9\u7ad9","text":"<p>\u200b\u9996\u5148\u200b\u8981\u200b\u77e5\u9053\u200b\u5f53\u200b sum(gas) &gt;= sum(cost) \u200b\u7684\u200b\u65f6\u5019\u200b\u4e00\u5b9a\u200b\u6709\u89e3\u200b\uff0csum(gas) &lt; sum(cost) \u200b\u7684\u200b\u65f6\u5019\u200b\u4e00\u5b9a\u200b\u65e0\u200b\u89e3\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#135","title":"135. \u200b\u5206\u53d1\u200b\u7cd6\u679c","text":"<p>\u200b\u4ece\u5de6\u5f80\u53f3\u200b\u53d1\u200b\uff0c\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7cd6\u679c\u200b\u6570\u200b\u7684\u200b\u5148\u653e\u200b 1 \u200b\u4e2a\u200b\uff0c\u200b\u518d\u200b\u4ece\u200b\u53f3\u5f80\u200b\u5de6\u53d1\u200b</p> <pre><code>class Solution {\n    public int candy(int[] ratings) {\n        int ans = 0;\n        int n = ratings.length;\n\n        if(n == 1) {\n            return 1;\n        }\n\n        int[] f = new int[n];\n\n        for(int i = 0; i &lt; n; i ++) {\n            if(i == 0) {\n                f[i] = 1;\n            } else if(ratings[i] &gt; ratings[i - 1]) {\n                f[i] = f[i - 1] + 1;\n            } else {\n                f[i] = 1;\n            }\n        }\n\n        for(int i = n - 2; i &gt;= 0; i --) {\n            if(ratings[i] &gt; ratings[i + 1] &amp;&amp; f[i] &lt;= f[i + 1]) {\n                f[i] = f[i + 1] + 1;\n            }\n        }\n\n        for(int i = 0; i &lt; n; i ++) {\n            ans += f[i];\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#860","title":"860. \u200b\u67e0\u6aac\u6c34\u200b\u627e\u96f6","text":"<p>\u200b\u5148\u627e\u200b10\u200b\u5757\u200b\u7684\u200b\uff0c\u200b\u518d\u200b\u627e\u200b5\u200b\u5757\u200b\u7684\u200b\uff0c\u200b\u4ee5\u514d\u200b\u540e\u9762\u200b\u6709\u4ed8\u200b10\u200b\u5757\u200b\u7684\u200b\u627e\u200b\u4e0d\u5f00\u200b</p> <pre><code>class Solution {\n    public boolean lemonadeChange(int[] bills) {\n\n        int m5 = 0;\n        int m10 = 0;\n        int m20 = 0;\n\n        for(int bill : bills) {\n            if(bill == 5) {\n                m5 ++;\n            } else if(bill == 10) {\n                if(m5 == 0) {\n                    return false;\n                } else {\n                    m5 --;\n                    m10 ++;\n                }\n            } else {\n                if((m5 * 5 + m10 * 10) &lt; 15 || m5 == 0) {\n                    return false;\n                } else if(m10 &gt;= 1) {\n                    m10 --;\n                    m5 --;\n                    m20 ++;\n                } else {\n                    m5 -= 3;\n                    m20 ++;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#406","title":"406. \u200b\u6839\u636e\u200b\u8eab\u9ad8\u200b\u91cd\u5efa\u200b\u961f\u5217","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#452","title":"452. \u200b\u7528\u200b\u6700\u5c11\u200b\u6570\u91cf\u200b\u7684\u200b\u7bad\u200b\u5f15\u7206\u200b\u6c14\u7403","text":"<p>\u200b\u8981\u200b\u4f7f\u5f97\u200b\u82b1\u8d39\u200b\u7684\u200b\u7bad\u200b\u6570\u91cf\u200b\u6700\u5c0f\u200b\uff0c\u200b\u5219\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u8981\u200b\u8ba9\u200b\u4e00\u652f\u200b\u7bad\u5c04\u200b\u5c3d\u53ef\u80fd\u200b\u591a\u200b\u7684\u200b\u6c14\u7403\u200b\uff0c\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u6bcf\u6b21\u200b\u627e\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5171\u540c\u70b9\u200b\u7684\u200b\u533a\u95f4\u200b\u96c6\u5408\u200b\uff0c\u200b\u8981\u200b\u4f7f\u5f97\u200b\u8fd9\u4e2a\u200b\u96c6\u5408\u200b\u7684\u200b\u533a\u95f4\u200b\u6570\u91cf\u200b\u5c3d\u53ef\u80fd\u200b\u7684\u200b\u5927\u200b\u3002\u200b\u7528\u200b\u6392\u5e8f\u200b+\u200b\u53cc\u200b\u6307\u9488\u200b\u53ef\u4ee5\u200b\u9009\u51fa\u200b\u6bcf\u6b21\u200b\u53ef\u4ee5\u200b\u5c04\u200b\u7684\u200b\u6700\u5927\u200b\u6570\u91cf\u200b\u7684\u200b\u6c14\u7403\u200b\u3002</p> <pre><code>class Solution {\n    public int findMinArrowShots(int[][] points) {\n        Arrays.sort(points, (a, b) -&gt; {\n            if(a[0] != b[0]) {\n                return Integer.compare(a[0], b[0]);\n            }\n            return Integer.compare(a[1], b[1]);\n        });\n\n\n        int minR = Integer.MAX_VALUE;\n        int ans = 0;\n\n        for(int i = 0; i &lt; points.length; i ++) {\n\n            int j = i;\n            while(j &lt; points.length) {\n                if(points[j][0] &lt;= minR) {\n                    minR = Math.min(minR, points[j][1]);\n                    j ++; \n                } else {\n                    minR = points[j][1];\n                    break;\n                }\n            }\n            ans ++;\n            if(j != i) {\n                i = j - 1;\n            }\n        }\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#435","title":"435. \u200b\u65e0\u200b\u91cd\u53e0\u200b\u533a\u95f4","text":"<p>\u200b\u4e0d\u200b\u77e5\u9053\u200b\u600e\u4e48\u200b\u8bc1\u660e\u200b</p> <pre><code>class Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n        Arrays.sort(intervals, (a, b) -&gt; {\n            return Integer.compare(a[1], b[1]);\n        });\n\n        int ans = 0;\n\n        for(int i = 0; i &lt; intervals.length; i ++) {\n            int r = intervals[i][1];\n            int j = i + 1;\n            while(j &lt; intervals.length &amp;&amp; intervals[j][0] &lt; r) {\n                j ++;\n                ans ++;\n            }\n            i = j - 1;\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#763","title":"763. \u200b\u5212\u5206\u200b\u5b57\u6bcd\u200b\u533a\u95f4","text":"<p>\u200b\u4e00\u79cd\u200b\u5b57\u6bcd\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u5728\u200b\u4e00\u4e2a\u200b\u7247\u6bb5\u200b\u4e2d\u200b\uff0c\u200b\u4e14\u200b\u8981\u200b\u5b8c\u5168\u200b\u5305\u542b\u200b\u4e8e\u200b\u4e00\u4e2a\u200b\u7247\u6bb5\u200b\u3002\u200b\u628a\u200b\u4e00\u4e2a\u200b\u5b57\u6bcd\u200b\u7684\u200b\u5f00\u59cb\u200b\u4f4d\u7f6e\u200b\u548c\u200b\u7ed3\u675f\u200b\u4f4d\u7f6e\u200b\u7406\u89e3\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u9053\u9898\u200b\u5c31\u662f\u200b\u5728\u200b\u95ee\u200b\u5408\u5e76\u200b\u76f8\u4ea4\u200b\u533a\u95f4\u200b\u4e4b\u540e\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u957f\u5ea6\u200b\u3002</p> <pre><code>class Solution {\n    public List&lt;Integer&gt; partitionLabels(String s) {\n        Map&lt;Character, Integer&gt; cnt = new HashMap&lt;&gt;();\n\n        for(int i = 0; i &lt; s.length(); i ++) {\n            cnt.put(s.charAt(i), i);\n        }\n\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n\n        int start = 0;\n        int end = 0;\n\n        for(int i = 0; i &lt; s.length(); i ++) {\n            end = Math.max(end, cnt.get(s.charAt(i)));\n            if(i == end) {\n                ans.add(i - start + 1);\n                start = i + 1;\n            }\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#56","title":"56. \u200b\u5408\u5e76\u200b\u533a\u95f4","text":"<p>\u200b\u6309\u7167\u200b\u5de6\u200b\u7aef\u70b9\u200b\u6392\u5e8f\u200b\uff0c\u200b\u987a\u5e8f\u200b\u904d\u5386\u200b\uff0c\u200b\u5982\u679c\u200b\u91cd\u53e0\u200b\u4e86\u200b\u5c31\u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u533a\u95f4\u200b</p> <pre><code>class Solution {\n    public int[][] merge(int[][] intervals) {\n        Arrays.sort(intervals, (a, b) -&gt; {\n            return Integer.compare(a[0], b[0]);\n        });\n\n        List&lt;int[]&gt; ans = new ArrayList&lt;&gt;();\n\n        int l = intervals[0][0];\n        int r = intervals[0][1];\n\n        for(int i = 1; i &lt; intervals.length; i ++) {\n            if(intervals[i][0] &lt;= r) {\n                r = Math.max(r,intervals[i][1]);\n            } else {\n                ans.add(new int[]{l, r});\n                l = intervals[i][0];\n                r = intervals[i][1];\n            }\n        }\n        ans.add(new int[]{l, r});\n\n        return ans.toArray(new int[0][]);\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#738","title":"738. \u200b\u5355\u8c03\u200b\u9012\u589e\u200b\u7684\u200b\u6570\u5b57","text":"<p>\u200b\u82e5\u200b\u53d1\u73b0\u200b\u540e\u200b\u4e00\u4f4d\u6570\u200b\u6bd4\u200b\u5f53\u524d\u200b\u4f4d\u200b\u7684\u200b\u6570\u5927\u200b\uff0c\u200b\u90a3\u4e48\u200b\u628a\u200b\u5f53\u524d\u200b\u6570\u51cf\u200b\u4e00\u200b\uff0c\u200b\u540e\u9762\u200b\u7684\u200b\u6570\u200b\u90fd\u200b\u53d8\u6210\u200b9</p> <pre><code>class Solution {\n    public int monotoneIncreasingDigits(int n) {\n        List&lt;Integer&gt; nums = new ArrayList&lt;&gt;();\n\n        int temp = n;\n        while(temp &gt; 0) {\n            nums.add(temp % 10);\n            temp /= 10;\n        }\n\n        Collections.reverse(nums);\n\n        boolean flag = false;\n\n        for(int i = 0; i &lt; nums.size(); i ++) {\n            if(flag) {\n                nums.set(i, 9);\n                continue;\n            }\n\n            int j = i;\n            while(j &lt; nums.size() &amp;&amp; nums.get(j) == nums.get(i)) j ++;\n            j --;\n            if(j + 1 &lt; nums.size() &amp;&amp; nums.get(j) &gt; nums.get(j + 1)) {\n                nums.set(i, nums.get(i) - 1);\n                flag = true;\n            }\n        }       \n\n        int ans = 0;\n        for(int i = 0; i &lt; nums.size(); i ++) {\n            ans = ans * 10 + nums.get(i);\n        }\n\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E8%B4%AA%E5%BF%83/#968","title":"968. \u200b\u76d1\u63a7\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u4e0d\u4f1a\u200b\u5199\u200b\u8fd8\u200b\u6ca1\u200b\u641e\u61c2\u200b</p>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868","text":""},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#203","title":"203. \u200b\u79fb\u9664\u200b\u94fe\u8868\u200b\u5143\u7d20","text":"<p>\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u7684\u200b\u5934\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u89c4\u907f\u200b\u5220\u9664\u200b\u7684\u200b\u6570\u662f\u200b\u94fe\u8868\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u6240\u200b\u9700\u8981\u200b\u7684\u200b\u5224\u65ad\u200b\u3002</p> <p>\u200b\u4e14\u200b\u5728\u200b\u94fe\u8868\u200b\u4e2d\u8981\u200b\u5220\u9664\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b \\(p\\) \uff0c\u200b\u9700\u8981\u200b\u627e\u5230\u200b \\(p\\) \u200b\u524d\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u6240\u4ee5\u200b\u94fe\u8868\u200b\u904d\u5386\u200b\u7684\u200b\u6761\u4ef6\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeElements(ListNode head, int val) {\n        ListNode dummyHead = new ListNode(-1, head);\n\n        ListNode curNode = dummyHead;\n        while(curNode != null &amp;&amp; curNode.next != null) {\n            if(curNode.next.val == val) {\n                curNode.next = curNode.next.next;\n            } else {\n                curNode = curNode.next;\n            }\n        }\n\n        return dummyHead.next;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#707","title":"707. \u200b\u8bbe\u8ba1\u200b\u94fe\u8868","text":"<p>\u200b\u4e3a\u4e86\u200b\u5c3e\u200b\u63d2\u200b\u6cd5\u80fd\u200b\u5b9e\u73b0\u200b \\(O(1)\\) \u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff0c\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u5c3e\u200b\u6307\u9488\u200b \\(tail\\) \uff0c\u200b\u5c3e\u200b\u6307\u9488\u200b\u9700\u8981\u200b\u53d8\u52a8\u200b\u7684\u200b\u65f6\u5019\u200b\u6709\u200b\u4ee5\u4e0b\u200b \\(4\\) \u200b\u79cd\u200b\u60c5\u51b5\u200b</p> <ol> <li>\u200b\u5f53\u200b\u94fe\u8868\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5934\u200b\u63d2\u6cd5\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5c3e\u200b\u6307\u9488\u200b\u9700\u8981\u200b\u6307\u5411\u200b\u63d2\u5165\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5c3e\u200b\u63d2\u6cd5\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\u540e\u200b\uff0c\u200b\u8981\u200b\u6307\u5411\u200b\u521a\u200b\u63d2\u5165\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u5f53\u200b\u6309\u7167\u200b\u7d22\u5f15\u200b\u5220\u9664\u200b\u7684\u200b\u6570\u662f\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u9700\u8981\u200b\u628a\u200b \\(tail\\) \u200b\u6307\u5411\u200b\u5012\u6570\u200b\u5012\u6570\u200b\u7b2c\u4e8c\u4e2a\u200b\u6570\u200b</li> <li>\u200b\u5f53\u200b\u6309\u7167\u200b\u6240\u4ee5\u200b\u52a0\u5165\u200b\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u662f\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u628a\u200b \\(tail\\) \u200b\u6307\u5411\u200b\u8fd9\u4e2a\u200b\u52a0\u5165\u200b\u7684\u200b\u6570\u200b</li> </ol> <p>\u200b\u5355\u94fe\u200b\u8868\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>class MyLinkedList {\n    class ListNode {\n        int val;\n        ListNode next;\n        public ListNode(){}\n        public ListNode(int val, ListNode next) {\n            this.val = val;\n            this.next = next;\n        }\n    }\n\n    ListNode head, tail;\n    int length;\n\n    public MyLinkedList() {\n        head = tail = new ListNode(-1, null);    \n        length = 0;\n    }\n\n    public int get(int index) {\n        int cnt = -1;\n        for(ListNode p = head; p != null; p = p.next, cnt ++) {\n            if(cnt == index) {\n                return p.val;\n            }\n        }\n        return -1;\n    }\n\n    public void addAtHead(int val) {\n        ListNode t = new ListNode(val, null);\n        t.next = head.next;\n        head.next = t;\n        if(length == 0) tail = t;\n        length ++;\n    }\n\n    public void addAtTail(int val) {\n        ListNode t = new ListNode(val, null);\n        tail.next = t;\n        tail = t;\n        length ++;\n    }\n\n    public void addAtIndex(int index, int val) {\n        if(index &gt; length) {\n            return;\n        }\n\n        int cnt = -1;\n        ListNode t = new ListNode(val, null);\n        if(index == length) tail = t;\n        for(ListNode p = head; p != null; p = p.next, cnt ++) {\n            if(cnt + 1 == index) {\n                t.next = p.next;\n                p.next = t;\n                length ++;\n                break;\n            }\n        }\n    }\n\n    public void deleteAtIndex(int index) {\n        if(index &gt;= length) {\n            return;\n        }\n        int cnt = -1;\n        for(ListNode p = head; p != null &amp;&amp; p.next != null; p = p.next, cnt ++) {\n            if(cnt + 1 == index) {\n                if(index == length - 1) {\n                    tail = p;\n                }\n                p.next = p.next.next;\n                length --;\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList obj = new MyLinkedList();\n * int param_1 = obj.get(index);\n * obj.addAtHead(val);\n * obj.addAtTail(val);\n * obj.addAtIndex(index,val);\n * obj.deleteAtIndex(index);\n */\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#206","title":"206. \u200b\u53cd\u8f6c\u200b\u94fe\u8868","text":"<p>\u200b\u5934\u200b\u63d2\u6cd5\u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode dummyHead = new ListNode(-1, null);\n\n        for(ListNode p = head, nxt; p != null; p = nxt) {\n            nxt = p.next;\n            p.next = dummyHead.next;\n            dummyHead.next = p;\n        }\n\n        return dummyHead.next;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#24","title":"24. \u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u7528\u200b\u4e09\u4e2a\u200b\u6307\u9488\u200b\u5b9e\u73b0\u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b\u524d\u540e\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u548c\u200b\u4e00\u4e2a\u200b\u7528\u6765\u200b\u8fde\u63a5\u200b\u4ea4\u6362\u200b\u540e\u200b\u7684\u200b\u6307\u9488\u200b</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        if(head == null || head.next == null) {\n            return head;\n        }\n\n        ListNode dummyHead = new ListNode(-1, null);\n\n        ListNode link = dummyHead;\n        ListNode preNode = head, curNode = head.next;\n\n        while(curNode != null) {\n            ListNode nxt = curNode.next;\n            curNode.next = preNode;\n            preNode.next = nxt;\n            link.next = curNode;\n\n            if(nxt != null) {\n                link = preNode;\n                preNode = nxt;\n                curNode = preNode.next;\n            } else {\n                break;\n            }           \n        }\n\n        return dummyHead.next;\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#19-n","title":"19. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200b N \u200b\u4e2a\u200b\u7ed3\u70b9","text":"<p>\u200b\u5148\u6c42\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5efa\u7acb\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u7684\u200b\u5934\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u4e8e\u200b\u5220\u9664\u200b\u7684\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b</p> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n        int length = 0;\n        for(ListNode p = head; p != null; p = p.next) {\n            length ++;\n        }\n\n        ListNode dummyHead = new ListNode(-1, head);\n\n        int index = 0;  \n        for(ListNode p = dummyHead; p != null; p = p.next, index ++) {\n            if(index + 1 == length - n + 1) {\n                p.next = p.next.next;\n            }\n        }\n\n        return dummyHead.next; \n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/%E9%93%BE%E8%A1%A8/#0207","title":"\u9762\u8bd5\u9898\u200b 02.07. \u200b\u94fe\u8868\u200b\u76f8\u4ea4","text":"<p>\u200b\u8bbe\u200b\u7b2c\u4e00\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\u662f\u200b \\(length1\\)\uff0c\u200b\u7b2c\u4e8c\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\u662f\u200b \\(length2\\)\u3002\u200b\u5047\u8bbe\u200b\u8fd9\u200b\u4e24\u6761\u200b\u94fe\u8868\u200b\u76f8\u4ea4\u200b\u4e0e\u200b\u4e00\u70b9\u200b\uff0c\u200b\u8bbe\u200b\u5b83\u4eec\u200b\u76f8\u4ea4\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(len\\) ,\u200b\u90a3\u4e48\u200b\u76f8\u4ea4\u200b\u524d\u200b\u4e24\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u5404\u81ea\u200b\u7684\u200b\u4e24\u6bb5\u200b\u957f\u5ea6\u200b\u662f\u200b \\(a = length1 - len\\) \u200b\u548c\u200b \\(b = length2 - len\\)\u3002\u200b\u90a3\u4e48\u200b\u5982\u4f55\u200b\u4f7f\u5f97\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u5728\u200b\u904d\u5386\u200b\u4e24\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u65f6\u5019\u200b\u5728\u200b\u76f8\u4ea4\u200b\u70b9\u200b\u76f8\u9047\u200b\u5462\u200b\uff1f</p> <ol> <li>\u200b\u5982\u679c\u200b \\(a==b\\) \u200b\u90a3\u4e48\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u4f1a\u200b\u540c\u65f6\u200b\u8d70\u200b\u5230\u200b\u76f8\u4ea4\u200b\u70b9\u4e0a\u200b</li> <li>\u200b\u5982\u679c\u200b \\(a \\neq b\\) \u200b\u90a3\u4e48\u200b\u4e00\u5b9a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\u5148\u200b\u8d70\u200b\u5230\u200b\u76f8\u4ea4\u200b\u70b9\u4e0a\u200b\uff0c\u200b\u4e14\u200b\u5148\u200b \\(\\max(a,b)-\\max(a,b)\\) \u200b\u6b65\u200b\u3002\u200b\u4e00\u4e2a\u200b\u5f88\u5999\u200b\u7684\u200b\u60f3\u6cd5\u200b\u662f\u200b\u8ba9\u200b\u7b2c\u4e00\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u6307\u9488\u200b\u8d70\u5230\u200b\u5c3e\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4ece\u200b\u7b2c\u4e8c\u6761\u200b\u94fe\u8868\u200b\u5f00\u59cb\u200b\u8d70\u200b\uff1b\u200b\u7b2c\u4e8c\u6761\u200b\u94fe\u8868\u200b\u7684\u200b\u6307\u9488\u200b\u8d70\u5230\u200b\u5c3e\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4ece\u200b\u7b2c\u4e00\u6761\u200b\u94fe\u8868\u200b\u5f00\u59cb\u200b\u8d70\u200b\u3002\u200b\u8fd9\u6837\u200b\u8d70\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5728\u200b\u76f8\u4ea4\u200b\u70b9\u200b\u76f8\u9047\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u8d70\u200b\u7684\u200b\u6b65\u6570\u200b\u5206\u522b\u200b\u4e3a\u200b \\(a + len + b\\) \u200b\u548c\u200b \\(b + len + a\\) </li> </ol> <pre><code>/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        ListNode da = headA, db = headB;\n\n        boolean f1 = false, f2 = false;\n\n        while(da != null &amp;&amp; db != null) {\n            if(da == db) {\n                return da;\n            }\n            da = da.next;\n            db = db.next;\n            if(da == null &amp;&amp; !f1) {\n                f1 = true;\n                da = headB;\n            }\n            if(db == null &amp;&amp; !f2) {\n                f2 = true;\n                db = headA;\n            }\n        }\n        return null;\n    }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/","title":"\u8ba1\u7b97\u673a\u200b\u7406\u8bba","text":"<p>Abstract</p> <p>\u200b\u5b66\u4e60\u200b\u8ba1\u7b97\u673a\u200b\u8f6f\u786c\u4ef6\u200b\u7406\u8bba\u200b\u7b14\u8bb0\u200b</p> <ul> <li> <p>\u200b\u8ba1\u7b97\u673a\u200b\u7406\u8bba\u200b</p> <ul> <li>\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b</li> <li>\u200b\u6570\u636e\u5e93\u200b</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"\u8bb0\u5f55\u200b\u5b66\u4e60\u200b\u6570\u636e\u5e93\u200b\u7684\u200b\u8981\u70b9","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/0.%E6%A6%82%E8%BF%B0/","title":"\u6570\u636e\u5e93\u7cfb\u7edf\u200b\u6982\u5ff5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/0.%E6%A6%82%E8%BF%B0/#_2","title":"\u5173\u7cfb\u200b\u578b\u200b\u6570\u636e\u5e93","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/0.%E6%A6%82%E8%BF%B0/#sql","title":"SQL","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","title":"\u5b66\u4e60\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b-\u200b\u81ea\u9876\u5411\u4e0b\u200b\u65b9\u6cd5","text":"<p>Abstract</p> <p>\u200b\u4e3b\u8981\u200b\u8bb0\u5f55\u200b\u6bcf\u200b\u4e00\u7ae0\u200b\u7684\u200b\u5b66\u4e60\u5fc3\u5f97\u200b\uff0c\u200b\u548c\u200b\u89e3\u51b3\u200b\u6bcf\u200b\u4e00\u7ae0\u200b\u7684\u200b\u590d\u4e60\u9898\u200b\u3001\u200b\u4e60\u9898\u200b\u3002</p> <ul> <li> <p>\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b</p> <ul> <li>1.\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u548c\u200b\u56e0\u7279\u7f51\u200b <ul> <li>1.1\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u548c\u200b\u56e0\u7279\u7f51\u200b\u9898\u76ee\u200b</li> </ul> </li> <li>2.\u200b\u5e94\u7528\u5c42\u200b</li> <li>3.\u200b\u8fd0\u8f93\u200b\u5c42\u200b</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u548c\u200b\u56e0\u7279\u7f51","text":"<p>Abstract</p> <p>\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u6982\u8ff0\u200b\u3002\u200b\u4ece\u200b\u4e24\u4e2a\u200b\u65b9\u9762\u200b\u89e3\u91ca\u200b\u4e86\u200b\u4ec0\u4e48\u200b\u662f\u200b\u56e0\u7279\u7f51\u200b\uff0c\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u7f51\u7edc\u200b\u8fb9\u7f18\u200b\u3001\u200b\u7f51\u7edc\u200b\u6838\u5fc3\u200b\u3001\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u7f51\u200b\u4e2d\u200b\u7684\u200b\u65f6\u5ef6\u200b\u3001\u200b\u4e22\u5305\u200b\u548c\u200b\u541e\u5410\u91cf\u200b\u3001\u200b\u534f\u8bae\u200b\u5c42\u6b21\u200b\u53ca\u5176\u200b\u670d\u52a1\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#1","title":"1.\u200b\u4ec0\u4e48\u200b\u662f\u200b\u56e0\u7279\u7f51","text":"<p>\u200b\u5173\u4e8e\u200b\u4ec0\u4e48\u200b\u662f\u200b\u56e0\u7279\u7f51\u200b\uff08Internet\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4e24\u4e2a\u200b\u65b9\u9762\u200b\u6765\u200b\u56de\u7b54\u200b\uff1a</p> <ol> <li>\u200b\u4ece\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u5177\u4f53\u200b\u6784\u6210\u200b\u6765\u200b\u56de\u7b54\u200b\uff0c\u200b\u5373\u200b\u6784\u6210\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u57fa\u672c\u200b\u786c\u4ef6\u200b\u548c\u200b\u8f6f\u4ef6\u200b\u7ec4\u4ef6\u200b</li> <li>\u200b\u4ece\u200b\u4e3a\u200b\u5206\u5e03\u5f0f\u5e94\u7528\u200b\u63d0\u4f9b\u200b\u670d\u52a1\u200b\u7684\u200b\u8054\u7f51\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u6765\u200b\u56de\u7b54\u200b</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#11","title":"1.1 \u200b\u4ece\u200b\u5177\u4f53\u200b\u7684\u200b\u6784\u6210\u200b\u6765\u200b\u56de\u7b54","text":"<p>\u200b\u5177\u4f53\u200b\u6784\u6210\u200b\u4e0a\u200b\uff0c\u200b\u9996\u5148\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u7684\u200b\u8fde\u5165\u200b\u4e92\u8054\u7f51\u200b\u7684\u200b\u8bbe\u5907\u200b\u5c31\u662f\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u6784\u6210\u200b\u4e4b\u4e00\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6211\u4eec\u200b\u7684\u200b\u7535\u8111\u200b\u3001\u200b\u624b\u673a\u200b\u3001\u200b\u7535\u89c6\u200b\u3001\u200b\u6e38\u620f\u673a\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8054\u7f51\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5728\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u7684\u200b\u672f\u8bed\u200b\u4e2d\u7edf\u200b\u79f0\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\uff08end system\uff09/\u200b\u4e3b\u673a\u200b\uff08host\uff09\u3002\u200b\u5728\u751f\u6d3b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u8ba9\u200b\u4e00\u53f0\u200b\u7535\u8111\u200b\u8054\u7f51\u200b\uff0c\u200b\u5219\u200b\u8981\u200b\u63a5\u5165\u200b\u4e00\u6839\u200b\u201c\u200b\u7f51\u7ebf\u200b\u201d\u200b\u6765\u200b\u4e0e\u200b\u56e0\u7279\u7f51\u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\uff0c\u200b\u8fd9\u6839\u200b\u201c\u200b\u7f51\u7ebf\u200b\u201d\u200b\u5c31\u662f\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\uff08communication link\uff09 \u200b\u7684\u200b\u7269\u7406\u200b\u5a92\u4ecb\u200b\uff0c\u200b\u5b8c\u6574\u200b\u7684\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\u8fd8\u8981\u200b\u5305\u542b\u200b\u5b9e\u73b0\u200b\u8be5\u200b\u94fe\u8def\u200b\u4e0a\u200b\u534f\u8bae\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u548c\u200b\u786c\u4ef6\u200b\u3002\u200b\u7269\u7406\u200b\u5a92\u4ecb\u200b\u65b9\u9762\u200b\u6709\u200b\u5f88\u200b\u591a\u79cd\u200b\u9009\u62e9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5212\u5206\u200b\u4e3a\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\u548c\u200b\u975e\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\uff0c\u200b\u5e38\u89c1\u200b\u7684\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\u6709\u200b\uff1a\u200b\u540c\u8f74\u7535\u7f06\u200b\u3001\u200b\u94dc\u7ebf\u200b\u3001\u200b\u5149\u7ea4\u200b\uff0c\u200b\u5e38\u89c1\u200b\u7684\u200b\u975e\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\u6709\u200b\uff1a\u200b\u65e0\u7ebf\u7535\u200b\u9891\u8c31\u200b\u3002\u200b\u5f53\u200b\u4e00\u53f0\u200b\u7aef\u7cfb\u7edf\u200b\u8981\u200b\u5411\u200b\u53e6\u4e00\u53f0\u200b\u7aef\u7cfb\u7edf\u200b\u53d1\u9001\u6570\u636e\u200b\u65f6\u200b\uff0c\u200b\u53d1\u9001\u200b\u7aef\u7cfb\u7edf\u200b\u5c06\u200b\u6570\u636e\u200b\u5206\u6bb5\u200b\uff0c\u200b\u5e76\u200b\u4e3a\u200b\u6bcf\u200b\u4e00\u6bb5\u200b\u52a0\u4e0a\u200b\u9996\u90e8\u200b\u5b57\u8282\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u4e00\u6bb5\u200b\u5728\u200b\u5c31\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5206\u7ec4\u200b\uff08packet\uff09\u3002\u200b\u8981\u200b\u5728\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u4f20\u8f93\u200b\u8fd9\u6837\u200b\u7684\u200b\u5206\u7ec4\u200b\uff0c\u200b\u4e0d\u4ec5\u4ec5\u200b\u8981\u200b\u4f9d\u9760\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\uff08packet switch\uff09\uff0c\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u4ece\u200b\u5b83\u200b\u7684\u200b\u4e00\u6761\u200b\u5165\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\u63a5\u53d7\u200b\u5206\u7ec4\u200b\uff0c\u200b\u4ece\u200b\u5b83\u200b\u7684\u200b\u4e00\u6761\u200b\u51fa\u200b\u901a\u4fe1\u200b\u94fe\u8def\u200b\u8f6c\u53d1\u200b\u5206\u7ec4\u200b\u3002\u200b\u4e24\u79cd\u200b\u5e38\u89c1\u200b\u7684\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u662f\u200b\uff1a \u200b\u8def\u7531\u5668\u200b\uff08route\uff09 \u200b\u548c\u200b \u200b\u94fe\u8def\u5c42\u200b\u4ea4\u6362\u673a\u200b\uff08link-layer switch\uff09 \u3002\u200b\u7aef\u7cfb\u7edf\u200b\u8981\u200b\u63a5\u5165\u200b\u4e92\u8054\u7f51\u200b\uff0c\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u56e0\u7279\u7f51\u200b\u670d\u52a1\u63d0\u4f9b\u5546\u200b\uff08Internet Service Provider\uff0cISP\uff09 \u200b\u63a5\u5165\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6211\u4eec\u200b\u56fd\u5185\u200b\u7684\u200b\u4e09\u5927\u200b\u8fd0\u8425\u5546\u200b\uff1a\u200b\u7535\u4fe1\u200b\u3001\u200b\u8054\u901a\u200b\u3001\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5c31\u662f\u200bISP\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#12","title":"1.2 \u200b\u4ece\u200b\u670d\u52a1\u200b\u65b9\u9762\u200b\u56de\u7b54","text":"<p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u5206\u5e03\u5f0f\u5e94\u7528\u200b\u8fdb\u7a0b\u200b\u548c\u200b\u4e3a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u63d0\u4f9b\u200b\u670d\u52a1\u200b\u7684\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u65b9\u9762\u200b\u63cf\u8ff0\u200b\u56e0\u7279\u7f51\u200b\u3002\u200b\u56e0\u4e3a\u200b\u8fd9\u4e9b\u200b\u5e94\u7528\u200b\u6d89\u53ca\u200b\u591a\u4e2a\u200b\u76f8\u4e92\u4ea4\u6362\u200b\u6570\u636e\u200b\u7684\u200b\u7aef\u7cfb\u7edf\u200b\uff0c\u200b\u6545\u200b\u5b83\u4eec\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5206\u5e03\u5f0f\u5e94\u7528\u200b\u3002\u200b\u91cd\u8981\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5e94\u7528\u200b\u8fd0\u884c\u200b\u5728\u200b\u7aef\u7cfb\u7edf\u200b\u4e0a\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u8fd0\u884c\u200b\u5728\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u4e0a\u200b\uff0c\u200b\u5373\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u673a\u200b\u53ea\u7ba1\u200b\u8f6c\u53d1\u200b\u6536\u5230\u200b\u7684\u200b\u5206\u7ec4\u200b\uff0c\u200b\u5e76\u4e0d\u77e5\u9053\u200b\u6e90\u200b\u4e3b\u673a\u200b\u548c\u200b\u76ee\u7684\u200b\u4e3b\u673a\u200b\u8fd0\u884c\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002\u200b\u90a3\u4e48\u200b\u4e00\u4e2a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u5982\u4f55\u200b\u201c\u200b\u6307\u6325\u200b\u201d\u200b\u56e0\u7279\u7f51\u200b\uff0c\u200b\u628a\u200b\u6570\u636e\u200b\u4f20\u9001\u200b\u5230\u200b\u53e6\u4e00\u53f0\u200b\u4e3b\u673a\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u4e0a\u200b\u5462\u200b\uff1f\u200b\u7b54\u6848\u200b\u662f\u200b\u5957\u200b\u63a5\u5b57\u200b\u63a5\u53e3\u200b\uff08socket interface\uff09\uff0c\u200b\u8be5\u200b\u63a5\u53e3\u200b\u89c4\u5b9a\u200b\u4e86\u200b\u8fd0\u884c\u200b\u5728\u200b\u7aef\u7cfb\u7edf\u200b\u4e0a\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u5411\u200b\u53e6\u4e00\u53f0\u200b\u7aef\u7cfb\u7edf\u200b\u7684\u200b\u7279\u5b9a\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u4f20\u9001\u6570\u636e\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#13","title":"1.3 \u200b\u4ec0\u4e48\u200b\u662f\u200b\u534f\u8bae","text":"<p>\u200b\u638c\u63e1\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u77e5\u8bc6\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5c31\u662f\u200b\u7406\u89e3\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u534f\u8bae\u200b\u7684\u200b\u6784\u6210\u200b\u3001\u200b\u539f\u7406\u200b\u548c\u200b\u5de5\u4f5c\u200b\u65b9\u5f0f\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u4e2d\u200b\u5b58\u5728\u200b\u5f88\u591a\u200b\u7684\u200b\u534f\u8bae\u200b\uff0c\u200b\u4f8b\u5982\u200b\u8457\u540d\u200b\u7684\u200bTCP\uff08Transmission Control Protocol\uff09\u200b\u548c\u200bIP\uff08Internet Protocol\uff09\u200b\u534f\u8bae\u200b\uff0c\u200b\u56e0\u7279\u7f51\u200b\u4e2d\u200b\u7684\u200b\u4e3b\u8981\u200b\u534f\u8bae\u200b\u7edf\u79f0\u200b\u4e3a\u200b TCP/IP\u3002\u200b\u4e25\u683c\u6765\u8bf4\u200b\uff0c\u200b\u534f\u8bae\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b</p> <p>\u200b\u534f\u8bae\u200b\uff08Protocol\uff09: \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5728\u200b\u4e24\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u901a\u4fe1\u200b\u5b9e\u4f53\u200b\u4e4b\u95f4\u200b\u4ea4\u6362\u200b\u7684\u200b\u62a5\u6587\u200b\u7684\u200b\u683c\u5f0f\u200b\u548c\u200b\u987a\u5e8f\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u62a5\u6587\u200b\u7684\u200b\u53d1\u9001\u200b/\u200b\u63a5\u53d7\u200b\u6216\u200b\u5176\u4ed6\u200b\u4e8b\u4ef6\u200b\u6240\u200b\u91c7\u53d6\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#2","title":"2.\u200b\u7f51\u7edc\u200b\u8fb9\u7f18","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#21","title":"2.1 \u200b\u7aef\u7cfb\u7edf","text":"<p>\u200b\u4e0e\u200b\u56e0\u7279\u7f51\u200b\u76f8\u8fde\u200b\u7684\u200b\u8ba1\u7b97\u673a\u200b\u548c\u200b\u5176\u4ed6\u200b\u8bbe\u5907\u200b\u79f0\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4f4d\u4e8e\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u8fb9\u7f18\u200b\uff0c\u200b\u6240\u4ee5\u200b\u79f0\u4e4b\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\u7aef\u7cfb\u7edf\u200b\u3002\u200b\u7aef\u7cfb\u7edf\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u4e3b\u673a\u200b\uff08host\uff09\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u4eec\u200b\u53ef\u4ee5\u200b\u5bb9\u7eb3\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002\u200b\u4e3b\u673a\u200b\u53c8\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5212\u5206\u200b\u4e3a\u200b\u5ba2\u6237\u673a\u200b\uff08Client\uff09\u200b\u548c\u200b\u670d\u52a1\u5668\u200b\uff08server\uff09\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#22","title":"2.2 \u200b\u63a5\u5165\u7f51","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#221-dslftth5g","title":"2.2.1 \u200b\u5bb6\u5ead\u200b\u63a5\u5165\u200b: DSL\u3001\u200b\u7535\u7f06\u200b\u3001FTTH\u200b\u548c\u200b5G\u200b\u56fa\u5b9a\u5f0f\u200b\u65e0\u7ebf","text":"<p>\u200b\u6570\u5b57\u200b\u7528\u6237\u7ebf\u200b\uff08Digital Subscriber Line\uff0cDSL\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u628a\u200b\u56e0\u7279\u7f51\u200b\u63a5\u5165\u200b\u548c\u200b\u7535\u8bdd\u7ebf\u200b\u7ed1\u5b9a\u200b\u5728\u200b\u4e00\u5757\u200b\u7684\u200b\u6280\u672f\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u7535\u8bdd\u7ebf\u200b\u7684\u200b\u516c\u53f8\u200b\u540c\u6837\u200b\u662f\u200b\u63d0\u4f9b\u200b\u56e0\u7279\u7f51\u200b\u63a5\u5165\u200b\u670d\u52a1\u200b\u7684\u200bISP\u3002\u200b\u516c\u53f8\u200b\u5185\u6709\u200b\u4e2a\u200b\u6570\u5b57\u200b\u7528\u6237\u7ebf\u200b\u63a5\u5165\u200b\u590d\u7528\u5668\u200b\uff08DSLAM\uff09\uff0c\u200b\u6bcf\u4e2a\u200b\u7528\u6237\u200b\u7684\u200bDSL\u200b\u8c03\u5236\u89e3\u8c03\u5668\u200b\u4f7f\u7528\u200b\u73b0\u6709\u200b\u7684\u200b\u7535\u8bdd\u7ebf\u200b\u548c\u200b\u7535\u8bdd\u516c\u53f8\u200b\u7684\u200b\u672c\u5730\u200b\u4e2d\u5fc3\u5c40\u200b\u7684\u200bDSLAM\u200b\u4ea4\u6362\u200b\u6570\u636e\u200b\u3002\u200b\u4e8e\u662f\u200b\u63a5\u5165\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u4e3b\u673a\u200b\u5c31\u200b\u548c\u200b\u7535\u8bdd\u200b\u5171\u7528\u200b\u4e86\u200b\u4e00\u6761\u7ebf\u200b\u63a5\u5411\u200b\u4e86\u200b\u7535\u8bdd\u516c\u53f8\u200b\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u5171\u7528\u200b\u4e00\u6761\u7ebf\u200b\u7535\u8bdd\u516c\u53f8\u200b\u600e\u4e48\u200b\u77e5\u9053\u200b\u6536\u5230\u200b\u7684\u200b\u6570\u636e\u200b\u662f\u200b\u8981\u200b\u53d1\u5f80\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u8fd8\u662f\u200b\u7535\u8bdd\u7f51\u200b\u7684\u200b\u5462\u200b\uff1f\u200b\u8fd9\u4e0b\u200b\u5c31\u200b\u4e0d\u5f97\u4e0d\u200b\u63d0\u200b \u200b\u9891\u5206\u200b\u590d\u7528\u6280\u672f\u200b\uff08FDM\uff09 \u200b\u4e86\u200b\uff0c\u200b\u9891\u5206\u200b\u590d\u7528\u200b\u4e3a\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u53d1\u9001\u200b\u65b9\u200b\u6307\u914d\u200b\u4e00\u4e2a\u200b\u9891\u7387\u200b\u8303\u56f4\u200b\uff0c\u200b\u8981\u6c42\u200b\u8be5\u200b\u53d1\u9001\u200b\u65b9\u4ee5\u200b\u53d1\u9001\u200b\u7684\u200b\u4fe1\u53f7\u200b\u8981\u200b\u5728\u200b\u8be5\u200b\u9891\u7387\u200b\u8303\u56f4\u200b\u4e4b\u5185\u200b\uff0c\u200b\u63a5\u6536\u200b\u65b9\u5219\u200b\u4f1a\u200b\u6839\u636e\u200b\u4e0d\u540c\u200b\u7684\u200b\u9891\u7387\u200b\u5c06\u200b\u4e0d\u540c\u200b\u4fe1\u53f7\u200b\u5206\u79bb\u51fa\u6765\u200b\uff0c\u200b\u53d1\u9001\u5230\u200b\u76ee\u7684\u5730\u200b\u3002</p> <p>\u200b\u7535\u7f06\u200b\u56e0\u7279\u7f51\u200b\u63a5\u5165\u200b \u200b\u548c\u200bDSL\u200b\u63a5\u5165\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u7535\u7f06\u200b\u56e0\u7279\u7f51\u200b\u63a5\u5165\u200b\u662f\u200b\u5229\u7528\u200b\u4e86\u200b\u6709\u7ebf\u7535\u89c6\u200b\u7684\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u3002</p> <p>\u200b\u5149\u7ea4\u200b\u5230\u6237\u200b\uff08FTTH\uff09 \u200b\u7406\u60f3\u200b\u662f\u200b\u63d0\u4f9b\u200b\u4e00\u6761\u200b\u4ece\u200b\u672c\u5730\u200b\u4e2d\u5fc3\u5c40\u200b\u76f4\u63a5\u200b\u5230\u200b\u5bb6\u5ead\u200b\u7684\u200b\u5149\u7ea4\u200b\u8def\u5f84\u200b\u3002</p> <p>5G\u200b\u56fa\u5b9a\u5f0f\u200b\u65e0\u7ebf\u200b \uff1a\u200b\u6570\u636e\u200b\u4ee5\u200b\u65e0\u7ebf\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4ece\u200b\u4f9b\u5e94\u5546\u200b\u5230\u200b\u5bb6\u4e2d\u200b\u7684\u200b\u8c03\u5236\u89e3\u8c03\u5668\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#222-wifi","title":"2.2.2 \u200b\u4f01\u4e1a\u200b\uff08\u200b\u548c\u200b\u5bb6\u5ead\u200b\uff09\u200b\u63a5\u5165\u200b\uff1a\u200b\u4ee5\u592a\u7f51\u200b\u548c\u200bWIFI","text":"<p>\u200b\u5c06\u200b\u7aef\u7cfb\u7edf\u200b\u7684\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u6210\u200b\u4e00\u4e2a\u200b\u5c40\u57df\u7f51\u200b\uff08\u200b\u6709\u7ebf\u200b\u5c40\u57df\u7f51\u200b\u6216\u8005\u200b\u662f\u200b\u65e0\u7ebf\u200b\u5c40\u57df\u7f51\u200b\uff09\uff0c\u200b\u518d\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u63a5\u5165\u200b\u5230\u200b\u56e0\u7279\u7f51\u200b\u4e2d\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8def\u7531\u5668\u200b\u4e5f\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u8fb9\u7f18\u200b\u8def\u7531\u5668\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#223-3glte-4g5g","title":"2.2.3 \u200b\u5e7f\u57df\u7f51\u200b\u65e0\u7ebf\u200b\u63a5\u5165\u200b\uff1a3G\u3001LTE 4G\u200b\u548c\u200b5G","text":"<p>\u200b\u8702\u7a9d\u200b\u7f51\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8ddd\u79bb\u200b\u57fa\u7ad9\u200b\u6570\u4e07\u200b\u7c73\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u63a5\u53d7\u200b\u4fe1\u53f7\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#23","title":"2.3 \u200b\u7269\u7406\u200b\u5a92\u4ecb","text":"<p>\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\uff1a \u200b\u53cc\u7ede\u7ebf\u200b\u3001\u200b\u540c\u8f74\u7535\u7f06\u200b\u3001\u200b\u5149\u7ea4\u200b</p> <p>\u200b\u975e\u200b\u5bfc\u5f15\u200b\u578b\u200b\u5a92\u4ecb\u200b\uff1a \u200b\u9646\u5730\u200b\u65e0\u7ebf\u7535\u200b\u4fe1\u9053\u200b\u3001\u200b\u536b\u661f\u200b\u65e0\u7ebf\u7535\u200b\u4fe1\u9053\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#3","title":"3.\u200b\u7f51\u7edc\u200b\u6838\u5fc3","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#31","title":"3.1 \u200b\u5206\u7ec4\u200b\u4ea4\u6362","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#311","title":"3.1.1 \u200b\u5b58\u50a8\u8f6c\u53d1\u200b\u4f20\u8f93","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#312","title":"3.1.2 \u200b\u6392\u961f\u200b\u65f6\u5ef6\u200b\u548c\u200b\u5206\u7ec4\u200b\u4e22\u5931","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#313","title":"3.1.3 \u200b\u8f6c\u200b\u53d1\u8868\u200b\u548c\u200b\u8def\u7531\u200b\u9009\u62e9\u200b\u534f\u8bae","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#32","title":"3.2 \u200b\u7535\u8def\u200b\u4ea4\u6362","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#321","title":"3.2.1 \u200b\u7535\u8def\u200b\u4ea4\u6362\u200b\u4e2d\u200b\u7684\u200b\u590d\u7528","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#322","title":"3.2.2 \u200b\u5206\u7ec4\u200b\u4ea4\u6362\u200b\u4e0e\u200b\u7535\u8def\u200b\u4ea4\u6362\u200b\u7684\u200b\u5bf9\u6bd4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#33","title":"3.3 \u200b\u7f51\u7edc\u200b\u7684\u200b\u7f51\u7edc","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#4","title":"4.\u200b\u5206\u7ec4\u200b\u4ea4\u6362\u7f51\u200b\u4e2d\u200b\u7684\u200b\u65f6\u5ef6\u200b\u3001\u200b\u4e22\u5305\u200b\u548c\u200b\u541e\u5410\u91cf","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#41","title":"4.1 \u200b\u5206\u7ec4\u200b\u4ea4\u6362\u200b\u4e2d\u200b\u7684\u200b\u65f6\u5ef6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#42","title":"4.2 \u200b\u4e22\u5305","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#43","title":"4.3 \u200b\u541e\u5410\u91cf","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#5","title":"5.\u200b\u534f\u8bae\u200b\u5c42\u6b21\u200b\u53ca\u5176\u200b\u670d\u52a1\u200b\u6a21\u578b","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#51","title":"5.1 \u200b\u5206\u5c42\u200b\u7684\u200b\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#52","title":"5.2 \u200b\u5c01\u88c5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#53","title":"5.3 \u200b\u9762\u5bf9\u200b\u653b\u51fb\u200b\u7684\u200b\u7f51\u7edc","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/#54","title":"5.4 \u200b\u8ba1\u7b97\u673a\u7f51\u7edc\u200b\u548c\u200b\u56e0\u7279\u7f51\u200b\u7684\u200b\u5386\u53f2","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/","title":"\u8bfe\u540e\u200b\u4e60\u9898\u200b\u548c\u200b\u95ee\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#_2","title":"\u590d\u4e60\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#11","title":"1.1 \u200b\u8282","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#r1","title":"R1","text":"<p>\u200b\u7b54\u200b\uff1a\u200b\u4e3b\u673a\u200b\u548c\u200b\u7aef\u7cfb\u7edf\u200b\u4e4b\u95f4\u200b\u6ca1\u6709\u200b\u4ec0\u4e48\u200b\u4e0d\u540c\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u7aef\u7cfb\u7edf\u200b\u6709\u200b\u7535\u8111\u200b\u3001\u200b\u624b\u673a\u200b\u3001\u200b\u7535\u89c6\u200b\u3001\u200b\u6e38\u620f\u673a\u200b\uff0c\u200b\u80fd\u591f\u200b\u63a5\u5165\u200b\u56e0\u7279\u7f51\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5229\u7528\u200b\u56e0\u7279\u7f51\u200b\u4e3a\u200b\u8bbe\u5907\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u8fdb\u884c\u200b\u901a\u4fe1\u200b\u7684\u200b\u8bbe\u5907\u200b\uff0c\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u7aef\u7cfb\u7edf\u200b\u6216\u8005\u200b\u4e3b\u673a\u200b\u3002Web\u200b\u670d\u52a1\u5668\u200b\u662f\u200b\u4e00\u79cd\u200b\u7aef\u7cfb\u7edf\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#r2","title":"R2","text":"<p>\u200b\u7b54\u200b\uff1a\u200b\u6ca1\u67e5\u200b\u5230\u200b\u3002\u200b\u5e94\u8be5\u200b\u662f\u200b\u5f02\u56fd\u200b\u4ea4\u5f80\u200b\u4e4b\u95f4\u200b\u8981\u200b\u9075\u5b88\u200b\u7684\u200b\u4e00\u4e9b\u200b\u7ea6\u5b9a\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#r3","title":"R3","text":"<p>\u200b\u7b54\u200b\uff1a\u200b\u56e0\u4e3a\u200b\u534f\u8bae\u200b\u662f\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u8f6f\u4ef6\u200b\u548c\u200b\u786c\u4ef6\u200b\u53bb\u200b\u5b9e\u73b0\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u534f\u8bae\u200b\u7684\u200b\u6807\u51c6\u200b\u4e0d\u540c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5404\u5927\u200b\u5382\u5546\u200b\u5728\u200b\u5236\u5b9a\u200b\u4e3a\u200b\u5b9e\u73b0\u200b\u8be5\u200b\u534f\u8bae\u200b\u7684\u200b\u786c\u4ef6\u200b\u8bbe\u5907\u200b\u548c\u200b\u8f6f\u4ef6\u200b\u7684\u200b\u6807\u51c6\u200b\u4e5f\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f1a\u200b\u4f7f\u5f97\u200b\u4e24\u53f0\u200b\u8bbe\u5907\u200b\u65e0\u6cd5\u200b\u8fdb\u884c\u200b\u901a\u4fe1\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#12","title":"1.2\u200b\u8282","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#r4","title":"R4","text":"<p>\u200b\u7b54\u200b\uff1a</p> <ol> <li>\u200b\u4f4f\u5b85\u200b\u63a5\u5165\u200b\uff1a\u200b\u6570\u5b57\u200b\u7528\u6237\u200b\u63a5\u5165\u200b\u6280\u672f\u200b\uff08DSL\uff09\u3001\u200b\u7535\u7f06\u200b\u56e0\u7279\u7f51\u200b\u63a5\u5165\u200b\u3001\u200b\u5149\u7ea4\u200b\u5230\u6237\u200b\uff08FTTH\uff09\u30015G\u200b\u56fa\u5b9a\u5f0f\u200b\u65e0\u7ebf\u200b</li> <li>\u200b\u516c\u53f8\u200b\u63a5\u5165\u200b\uff1a\u200b\u6709\u7ebf\u200b\u5c40\u57df\u7f51\u200b\u63a5\u5165\u200b\u3001\u200b\u65e0\u7ebf\u200b\u5c40\u57df\u7f51\u200b\u63a5\u5165\u200b</li> <li>\u200b\u5e7f\u57df\u200b\u65e0\u7ebf\u200b\u63a5\u5165\u200b\uff1a\u200b\u8702\u7a9d\u200b\u7f51\u200b\u63a5\u5165\u200b</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91%E9%A2%98%E7%9B%AE/#r5","title":"R5","text":"<p>\u200b\u7b54\u200b\uff1aHFC\u200b\u5728\u200b\u7528\u6237\u200b\u95f4\u200b\u662f\u200b\u5171\u4eab\u200b\u7684\u200b\u3002\u200b\u4e0b\u884c\u200bHFC\u200b\u4fe1\u9053\u200b\u4e2d\u200b\u4e0d\u4f1a\u200b\u51fa\u73b0\u200b\u78b0\u649e\u200b\uff0c\u200b\u4e0b\u884c\u200b\u4fe1\u9053\u200b\u5373\u200b\u7528\u6237\u200b\u63a5\u53d7\u200b\u7ecf\u200b\u7535\u7f06\u5934\u200b\u7aef\u200b\u4f20\u6765\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u53d1\u751f\u200b\u78b0\u649e\u200b\u3002\u200b\u5728\u200b\u4e0a\u884c\u200b\u4fe1\u9053\u200b\u624d\u200b\u4f1a\u200b\u56e0\u4e3a\u200b\u5171\u4eab\u200b\u800c\u200b\u53d1\u751f\u200b\u78b0\u649e\u200b\u3002</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/category/%E7%AE%97%E6%B3%95%E6%AF%94%E8%B5%9B/","title":"\u7b97\u6cd5\u200b\u6bd4\u8d5b","text":""},{"location":"blog/category/%E7%AC%94%E8%AF%95/","title":"\u7b14\u8bd5","text":""},{"location":"blog/category/%E6%95%B0%E5%AD%A6/","title":"\u6570\u5b66","text":""},{"location":"blog/page/2/","title":"Blog","text":""}]}